{
	"id": "90ff9858dde1c86c905406a6451c1160",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WGMapprover.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\ncontract Approver {\n    bytes public x ;\n    // function approver (address contract_address , address spender , uint8 amount) external  {\n    //      //bytes memory encodedData = \"0xc292633e5eef92ab7edc697475bda42257ae9897c520dfbbd8cb1c43bbae73ea\";\n    //     (bool success, bytes memory returnData) = contract_address.call(bytes4(keccak256(\"approve(address spender, uint256 amount)\")));\n    //      x = returnData; \n    // }\n    function approveOtherContract(IERC20 token, address recipient , uint amount) public {\n        token.approve(recipient, 1e18 );\n    }\n   \n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WGMapprover.sol": {
				"Approver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveOtherContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WGMapprover.sol\":115:684  contract Approver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WGMapprover.sol\":115:684  contract Approver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xdfa95e5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WGMapprover.sol\":139:153  bytes public x */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WGMapprover.sol\":545:677  function approveOtherContract(IERC20 token, address recipient , uint amount) public {... */\n    tag_4:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/WGMapprover.sol\":139:153  bytes public x */\n    tag_6:\n      0x00\n      dup1\n      sload\n      tag_13\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_15\n      swap1\n      tag_14\n      jump\t// in\n    tag_15:\n      dup1\n      iszero\n      tag_16\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_17\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_16)\n    tag_17:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_18:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_18\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/WGMapprover.sol\":545:677  function approveOtherContract(IERC20 token, address recipient , uint amount) public {... */\n    tag_12:\n        /* \"contracts/WGMapprover.sol\":639:670  token.approve(recipient, 1e18 ) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1802:1834   */\n      dup4\n      dup2\n      and\n        /* \"contracts/WGMapprover.sol\":639:670  token.approve(recipient, 1e18 ) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1784:1835   */\n      mstore\n        /* \"contracts/WGMapprover.sol\":664:668  1e18 */\n      0x0de0b6b3a7640000\n        /* \"#utility.yul\":1851:1869   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1844:1878   */\n      mstore\n        /* \"contracts/WGMapprover.sol\":639:652  token.approve */\n      dup5\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1757:1775   */\n      0x44\n      add\n        /* \"contracts/WGMapprover.sol\":639:670  token.approve(recipient, 1e18 ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      pop\n        /* \"contracts/WGMapprover.sol\":545:677  function approveOtherContract(IERC20 token, address recipient , uint amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:560   */\n    tag_8:\n        /* \"#utility.yul\":124:128   */\n      0x00\n        /* \"#utility.yul\":153:155   */\n      0x20\n        /* \"#utility.yul\":182:184   */\n      dup1\n        /* \"#utility.yul\":171:180   */\n      dup4\n        /* \"#utility.yul\":164:185   */\n      mstore\n        /* \"#utility.yul\":214:220   */\n      dup4\n        /* \"#utility.yul\":208:221   */\n      mload\n        /* \"#utility.yul\":257:263   */\n      dup1\n        /* \"#utility.yul\":252:254   */\n      dup3\n        /* \"#utility.yul\":241:250   */\n      dup6\n        /* \"#utility.yul\":237:255   */\n      add\n        /* \"#utility.yul\":230:264   */\n      mstore\n        /* \"#utility.yul\":282:283   */\n      0x00\n        /* \"#utility.yul\":292:432   */\n    tag_29:\n        /* \"#utility.yul\":306:312   */\n      dup2\n        /* \"#utility.yul\":303:304   */\n      dup2\n        /* \"#utility.yul\":300:313   */\n      lt\n        /* \"#utility.yul\":292:432   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":401:415   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":397:420   */\n      dup4\n      add\n        /* \"#utility.yul\":391:421   */\n      mload\n        /* \"#utility.yul\":367:384   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":386:388   */\n      0x40\n        /* \"#utility.yul\":363:389   */\n      add\n        /* \"#utility.yul\":356:422   */\n      mstore\n        /* \"#utility.yul\":321:331   */\n      dup3\n      add\n        /* \"#utility.yul\":292:432   */\n      jump(tag_29)\n    tag_31:\n        /* \"#utility.yul\":296:299   */\n      pop\n        /* \"#utility.yul\":481:482   */\n      0x00\n        /* \"#utility.yul\":476:478   */\n      0x40\n        /* \"#utility.yul\":467:473   */\n      dup3\n        /* \"#utility.yul\":456:465   */\n      dup7\n        /* \"#utility.yul\":452:474   */\n      add\n        /* \"#utility.yul\":448:479   */\n      add\n        /* \"#utility.yul\":441:483   */\n      mstore\n        /* \"#utility.yul\":551:553   */\n      0x40\n        /* \"#utility.yul\":544:546   */\n      0x1f\n        /* \"#utility.yul\":540:547   */\n      not\n        /* \"#utility.yul\":535:537   */\n      0x1f\n        /* \"#utility.yul\":527:533   */\n      dup4\n        /* \"#utility.yul\":523:538   */\n      add\n        /* \"#utility.yul\":519:548   */\n      and\n        /* \"#utility.yul\":508:517   */\n      dup6\n        /* \"#utility.yul\":504:549   */\n      add\n        /* \"#utility.yul\":500:554   */\n      add\n        /* \"#utility.yul\":492:554   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:704   */\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":648:679   */\n      dup2\n      and\n        /* \"#utility.yul\":638:680   */\n      dup2\n      eq\n        /* \"#utility.yul\":628:698   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":694:695   */\n      0x00\n        /* \"#utility.yul\":691:692   */\n      dup1\n        /* \"#utility.yul\":684:696   */\n      revert\n        /* \"#utility.yul\":628:698   */\n    tag_33:\n        /* \"#utility.yul\":565:704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":709:1194   */\n    tag_11:\n        /* \"#utility.yul\":799:805   */\n      0x00\n        /* \"#utility.yul\":807:813   */\n      dup1\n        /* \"#utility.yul\":815:821   */\n      0x00\n        /* \"#utility.yul\":868:870   */\n      0x60\n        /* \"#utility.yul\":856:865   */\n      dup5\n        /* \"#utility.yul\":847:854   */\n      dup7\n        /* \"#utility.yul\":843:866   */\n      sub\n        /* \"#utility.yul\":839:871   */\n      slt\n        /* \"#utility.yul\":836:888   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":884:885   */\n      0x00\n        /* \"#utility.yul\":881:882   */\n      dup1\n        /* \"#utility.yul\":874:886   */\n      revert\n        /* \"#utility.yul\":836:888   */\n    tag_35:\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":910:933   */\n      calldataload\n        /* \"#utility.yul\":942:981   */\n      tag_36\n        /* \"#utility.yul\":975:980   */\n      dup2\n        /* \"#utility.yul\":942:981   */\n      tag_26\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1000:1005   */\n      swap3\n      pop\n        /* \"#utility.yul\":1057:1059   */\n      0x20\n        /* \"#utility.yul\":1042:1060   */\n      dup5\n      add\n        /* \"#utility.yul\":1029:1061   */\n      calldataload\n        /* \"#utility.yul\":1070:1111   */\n      tag_37\n        /* \"#utility.yul\":1029:1061   */\n      dup2\n        /* \"#utility.yul\":1070:1111   */\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":709:1194   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1130:1137   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1184:1186   */\n      0x40\n        /* \"#utility.yul\":1169:1187   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1156:1188   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":709:1194   */\n      jump\t// out\n        /* \"#utility.yul\":1199:1579   */\n    tag_14:\n        /* \"#utility.yul\":1278:1279   */\n      0x01\n        /* \"#utility.yul\":1274:1286   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":1321:1333   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":1342:1403   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":1396:1400   */\n      0x7f\n        /* \"#utility.yul\":1388:1394   */\n      dup3\n        /* \"#utility.yul\":1384:1401   */\n      and\n        /* \"#utility.yul\":1374:1401   */\n      swap2\n      pop\n        /* \"#utility.yul\":1342:1403   */\n    tag_39:\n        /* \"#utility.yul\":1449:1451   */\n      0x20\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1438:1452   */\n      lt\n        /* \"#utility.yul\":1418:1436   */\n      dup2\n        /* \"#utility.yul\":1415:1453   */\n      sub\n        /* \"#utility.yul\":1412:1573   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1495:1505   */\n      0x4e487b71\n        /* \"#utility.yul\":1490:1493   */\n      0xe0\n        /* \"#utility.yul\":1486:1506   */\n      shl\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1476:1507   */\n      mstore\n        /* \"#utility.yul\":1530:1534   */\n      0x22\n        /* \"#utility.yul\":1527:1528   */\n      0x04\n        /* \"#utility.yul\":1520:1535   */\n      mstore\n        /* \"#utility.yul\":1558:1562   */\n      0x24\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1548:1563   */\n      revert\n        /* \"#utility.yul\":1412:1573   */\n    tag_40:\n      pop\n        /* \"#utility.yul\":1199:1579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1889:2166   */\n    tag_25:\n        /* \"#utility.yul\":1956:1962   */\n      0x00\n        /* \"#utility.yul\":2009:2011   */\n      0x20\n        /* \"#utility.yul\":1997:2006   */\n      dup3\n        /* \"#utility.yul\":1988:1995   */\n      dup5\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2029   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2022:2023   */\n      dup1\n        /* \"#utility.yul\":2015:2027   */\n      revert\n        /* \"#utility.yul\":1977:2029   */\n    tag_43:\n        /* \"#utility.yul\":2057:2066   */\n      dup2\n        /* \"#utility.yul\":2051:2067   */\n      mload\n        /* \"#utility.yul\":2110:2115   */\n      dup1\n        /* \"#utility.yul\":2103:2116   */\n      iszero\n        /* \"#utility.yul\":2096:2117   */\n      iszero\n        /* \"#utility.yul\":2089:2094   */\n      dup2\n        /* \"#utility.yul\":2086:2118   */\n      eq\n        /* \"#utility.yul\":2076:2136   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":2132:2133   */\n      0x00\n        /* \"#utility.yul\":2129:2130   */\n      dup1\n        /* \"#utility.yul\":2122:2134   */\n      revert\n        /* \"#utility.yul\":2076:2136   */\n    tag_44:\n        /* \"#utility.yul\":2155:2160   */\n      swap4\n        /* \"#utility.yul\":1889:2166   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d981c69f4c8faf3243e4e96b716ea7916c00858b09c62d633673ab1d2d5b0fcf64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102a78061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80630c55699c14610038578063dfa95e5b14610056575b5f80fd5b61004061006b565b60405161004d9190610173565b60405180910390f35b6100696100643660046101d5565b6100f6565b005b5f805461007790610213565b80601f01602080910402602001604051908101604052809291908181526020018280546100a390610213565b80156100ee5780601f106100c5576101008083540402835291602001916100ee565b820191905f5260205f20905b8154815290600101906020018083116100d157829003601f168201915b505050505081565b60405163095ea7b360e01b81526001600160a01b038381166004830152670de0b6b3a7640000602483015284169063095ea7b3906044016020604051808303815f875af1158015610149573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061016d919061024b565b50505050565b5f6020808352835180828501525f5b8181101561019e57858101830151858201604001528201610182565b505f604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146101d2575f80fd5b50565b5f805f606084860312156101e7575f80fd5b83356101f2816101be565b92506020840135610202816101be565b929592945050506040919091013590565b600181811c9082168061022757607f821691505b60208210810361024557634e487b7160e01b5f52602260045260245ffd5b50919050565b5f6020828403121561025b575f80fd5b8151801515811461026a575f80fd5b939250505056fea2646970667358221220d981c69f4c8faf3243e4e96b716ea7916c00858b09c62d633673ab1d2d5b0fcf64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A7 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xDFA95E5B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0x64 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x77 SWAP1 PUSH2 0x213 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3 SWAP1 PUSH2 0x213 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x24B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x182 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F2 DUP2 PUSH2 0x1BE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x202 DUP2 PUSH2 0x1BE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x227 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 DUP2 0xC6 SWAP16 0x4C DUP16 0xAF ORIGIN NUMBER 0xE4 0xE9 PUSH12 0x716EA7916C00858B09C62D63 CALLDATASIZE PUSH20 0xAB1D2D5B0FCF64736F6C63430008140033000000 ",
							"sourceMap": "115:569:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@approveOtherContract_100": {
									"entryPoint": 246,
									"id": 100,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@x_82": {
									"entryPoint": 107,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77t_addresst_uint256": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_rational_1000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2168:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:427:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "143:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "153:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "147:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "171:9:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "182:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "164:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "164:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "164:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "194:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "214:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "208:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "208:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "198:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "241:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "252:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:18:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "257:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "230:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "230:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "273:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "282:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "277:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "371:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "382:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "367:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "367:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "386:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "363:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "363:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "405:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "413:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "401:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "401:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "417:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "397:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "397:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "391:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "391:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "356:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "356:66:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "356:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "303:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "306:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "314:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "316:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "325:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "328:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "321:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "321:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "316:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:2",
																"statements": []
															},
															"src": "292:140:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "456:9:2"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "467:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "452:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "452:22:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "476:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "448:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "448:31:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "481:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "441:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "441:42:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "492:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "508:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "527:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "535:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "523:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "523:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "544:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "540:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "540:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "519:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "519:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "504:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "551:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "492:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "102:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "113:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "124:4:2",
														"type": ""
													}
												],
												"src": "14:546:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "618:86:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "694:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "641:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "652:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "667:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "672:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "663:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "663:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "676:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "659:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "659:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "648:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "648:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:50:2"
															},
															"nodeType": "YulIf",
															"src": "628:70:2"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "607:5:2",
														"type": ""
													}
												],
												"src": "565:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:368:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "872:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "884:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "874:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "874:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "874:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "847:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "856:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "843:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "843:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "868:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "839:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:32:2"
															},
															"nodeType": "YulIf",
															"src": "836:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "897:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "923:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "910:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "901:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "975:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "942:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "990:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1000:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1014:47:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:32:2"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1018:7:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1103:7:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "1070:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1070:41:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:17:2",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1130:7:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1146:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1173:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1169:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1156:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1146:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "776:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "787:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "799:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "807:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "815:6:2",
														"type": ""
													}
												],
												"src": "709:485:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1254:325:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1264:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1281:4:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1264:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1295:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1325:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1321:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1299:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1372:31:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1374:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1388:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1396:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1384:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1384:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1352:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:26:2"
															},
															"nodeType": "YulIf",
															"src": "1342:61:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1462:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1483:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1490:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1495:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1486:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1486:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1476:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1476:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1476:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1527:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1530:4:2",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1520:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1520:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1520:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1555:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1558:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1548:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1548:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1548:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1418:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1441:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1438:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1415:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:38:2"
															},
															"nodeType": "YulIf",
															"src": "1412:161:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1234:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1243:6:2",
														"type": ""
													}
												],
												"src": "1199:380:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:145:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1749:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1772:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1749:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1822:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1827:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1818:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1818:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1831:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1814:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1814:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1855:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1866:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1871:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1844:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1700:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1711:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1719:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1730:4:2",
														"type": ""
													}
												],
												"src": "1584:300:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:199:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2015:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:32:2"
															},
															"nodeType": "YulIf",
															"src": "1977:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2038:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2057:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2042:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2120:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2129:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2132:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2122:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2122:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2122:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2089:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2110:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2103:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2103:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2096:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2096:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2086:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2086:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:40:2"
															},
															"nodeType": "YulIf",
															"src": "2076:60:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2145:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2155:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1933:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1944:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1956:6:2",
														"type": ""
													}
												],
												"src": "1889:277:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$77t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_rational_1000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80630c55699c14610038578063dfa95e5b14610056575b5f80fd5b61004061006b565b60405161004d9190610173565b60405180910390f35b6100696100643660046101d5565b6100f6565b005b5f805461007790610213565b80601f01602080910402602001604051908101604052809291908181526020018280546100a390610213565b80156100ee5780601f106100c5576101008083540402835291602001916100ee565b820191905f5260205f20905b8154815290600101906020018083116100d157829003601f168201915b505050505081565b60405163095ea7b360e01b81526001600160a01b038381166004830152670de0b6b3a7640000602483015284169063095ea7b3906044016020604051808303815f875af1158015610149573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061016d919061024b565b50505050565b5f6020808352835180828501525f5b8181101561019e57858101830151858201604001528201610182565b505f604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146101d2575f80fd5b50565b5f805f606084860312156101e7575f80fd5b83356101f2816101be565b92506020840135610202816101be565b929592945050506040919091013590565b600181811c9082168061022757607f821691505b60208210810361024557634e487b7160e01b5f52602260045260245ffd5b50919050565b5f6020828403121561025b575f80fd5b8151801515811461026a575f80fd5b939250505056fea2646970667358221220d981c69f4c8faf3243e4e96b716ea7916c00858b09c62d633673ab1d2d5b0fcf64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xDFA95E5B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0x64 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x77 SWAP1 PUSH2 0x213 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3 SWAP1 PUSH2 0x213 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x24B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x182 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F2 DUP2 PUSH2 0x1BE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x202 DUP2 PUSH2 0x1BE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x227 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 DUP2 0xC6 SWAP16 0x4C DUP16 0xAF ORIGIN NUMBER 0xE4 0xE9 PUSH12 0x716EA7916C00858B09C62D63 CALLDATASIZE PUSH20 0xAB1D2D5B0FCF64736F6C63430008140033000000 ",
							"sourceMap": "115:569:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;139:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;545:132;;;;;;:::i;:::-;;:::i;:::-;;139:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;545:132::-;639:31;;-1:-1:-1;;;639:31:1;;-1:-1:-1;;;;;1802:32:2;;;639:31:1;;;1784:51:2;664:4:1;1851:18:2;;;1844:34;639:13:1;;;;;1757:18:2;;639:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;545:132;;;:::o;14:546:2:-;124:4;153:2;182;171:9;164:21;214:6;208:13;257:6;252:2;241:9;237:18;230:34;282:1;292:140;306:6;303:1;300:13;292:140;;;401:14;;;397:23;;391:30;367:17;;;386:2;363:26;356:66;321:10;;292:140;;;296:3;481:1;476:2;467:6;456:9;452:22;448:31;441:42;551:2;544;540:7;535:2;527:6;523:15;519:29;508:9;504:45;500:54;492:62;;;;14:546;;;;:::o;565:139::-;-1:-1:-1;;;;;648:31:2;;638:42;;628:70;;694:1;691;684:12;628:70;565:139;:::o;709:485::-;799:6;807;815;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;923:9;910:23;942:39;975:5;942:39;:::i;:::-;1000:5;-1:-1:-1;1057:2:2;1042:18;;1029:32;1070:41;1029:32;1070:41;:::i;:::-;709:485;;1130:7;;-1:-1:-1;;;1184:2:2;1169:18;;;;1156:32;;709:485::o;1199:380::-;1278:1;1274:12;;;;1321;;;1342:61;;1396:4;1388:6;1384:17;1374:27;;1342:61;1449:2;1441:6;1438:14;1418:18;1415:38;1412:161;;1495:10;1490:3;1486:20;1483:1;1476:31;1530:4;1527:1;1520:15;1558:4;1555:1;1548:15;1412:161;;1199:380;;;:::o;1889:277::-;1956:6;2009:2;1997:9;1988:7;1984:23;1980:32;1977:52;;;2025:1;2022;2015:12;1977:52;2057:9;2051:16;2110:5;2103:13;2096:21;2089:5;2086:32;2076:60;;2132:1;2129;2122:12;2076:60;2155:5;1889:277;-1:-1:-1;;;1889:277:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "135800",
								"executionCost": "181",
								"totalCost": "135981"
							},
							"external": {
								"approveOtherContract(address,address,uint256)": "infinite",
								"x()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 115,
									"end": 684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 684,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d981c69f4c8faf3243e4e96b716ea7916c00858b09c62d633673ab1d2d5b0fcf64736f6c63430008140033",
									".code": [
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "C55699C"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "DFA95E5B"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 545,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 545,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 545,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 664,
											"end": 668,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 639,
											"end": 652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 639,
											"end": 652,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 639,
											"end": 652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1775,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1757,
											"end": 1775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 639,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 560,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 124,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 164,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 214,
											"end": 220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 208,
											"end": 221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 257,
											"end": 263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 241,
											"end": 250,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 237,
											"end": 255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 230,
											"end": 264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 432,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 300,
											"end": 313,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 292,
											"end": 432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 292,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 401,
											"end": 415,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 401,
											"end": 415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 397,
											"end": 420,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 397,
											"end": 420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 391,
											"end": 421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 367,
											"end": 384,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 367,
											"end": 384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 367,
											"end": 384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 321,
											"end": 331,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 321,
											"end": 331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 292,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 432,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 292,
											"end": 432,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 296,
											"end": 299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 456,
											"end": 465,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 452,
											"end": 474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 448,
											"end": 479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 441,
											"end": 483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 551,
											"end": 553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 540,
											"end": 547,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 523,
											"end": 538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 519,
											"end": 548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 508,
											"end": 517,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 504,
											"end": 549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 492,
											"end": 554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 492,
											"end": 554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 492,
											"end": 554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 492,
											"end": 554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 560,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14,
											"end": 560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 648,
											"end": 679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 638,
											"end": 680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 638,
											"end": 680,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 628,
											"end": 698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 694,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 696,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 698,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 628,
											"end": 698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 709,
											"end": 1194,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 709,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 813,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 815,
											"end": 821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 856,
											"end": 865,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 843,
											"end": 866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 839,
											"end": 871,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 888,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 836,
											"end": 888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 886,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 836,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 910,
											"end": 933,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 975,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 942,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 981,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 942,
											"end": 981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1005,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1070,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1070,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 1194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 709,
											"end": 1194,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1188,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 709,
											"end": 1194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1579,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1199,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1342,
											"end": 1403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1403,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1342,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1452,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1562,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1563,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1573,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2166,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1889,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2118,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2076,
											"end": 2136,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2134,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2076,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2166,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/WGMapprover.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveOtherContract(address,address,uint256)": "dfa95e5b",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveOtherContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WGMapprover.sol\":\"Approver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/WGMapprover.sol\":{\"keccak256\":\"0xf5bffe1fd0981e26e71d76fae0f1f5fbf7f83c62c2dcc0dba875a52ae6c8629d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8bc3fccb0037beb3d2773fa0cdb0c7aba8b5780d64baeec0d8e3284bb5a1532\",\"dweb:/ipfs/QmTvidGGfNkqMPt27csttAsctvuvaKeQPkqsP3nhRo4xLN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/WGMapprover.sol:Approver",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes_storage"
							}
						],
						"types": {
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/WGMapprover.sol:12:69:\n   |\n12 |     function approveOtherContract(IERC20 token, address recipient , uint amount) public {\n   |                                                                     ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 620,
					"file": "contracts/WGMapprover.sol",
					"start": 609
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"contracts/WGMapprover.sol": {
				"ast": {
					"absolutePath": "contracts/WGMapprover.sol",
					"exportedSymbols": {
						"Approver": [
							101
						],
						"IERC20": [
							77
						]
					},
					"id": 102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Approver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "Approver",
							"nameLocation": "124:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0c55699c",
									"id": 82,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "152:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "139:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 81,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "139:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "629:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "653:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31653138",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "664:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"id": 92,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "639:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "645:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "639:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "639:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "639:31:1"
											}
										]
									},
									"functionSelector": "dfa95e5b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveOtherContract",
									"nameLocation": "554:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "582:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "575:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 84,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 83,
														"name": "IERC20",
														"nameLocations": [
															"575:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "575:6:1"
													},
													"referencedDeclaration": 77,
													"src": "575:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "597:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "589:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "614:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "609:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "609:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:47:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:1"
									},
									"scope": 101,
									"src": "545:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "115:569:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:651:1"
				},
				"id": 1
			}
		}
	}
}