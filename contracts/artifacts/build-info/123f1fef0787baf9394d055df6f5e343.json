{
	"id": "123f1fef0787baf9394d055df6f5e343",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/usdt.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\n/**\n *Submitted for verification at BscScan.com on 2020-12-07\n*/\n\npragma solidity 0.5.16;\n\ninterface IUSDT {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint256);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract Usdt is Context, IUSDT, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"USDT Token\";\n    _symbol = \"USDT\";\n    _decimals = 18;\n    _totalSupply = 100000000000000000000000000;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint256) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {USDT-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {USDT-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {USDT-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {USDT-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {USDT-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {USDT-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {USDT};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {USDT-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {USDT-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"USDT: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"USDT: transfer from the zero address\");\n    require(recipient != address(0), \"USDT: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"USDT: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"USDT: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"USDT: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"USDT: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"USDT: approve from the zero address\");\n    require(spender != address(0), \"USDT: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"USDT: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/usdt.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/usdt.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/usdt.sol\":{\"keccak256\":\"0x678352f709ffa5534a392f6eaf9b1478e04866df20c0076f9f4649fe4719cafe\",\"urls\":[\"bzz-raw://fbf8b2bae5d259718ba3c877b6230f6ba369cb35649cfc4e481174acbf472f2e\",\"dweb:/ipfs/QmR8CdXJX2UvSRoXqD3MGAbrNtGDS7jmVBzyRTboefWLzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IUSDT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/usdt.sol\":\"IUSDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/usdt.sol\":{\"keccak256\":\"0x678352f709ffa5534a392f6eaf9b1478e04866df20c0076f9f4649fe4719cafe\",\"urls\":[\"bzz-raw://fbf8b2bae5d259718ba3c877b6230f6ba369cb35649cfc4e481174acbf472f2e\",\"dweb:/ipfs/QmR8CdXJX2UvSRoXqD3MGAbrNtGDS7jmVBzyRTboefWLzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/usdt.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/usdt.sol\":{\"keccak256\":\"0x678352f709ffa5534a392f6eaf9b1478e04866df20c0076f9f4649fe4719cafe\",\"urls\":[\"bzz-raw://fbf8b2bae5d259718ba3c877b6230f6ba369cb35649cfc4e481174acbf472f2e\",\"dweb:/ipfs/QmR8CdXJX2UvSRoXqD3MGAbrNtGDS7jmVBzyRTboefWLzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/usdt.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/usdt.sol\":4581:8875  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/usdt.sol\":4581:8875  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582021f9e77f197e9b8123af503a2a6d0e25d8e580265d2c6b6756aed9cd9baf13ff64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582021f9e77f197e9b8123af503a2a6d0e25d8e580265d2c6b6756aed9cd9baf13ff64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x21 0xF9 0xE7 PUSH32 0x197E9B8123AF503A2A6D0E25D8E580265D2C6B6756AED9CD9BAF13FF64736F6C PUSH4 0x43000510 STOP ORIGIN ",
							"sourceMap": "4581:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582021f9e77f197e9b8123af503a2a6d0e25d8e580265d2c6b6756aed9cd9baf13ff64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x21 0xF9 0xE7 PUSH32 0x197E9B8123AF503A2A6D0E25D8E580265D2C6B6756AED9CD9BAF13FF64736F6C PUSH4 0x43000510 STOP ORIGIN ",
							"sourceMap": "4581:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4581,
									"end": 8875,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4581,
									"end": 8875,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582021f9e77f197e9b8123af503a2a6d0e25d8e580265d2c6b6756aed9cd9baf13ff64736f6c63430005100032",
									".code": [
										{
											"begin": 4581,
											"end": 8875,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "ADDRESS"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "EQ"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "MSTORE"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "DUP1"
										},
										{
											"begin": 4581,
											"end": 8875,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/usdt.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/usdt.sol\":{\"keccak256\":\"0x678352f709ffa5534a392f6eaf9b1478e04866df20c0076f9f4649fe4719cafe\",\"urls\":[\"bzz-raw://fbf8b2bae5d259718ba3c877b6230f6ba369cb35649cfc4e481174acbf472f2e\",\"dweb:/ipfs/QmR8CdXJX2UvSRoXqD3MGAbrNtGDS7jmVBzyRTboefWLzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Usdt": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {USDT-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {USDT-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {USDT-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {USDT-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {USDT-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {USDT-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {USDT-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {USDT-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {USDT};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/usdt.sol\":11080:18622  contract Usdt is Context, IUSDT, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/usdt.sol\":11388:11630  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/usdt.sol\":9639:9656  address msgSender */\n  0x00\n    /* \"contracts/usdt.sol\":9659:9671  _msgSender() */\n  tag_7\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/usdt.sol\":9659:9669  _msgSender */\n  tag_8\n    /* \"contracts/usdt.sol\":9659:9671  _msgSender() */\n  and\n  jump\t// in\ntag_7:\n    /* \"contracts/usdt.sol\":9677:9683  _owner */\n  0x00\n    /* \"contracts/usdt.sol\":9677:9695  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/usdt.sol\":9706:9749  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/usdt.sol\":9677:9695  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/usdt.sol\":9706:9749  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/usdt.sol\":9677:9683  _owner */\n  dup3\n  swap1\n    /* \"contracts/usdt.sol\":9706:9749  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/usdt.sol\":11415:11435  _name = \"USDT Token\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0a\n  dup1\n  dup3\n  mstore\n  shl(0xb1, 0x2aa9a22a102a37b5b2b7)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"contracts/usdt.sol\":11415:11420  _name */\n  0x06\n  swap2\n    /* \"contracts/usdt.sol\":11415:11435  _name = \"USDT Token\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/usdt.sol\":11441:11457  _symbol = \"USDT\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe2, 0x1554d115)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"contracts/usdt.sol\":11441:11448  _symbol */\n  0x05\n  swap2\n    /* \"contracts/usdt.sol\":11441:11457  _symbol = \"USDT\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/usdt.sol\":11463:11472  _decimals */\n  0x04\n    /* \"contracts/usdt.sol\":11463:11477  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/usdt.sol\":11475:11477  18 */\n  0x12\n    /* \"contracts/usdt.sol\":11463:11477  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/usdt.sol\":11498:11525  100000000000000000000000000 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/usdt.sol\":11483:11495  _totalSupply */\n  0x03\n    /* \"contracts/usdt.sol\":11483:11525  _totalSupply = 100000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/usdt.sol\":11541:11551  msg.sender */\n  caller\n    /* \"contracts/usdt.sol\":11463:11472  _decimals */\n  0x00\n    /* \"contracts/usdt.sol\":11531:11552  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/usdt.sol\":11463:11477  _decimals = 18 */\n  0x01\n    /* \"contracts/usdt.sol\":11531:11552  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/usdt.sol\":11531:11567  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/usdt.sol\":11579:11625  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/usdt.sol\":11541:11551  msg.sender */\n  swap3\n  swap4\n    /* \"contracts/usdt.sol\":11463:11472  _decimals */\n  swap2\n  swap3\n    /* \"contracts/usdt.sol\":11579:11625  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/usdt.sol\":11080:18622  contract Usdt is Context, IUSDT, Ownable {... */\n  jump(tag_13)\n    /* \"contracts/usdt.sol\":3707:3797  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/usdt.sol\":3782:3792  msg.sender */\n  caller\n    /* \"contracts/usdt.sol\":3707:3797  function _msgSender() internal view returns (address payable) {... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"contracts/usdt.sol\":11080:18622  contract Usdt is Context, IUSDT, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/usdt.sol\":11080:18622  contract Usdt is Context, IUSDT, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/usdt.sol\":11080:18622  contract Usdt is Context, IUSDT, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/usdt.sol\":12076:12153  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_27:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/usdt.sol\":12076:12153  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/usdt.sol\":13066:13207  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":13066:13207  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/usdt.sol\":12203:12288  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/usdt.sol\":13636:13923  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":13636:13923  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_38\n      jump\t// in\n        /* \"contracts/usdt.sol\":11816:11895  function decimals() external view returns (uint256) {... */\n    tag_7:\n      tag_34\n      tag_40\n      jump\t// in\n        /* \"contracts/usdt.sol\":11313:11335  uint8 public _decimals */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/usdt.sol\":14290:14487  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":14290:14487  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"contracts/usdt.sol\":12336:12440  function balanceOf(address account) external view returns (uint256) {... */\n    tag_10:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"contracts/usdt.sol\":12336:12440  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"contracts/usdt.sol\":10405:10532  function renounceOwnership() public onlyOwner {... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/usdt.sol\":11685:11762  function getOwner() external view returns (address) {... */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/usdt.sol\":9822:9893  function owner() public view returns (address) {... */\n    tag_13:\n      tag_51\n      tag_54\n      jump\t// in\n        /* \"contracts/usdt.sol\":11947:12028  function symbol() external view returns (string memory) {... */\n    tag_14:\n      tag_25\n      tag_56\n      jump\t// in\n        /* \"contracts/usdt.sol\":15379:15496  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_15:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n      pop\n        /* \"contracts/usdt.sol\":15379:15496  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      calldataload\n      tag_63\n      jump\t// in\n        /* \"contracts/usdt.sol\":14942:15189  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":14942:15189  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"contracts/usdt.sol\":12623:12770  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":12623:12770  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"contracts/usdt.sol\":11339:11360  string public _symbol */\n    tag_18:\n      tag_25\n      tag_71\n      jump\t// in\n        /* \"contracts/usdt.sol\":11364:11383  string public _name */\n    tag_19:\n      tag_25\n      tag_77\n      jump\t// in\n        /* \"contracts/usdt.sol\":12818:12946  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_20:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":12818:12946  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_84\n      jump\t// in\n        /* \"contracts/usdt.sol\":10671:10772  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n      pop\n        /* \"contracts/usdt.sol\":10671:10772  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_87\n      jump\t// in\n        /* \"contracts/usdt.sol\":12076:12153  function name() external view returns (string memory) {... */\n    tag_26:\n        /* \"contracts/usdt.sol\":12143:12148  _name */\n      0x06\n        /* \"contracts/usdt.sol\":12136:12148  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":12115:12128  string memory */\n      0x60\n      swap4\n        /* \"contracts/usdt.sol\":12136:12148  return _name */\n      swap1\n      swap3\n        /* \"contracts/usdt.sol\":12143:12148  _name */\n      swap1\n      swap2\n        /* \"contracts/usdt.sol\":12136:12148  return _name */\n      dup4\n      add\n        /* \"contracts/usdt.sol\":12143:12148  _name */\n      dup3\n        /* \"contracts/usdt.sol\":12136:12148  return _name */\n      dup3\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/usdt.sol\":12076:12153  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/usdt.sol\":13066:13207  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_33:\n        /* \"contracts/usdt.sol\":13134:13138  bool */\n      0x00\n        /* \"contracts/usdt.sol\":13146:13185  _approve(_msgSender(), spender, amount) */\n      tag_93\n        /* \"contracts/usdt.sol\":13155:13167  _msgSender() */\n      tag_94\n        /* \"contracts/usdt.sol\":13155:13165  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":13155:13167  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/usdt.sol\":13169:13176  spender */\n      dup5\n        /* \"contracts/usdt.sol\":13178:13184  amount */\n      dup5\n        /* \"contracts/usdt.sol\":13146:13154  _approve */\n      tag_96\n        /* \"contracts/usdt.sol\":13146:13185  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"contracts/usdt.sol\":13198:13202  true */\n      0x01\n        /* \"contracts/usdt.sol\":13066:13207  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":12203:12288  function totalSupply() external view returns (uint256) {... */\n    tag_35:\n        /* \"contracts/usdt.sol\":12271:12283  _totalSupply */\n      sload(0x03)\n        /* \"contracts/usdt.sol\":12203:12288  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/usdt.sol\":13636:13923  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_38:\n        /* \"contracts/usdt.sol\":13727:13731  bool */\n      0x00\n        /* \"contracts/usdt.sol\":13739:13775  _transfer(sender, recipient, amount) */\n      tag_99\n        /* \"contracts/usdt.sol\":13749:13755  sender */\n      dup5\n        /* \"contracts/usdt.sol\":13757:13766  recipient */\n      dup5\n        /* \"contracts/usdt.sol\":13768:13774  amount */\n      dup5\n        /* \"contracts/usdt.sol\":13739:13748  _transfer */\n      tag_100\n        /* \"contracts/usdt.sol\":13739:13775  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/usdt.sol\":13781:13901  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\")) */\n      tag_101\n        /* \"contracts/usdt.sol\":13790:13796  sender */\n      dup5\n        /* \"contracts/usdt.sol\":13798:13810  _msgSender() */\n      tag_102\n        /* \"contracts/usdt.sol\":13798:13808  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":13798:13810  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/usdt.sol\":13812:13900  _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\") */\n      tag_103\n        /* \"contracts/usdt.sol\":13850:13856  amount */\n      dup6\n        /* \"contracts/usdt.sol\":13812:13900  _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_48762184e6cc81b01f1cf7132221fcca5eb3c474c8add2ea70000c20f5565b7e\n      0x27\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":13812:13831  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":13812:13823  _allowances */\n      0x02\n        /* \"contracts/usdt.sol\":13812:13831  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/usdt.sol\":13832:13844  _msgSender() */\n      tag_104\n        /* \"contracts/usdt.sol\":13832:13842  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":13832:13844  _msgSender() */\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":13812:13845  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/usdt.sol\":13812:13900  _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/usdt.sol\":13812:13849  _allowances[sender][_msgSender()].sub */\n      tag_105\n        /* \"contracts/usdt.sol\":13812:13900  _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/usdt.sol\":13781:13789  _approve */\n      tag_96\n        /* \"contracts/usdt.sol\":13781:13901  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"USDT: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_101:\n      pop\n        /* \"contracts/usdt.sol\":13914:13918  true */\n      0x01\n        /* \"contracts/usdt.sol\":13636:13923  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":11816:11895  function decimals() external view returns (uint256) {... */\n    tag_40:\n        /* \"contracts/usdt.sol\":11881:11890  _decimals */\n      and(0xff, sload(0x04))\n        /* \"contracts/usdt.sol\":11816:11895  function decimals() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/usdt.sol\":11313:11335  uint8 public _decimals */\n    tag_42:\n      and(0xff, sload(0x04))\n      dup2\n      jump\t// out\n        /* \"contracts/usdt.sol\":14290:14487  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_45:\n        /* \"contracts/usdt.sol\":14370:14374  bool */\n      0x00\n        /* \"contracts/usdt.sol\":14382:14465  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_93\n        /* \"contracts/usdt.sol\":14391:14403  _msgSender() */\n      tag_109\n        /* \"contracts/usdt.sol\":14391:14401  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":14391:14403  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/usdt.sol\":14405:14412  spender */\n      dup5\n        /* \"contracts/usdt.sol\":14414:14464  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_103\n        /* \"contracts/usdt.sol\":14453:14463  addedValue */\n      dup6\n        /* \"contracts/usdt.sol\":14414:14425  _allowances */\n      0x02\n        /* \"contracts/usdt.sol\":14414:14439  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/usdt.sol\":14426:14438  _msgSender() */\n      tag_111\n        /* \"contracts/usdt.sol\":14426:14436  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":14426:14438  _msgSender() */\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":14414:14439  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/usdt.sol\":14414:14448  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/usdt.sol\":14414:14464  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/usdt.sol\":14414:14452  _allowances[_msgSender()][spender].add */\n      tag_112\n        /* \"contracts/usdt.sol\":14414:14464  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/usdt.sol\":12336:12440  function balanceOf(address account) external view returns (uint256) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":12417:12435  _balances[account] */\n      and\n        /* \"contracts/usdt.sol\":12395:12402  uint256 */\n      0x00\n        /* \"contracts/usdt.sol\":12417:12435  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":12417:12426  _balances */\n      0x01\n        /* \"contracts/usdt.sol\":12417:12435  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/usdt.sol\":12336:12440  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/usdt.sol\":10405:10532  function renounceOwnership() public onlyOwner {... */\n    tag_50:\n        /* \"contracts/usdt.sol\":10018:10030  _msgSender() */\n      tag_115\n        /* \"contracts/usdt.sol\":10018:10028  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":10018:10030  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/usdt.sol\":10008:10014  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/usdt.sol\":10008:10030  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/usdt.sol\":10000:10067  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_116\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/usdt.sol\":10499:10500  0 */\n      0x00\n        /* \"contracts/usdt.sol\":10483:10489  _owner */\n      dup1\n      sload\n        /* \"contracts/usdt.sol\":10462:10502  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":10483:10489  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/usdt.sol\":10462:10502  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/usdt.sol\":10499:10500  0 */\n      dup4\n      swap1\n        /* \"contracts/usdt.sol\":10462:10502  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/usdt.sol\":10525:10526  0 */\n      0x00\n        /* \"contracts/usdt.sol\":10508:10527  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/usdt.sol\":10405:10532  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/usdt.sol\":11685:11762  function getOwner() external view returns (address) {... */\n    tag_52:\n        /* \"contracts/usdt.sol\":11728:11735  address */\n      0x00\n        /* \"contracts/usdt.sol\":11750:11757  owner() */\n      tag_119\n        /* \"contracts/usdt.sol\":11750:11755  owner */\n      tag_54\n        /* \"contracts/usdt.sol\":11750:11757  owner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/usdt.sol\":11743:11757  return owner() */\n      swap1\n      pop\n        /* \"contracts/usdt.sol\":11685:11762  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/usdt.sol\":9822:9893  function owner() public view returns (address) {... */\n    tag_54:\n        /* \"contracts/usdt.sol\":9860:9867  address */\n      0x00\n        /* \"contracts/usdt.sol\":9882:9888  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/usdt.sol\":9822:9893  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/usdt.sol\":11947:12028  function symbol() external view returns (string memory) {... */\n    tag_56:\n        /* \"contracts/usdt.sol\":12016:12023  _symbol */\n      0x05\n        /* \"contracts/usdt.sol\":12009:12023  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":11988:12001  string memory */\n      0x60\n      swap4\n        /* \"contracts/usdt.sol\":12009:12023  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/usdt.sol\":12016:12023  _symbol */\n      swap1\n      swap2\n        /* \"contracts/usdt.sol\":12009:12023  return _symbol */\n      dup4\n      add\n        /* \"contracts/usdt.sol\":12016:12023  _symbol */\n      dup3\n        /* \"contracts/usdt.sol\":12009:12023  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n        /* \"contracts/usdt.sol\":15379:15496  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_63:\n        /* \"contracts/usdt.sol\":15435:15439  bool */\n      0x00\n        /* \"contracts/usdt.sol\":10018:10030  _msgSender() */\n      tag_126\n        /* \"contracts/usdt.sol\":10018:10028  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":10018:10030  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/usdt.sol\":10008:10014  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/usdt.sol\":10008:10030  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/usdt.sol\":10000:10067  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_127\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/usdt.sol\":15447:15474  _mint(_msgSender(), amount) */\n      tag_129\n        /* \"contracts/usdt.sol\":15453:15465  _msgSender() */\n      tag_130\n        /* \"contracts/usdt.sol\":15453:15463  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":15453:15465  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/usdt.sol\":15467:15473  amount */\n      dup4\n        /* \"contracts/usdt.sol\":15447:15452  _mint */\n      tag_131\n        /* \"contracts/usdt.sol\":15447:15474  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"contracts/usdt.sol\":15487:15491  true */\n      0x01\n        /* \"contracts/usdt.sol\":15379:15496  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":14942:15189  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_66:\n        /* \"contracts/usdt.sol\":15027:15031  bool */\n      0x00\n        /* \"contracts/usdt.sol\":15039:15167  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"USDT: decreased allowance below zero\")) */\n      tag_93\n        /* \"contracts/usdt.sol\":15048:15060  _msgSender() */\n      tag_134\n        /* \"contracts/usdt.sol\":15048:15058  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":15048:15060  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/usdt.sol\":15062:15069  spender */\n      dup5\n        /* \"contracts/usdt.sol\":15071:15166  _allowances[_msgSender()][spender].sub(subtractedValue, \"USDT: decreased allowance below zero\") */\n      tag_103\n        /* \"contracts/usdt.sol\":15110:15125  subtractedValue */\n      dup6\n        /* \"contracts/usdt.sol\":15071:15166  _allowances[_msgSender()][spender].sub(subtractedValue, \"USDT: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_209244f047a8224dd09938f43ca844bf644f39b7061501ffe1cc3ce9909b330b\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/usdt.sol\":15071:15082  _allowances */\n      0x02\n        /* \"contracts/usdt.sol\":15071:15096  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/usdt.sol\":15083:15095  _msgSender() */\n      tag_136\n        /* \"contracts/usdt.sol\":15083:15093  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":15083:15095  _msgSender() */\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":15071:15096  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/usdt.sol\":15071:15105  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/usdt.sol\":15071:15166  _allowances[_msgSender()][spender].sub(subtractedValue, \"USDT: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/usdt.sol\":15071:15109  _allowances[_msgSender()][spender].sub */\n      tag_105\n        /* \"contracts/usdt.sol\":15071:15166  _allowances[_msgSender()][spender].sub(subtractedValue, \"USDT: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/usdt.sol\":12623:12770  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_69:\n        /* \"contracts/usdt.sol\":12694:12698  bool */\n      0x00\n        /* \"contracts/usdt.sol\":12706:12748  _transfer(_msgSender(), recipient, amount) */\n      tag_93\n        /* \"contracts/usdt.sol\":12716:12728  _msgSender() */\n      tag_139\n        /* \"contracts/usdt.sol\":12716:12726  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":12716:12728  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/usdt.sol\":12730:12739  recipient */\n      dup5\n        /* \"contracts/usdt.sol\":12741:12747  amount */\n      dup5\n        /* \"contracts/usdt.sol\":12706:12715  _transfer */\n      tag_100\n        /* \"contracts/usdt.sol\":12706:12748  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/usdt.sol\":11339:11360  string public _symbol */\n    tag_71:\n      0x05\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/usdt.sol\":11364:11383  string public _name */\n    tag_77:\n      0x06\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n        /* \"contracts/usdt.sol\":12818:12946  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":12914:12932  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/usdt.sol\":12892:12899  uint256 */\n      0x00\n        /* \"contracts/usdt.sol\":12914:12932  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":12914:12925  _allowances */\n      0x02\n        /* \"contracts/usdt.sol\":12914:12932  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/usdt.sol\":12914:12941  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/usdt.sol\":12818:12946  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/usdt.sol\":10671:10772  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_87:\n        /* \"contracts/usdt.sol\":10018:10030  _msgSender() */\n      tag_148\n        /* \"contracts/usdt.sol\":10018:10028  _msgSender */\n      tag_95\n        /* \"contracts/usdt.sol\":10018:10030  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/usdt.sol\":10008:10014  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/usdt.sol\":10008:10030  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/usdt.sol\":10000:10067  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_149\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/usdt.sol\":10739:10767  _transferOwnership(newOwner) */\n      tag_151\n        /* \"contracts/usdt.sol\":10758:10766  newOwner */\n      dup2\n        /* \"contracts/usdt.sol\":10739:10757  _transferOwnership */\n      tag_152\n        /* \"contracts/usdt.sol\":10739:10767  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/usdt.sol\":10671:10772  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":3707:3797  function _msgSender() internal view returns (address payable) {... */\n    tag_95:\n        /* \"contracts/usdt.sol\":3782:3792  msg.sender */\n      caller\n        /* \"contracts/usdt.sol\":3707:3797  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/usdt.sol\":17926:18238  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":18015:18034  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/usdt.sol\":18007:18074  require(owner != address(0), \"USDT: approve from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_46b92c107683bd4bebb0fe39ab57ec138766b4510ca1e67d04027785004b14f6\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":18088:18109  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/usdt.sol\":18080:18147  require(spender != address(0), \"USDT: approve to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_adbc321b816a81a31e241db77c10a77dd37dbe8d1dd85d65bc5d681f7779acf4\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":18154:18172  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":18154:18165  _allowances */\n      0x02\n        /* \"contracts/usdt.sol\":18154:18172  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/usdt.sol\":18154:18181  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/usdt.sol\":18154:18190  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/usdt.sol\":18201:18233  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/usdt.sol\":17926:18238  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":15940:16379  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16033:16053  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/usdt.sol\":16025:16094  require(sender != address(0), \"USDT: transfer from the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b47312614118ca974cd1cb0785cf101003663749b22596bc8e7ea6ce64a4aa76\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16108:16131  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/usdt.sol\":16100:16170  require(recipient != address(0), \"USDT: transfer to the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_423f148df64af2854c983cfa14596dfe53761b85317edf4f394d9416b513853b\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/usdt.sol\":16197:16267  _balances[sender].sub(amount, \"USDT: transfer amount exceeds balance\") */\n      tag_160\n        /* \"contracts/usdt.sol\":16219:16225  amount */\n      dup2\n        /* \"contracts/usdt.sol\":16197:16267  _balances[sender].sub(amount, \"USDT: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_0ae587bda794751604922be67654f7ce009e430d2fb0a0638a0adf55cced3d54\n      0x25\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16197:16214  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":16197:16206  _balances */\n      0x01\n        /* \"contracts/usdt.sol\":16197:16214  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/usdt.sol\":16197:16267  _balances[sender].sub(amount, \"USDT: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/usdt.sol\":16197:16218  _balances[sender].sub */\n      tag_105\n        /* \"contracts/usdt.sol\":16197:16267  _balances[sender].sub(amount, \"USDT: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16177:16194  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":16177:16186  _balances */\n      0x01\n        /* \"contracts/usdt.sol\":16177:16194  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/usdt.sol\":16177:16267  _balances[sender] = _balances[sender].sub(amount, \"USDT: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/usdt.sol\":16296:16316  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/usdt.sol\":16296:16328  _balances[recipient].add(amount) */\n      tag_161\n      swap1\n        /* \"contracts/usdt.sol\":16321:16327  amount */\n      dup3\n        /* \"contracts/usdt.sol\":16296:16328  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/usdt.sol\":16296:16320  _balances[recipient].add */\n      tag_112\n        /* \"contracts/usdt.sol\":16296:16328  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16273:16293  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":16273:16282  _balances */\n      0x01\n        /* \"contracts/usdt.sol\":16273:16293  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/usdt.sol\":16273:16328  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/usdt.sol\":16339:16374  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/usdt.sol\":16273:16293  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/usdt.sol\":16339:16374  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/usdt.sol\":15940:16379  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":5604:5777  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"contracts/usdt.sol\":5690:5697  uint256 */\n      0x00\n        /* \"contracts/usdt.sol\":5721:5733  errorMessage */\n      dup2\n        /* \"contracts/usdt.sol\":5713:5719  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/usdt.sol\":5705:5734  require(b <= a, errorMessage) */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_164:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_164)\n    tag_166:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/usdt.sol\":5705:5734  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_167:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n      pop\n      pop\n      pop\n        /* \"contracts/usdt.sol\":5752:5757  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/usdt.sol\":5604:5777  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/usdt.sol\":4806:4968  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"contracts/usdt.sol\":4864:4871  uint256 */\n      0x00\n        /* \"contracts/usdt.sol\":4891:4896  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/usdt.sol\":4910:4916  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/usdt.sol\":4902:4948  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_169\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/usdt.sol\":4962:4963  c */\n      swap4\n        /* \"contracts/usdt.sol\":4806:4968  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":16629:16912  function _mint(address account, uint256 amount) internal {... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16700:16721  account != address(0) */\n      dup3\n      and\n        /* \"contracts/usdt.sol\":16692:16756  require(account != address(0), \"USDT: mint to the zero address\") */\n      tag_171\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x555344543a206d696e7420746f20746865207a65726f20616464726573730000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/usdt.sol\":16778:16790  _totalSupply */\n      sload(0x03)\n        /* \"contracts/usdt.sol\":16778:16802  _totalSupply.add(amount) */\n      tag_172\n      swap1\n        /* \"contracts/usdt.sol\":16795:16801  amount */\n      dup3\n        /* \"contracts/usdt.sol\":16778:16802  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"contracts/usdt.sol\":16778:16794  _totalSupply.add */\n      tag_112\n        /* \"contracts/usdt.sol\":16778:16802  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/usdt.sol\":16763:16775  _totalSupply */\n      0x03\n        /* \"contracts/usdt.sol\":16763:16802  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16829:16847  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":16829:16838  _balances */\n      0x01\n        /* \"contracts/usdt.sol\":16829:16847  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/usdt.sol\":16829:16859  _balances[account].add(amount) */\n      tag_173\n      swap1\n        /* \"contracts/usdt.sol\":16852:16858  amount */\n      dup3\n        /* \"contracts/usdt.sol\":16829:16859  _balances[account].add(amount) */\n      0xffffffff\n        /* \"contracts/usdt.sol\":16829:16851  _balances[account].add */\n      tag_112\n        /* \"contracts/usdt.sol\":16829:16859  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":16808:16826  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/usdt.sol\":16808:16817  _balances */\n      0x01\n        /* \"contracts/usdt.sol\":16808:16826  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/usdt.sol\":16808:16859  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/usdt.sol\":16870:16907  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/usdt.sol\":16808:16826  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/usdt.sol\":16870:16907  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/usdt.sol\":16629:16912  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/usdt.sol\":10865:11076  function _transferOwnership(address newOwner) internal {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/usdt.sol\":10934:10956  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/usdt.sol\":10926:10999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/usdt.sol\":11031:11037  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/usdt.sol\":11010:11048  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/usdt.sol\":11031:11037  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/usdt.sol\":11010:11048  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/usdt.sol\":11054:11060  _owner */\n      0x00\n        /* \"contracts/usdt.sol\":11054:11071  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/usdt.sol\":10865:11076  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_0ae587bda794751604922be67654f7ce009e430d2fb0a0638a0adf55cced3d54 555344543a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_209244f047a8224dd09938f43ca844bf644f39b7061501ffe1cc3ce9909b330b 555344543a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_423f148df64af2854c983cfa14596dfe53761b85317edf4f394d9416b513853b 555344543a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_46b92c107683bd4bebb0fe39ab57ec138766b4510ca1e67d04027785004b14f6 555344543a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_48762184e6cc81b01f1cf7132221fcca5eb3c474c8add2ea70000c20f5565b7e 555344543a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_adbc321b816a81a31e241db77c10a77dd37dbe8d1dd85d65bc5d681f7779acf4 555344543a20617070726f766520746f20746865207a65726f2061646472657373\n    data_b47312614118ca974cd1cb0785cf101003663749b22596bc8e7ea6ce64a4aa76 555344543a207472616e736665722066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158201c3b3c9633bc2ede8cd5b63deca7202847053c043869cd57fafbcbcc7403a9fa64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000276001600160e01b036200014016565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600a808252692aa9a22a102a37b5b2b760b11b6020909201918252620000a49160069162000145565b50604080518082019091526004808252631554d11560e21b6020909201918252620000d29160059162000145565b506004805460ff191660121790556a52b7d2dcc80cd2e40000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3620001e7565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b6200014291905b80821115620001c65760008155600101620001d1565b610f7a80620001f76000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb14610332578063b09f12661461035e578063d28d885214610366578063dd62ed3e1461036e578063f2fde38b1461039c57610121565b8063893d20e8146102b55780638da5cb5b146102d957806395d89b41146102e1578063a0712d68146102e9578063a457c2d71461030657610121565b8063313ce567116100f4578063313ce5671461023357806332424aa31461023b578063395093511461025957806370a0823114610285578063715018a6146102ab57610121565b806306fdde0314610126578063095ea7b3146101a357806318160ddd146101e357806323b872dd146101fd575b600080fd5b61012e6103c2565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b038135169060200135610458565b604080519115158252519081900360200190f35b6101eb610475565b60408051918252519081900360200190f35b6101cf6004803603606081101561021357600080fd5b506001600160a01b0381358116916020810135909116906040013561047b565b6101eb610508565b610243610511565b6040805160ff9092168252519081900360200190f35b6101cf6004803603604081101561026f57600080fd5b506001600160a01b03813516906020013561051a565b6101eb6004803603602081101561029b57600080fd5b50356001600160a01b031661056e565b6102b3610589565b005b6102bd61063d565b604080516001600160a01b039092168252519081900360200190f35b6102bd61064c565b61012e61065b565b6101cf600480360360208110156102ff57600080fd5b50356106bc565b6101cf6004803603604081101561031c57600080fd5b506001600160a01b038135169060200135610741565b6101cf6004803603604081101561034857600080fd5b506001600160a01b0381351690602001356107af565b61012e6107c3565b61012e610851565b6101eb6004803603604081101561038457600080fd5b506001600160a01b03813581169160200135166108ac565b6102b3600480360360208110156103b257600080fd5b50356001600160a01b03166108d7565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046c61046561094d565b8484610951565b50600192915050565b60035490565b6000610488848484610a3d565b6104fe8461049461094d565b6104f985604051806060016040528060278152602001610eda602791396001600160a01b038a166000908152600260205260408120906104d261094d565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b9b16565b610951565b5060019392505050565b60045460ff1690565b60045460ff1681565b600061046c61052761094d565b846104f9856002600061053861094d565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c3216565b6001600160a01b031660009081526001602052604090205490565b61059161094d565b6000546001600160a01b039081169116146105f3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061064761064c565b905090565b6000546001600160a01b031690565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b60006106c661094d565b6000546001600160a01b03908116911614610728576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61073961073361094d565b83610c93565b506001919050565b600061046c61074e61094d565b846104f985604051806060016040528060248152602001610e4b602491396002600061077861094d565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b9b16565b600061046c6107bc61094d565b8484610a3d565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108495780601f1061081e57610100808354040283529160200191610849565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6108df61094d565b6000546001600160a01b03908116911614610941576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61094a81610d85565b50565b3390565b6001600160a01b0383166109965760405162461bcd60e51b8152600401808060200182810382526023815260200180610eb76023913960400191505060405180910390fd5b6001600160a01b0382166109db5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f016021913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a825760405162461bcd60e51b8152600401808060200182810382526024815260200180610f226024913960400191505060405180910390fd5b6001600160a01b038216610ac75760405162461bcd60e51b8152600401808060200182810382526022815260200180610e956022913960400191505060405180910390fd5b610b0a81604051806060016040528060258152602001610e26602591396001600160a01b038616600090815260016020526040902054919063ffffffff610b9b16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b3f908263ffffffff610c3216565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c2a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bef578181015183820152602001610bd7565b50505050905090810190601f168015610c1c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c8c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cee576040805162461bcd60e51b815260206004820152601e60248201527f555344543a206d696e7420746f20746865207a65726f20616464726573730000604482015290519081900360640190fd5b600354610d01908263ffffffff610c3216565b6003556001600160a01b038216600090815260016020526040902054610d2d908263ffffffff610c3216565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610dca5760405162461bcd60e51b8152600401808060200182810382526026815260200180610e6f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe555344543a207472616e7366657220616d6f756e7420657863656564732062616c616e6365555344543a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373555344543a207472616e7366657220746f20746865207a65726f2061646472657373555344543a20617070726f76652066726f6d20746865207a65726f2061646472657373555344543a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365555344543a20617070726f766520746f20746865207a65726f2061646472657373555344543a207472616e736665722066726f6d20746865207a65726f2061646472657373a265627a7a723158201c3b3c9633bc2ede8cd5b63deca7202847053c043869cd57fafbcbcc7403a9fa64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x27 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x140 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP1 DUP3 MSTORE PUSH10 0x2AA9A22A102A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xA4 SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x145 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x1554D115 PUSH1 0xE2 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xD2 SWAP2 PUSH1 0x5 SWAP2 PUSH3 0x145 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH3 0x1E7 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x188 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1B8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1B8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1B8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x19B JUMP JUMPDEST POP PUSH3 0x1C6 SWAP3 SWAP2 POP PUSH3 0x1CA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x142 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1D1 JUMP JUMPDEST PUSH2 0xF7A DUP1 PUSH3 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x306 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x47B JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x508 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x51A JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x56E JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x64C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x65B JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x741 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x12E PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x851 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x44E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x423 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x431 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x465 PUSH2 0x94D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 DUP5 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x4FE DUP5 PUSH2 0x494 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x4F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEDA PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4D2 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB9B AND JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x527 PUSH2 0x94D JUMP JUMPDEST DUP5 PUSH2 0x4F9 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x538 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x647 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x44E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x423 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C6 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x728 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x739 PUSH2 0x733 PUSH2 0x94D JUMP JUMPDEST DUP4 PUSH2 0xC93 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x74E PUSH2 0x94D JUMP JUMPDEST DUP5 PUSH2 0x4F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x778 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB9B AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x7BC PUSH2 0x94D JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x941 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x94A DUP2 PUSH2 0xD85 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEB7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF01 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF22 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE95 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE26 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB9B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB3F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBEF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBD7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC1C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344543A206D696E7420746F20746865207A65726F20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD01 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD2D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE6F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID SSTORE MSTORE8 DIFFICULTY SLOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365555344543A20646563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F4F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F2061646472657373555344543A207472616E736665722074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x555344543A20617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737355 MSTORE8 DIFFICULTY SLOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365555344543A2061707072 PUSH16 0x766520746F20746865207A65726F2061 PUSH5 0x6472657373 SSTORE MSTORE8 DIFFICULTY SLOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373A265627A7A723158201C3B3C9633BC2E 0xDE DUP13 0xD5 0xB6 RETURNDATASIZE 0xEC 0xA7 KECCAK256 0x28 SELFBALANCE SDIV EXTCODECOPY DIV CODESIZE PUSH10 0xCD57FAFBCBCC7403A9FA PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "11080:7542:0:-;;;11388:242;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9639:17:0;9659:12;-1:-1:-1;;;;;9659:10:0;:12;:::i;:::-;9677:6;:18;;-1:-1:-1;;;;;;9677:18:0;-1:-1:-1;;;;;9677:18:0;;;;;;;9706:43;;9677:18;;-1:-1:-1;9677:18:0;9706:43;;9677:6;;9706:43;-1:-1:-1;11415:20:0;;;;;;;;;;;;;-1:-1:-1;;;11415:20:0;;;;;;;;;:5;;:20;:::i;:::-;-1:-1:-1;11441:16:0;;;;;;;;;;;;;-1:-1:-1;;;11441:16:0;;;;;;;;;:7;;:16;:::i;:::-;-1:-1:-1;11463:9:0;:14;;-1:-1:-1;;11463:14:0;11475:2;11463:14;;;11498:27;11483:12;:42;;;11541:10;11463:9;11531:21;;;11463:14;11531:21;;;;;;;;:36;;;11579:46;;;;;;11541:10;;11463:9;;11579:46;;;;;;;;;;11080:7542;;3707:90;3782:10;3707:90;;:::o;11080:7542::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11080:7542:0;;;-1:-1:-1;11080:7542:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb14610332578063b09f12661461035e578063d28d885214610366578063dd62ed3e1461036e578063f2fde38b1461039c57610121565b8063893d20e8146102b55780638da5cb5b146102d957806395d89b41146102e1578063a0712d68146102e9578063a457c2d71461030657610121565b8063313ce567116100f4578063313ce5671461023357806332424aa31461023b578063395093511461025957806370a0823114610285578063715018a6146102ab57610121565b806306fdde0314610126578063095ea7b3146101a357806318160ddd146101e357806323b872dd146101fd575b600080fd5b61012e6103c2565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610168578181015183820152602001610150565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360408110156101b957600080fd5b506001600160a01b038135169060200135610458565b604080519115158252519081900360200190f35b6101eb610475565b60408051918252519081900360200190f35b6101cf6004803603606081101561021357600080fd5b506001600160a01b0381358116916020810135909116906040013561047b565b6101eb610508565b610243610511565b6040805160ff9092168252519081900360200190f35b6101cf6004803603604081101561026f57600080fd5b506001600160a01b03813516906020013561051a565b6101eb6004803603602081101561029b57600080fd5b50356001600160a01b031661056e565b6102b3610589565b005b6102bd61063d565b604080516001600160a01b039092168252519081900360200190f35b6102bd61064c565b61012e61065b565b6101cf600480360360208110156102ff57600080fd5b50356106bc565b6101cf6004803603604081101561031c57600080fd5b506001600160a01b038135169060200135610741565b6101cf6004803603604081101561034857600080fd5b506001600160a01b0381351690602001356107af565b61012e6107c3565b61012e610851565b6101eb6004803603604081101561038457600080fd5b506001600160a01b03813581169160200135166108ac565b6102b3600480360360208110156103b257600080fd5b50356001600160a01b03166108d7565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046c61046561094d565b8484610951565b50600192915050565b60035490565b6000610488848484610a3d565b6104fe8461049461094d565b6104f985604051806060016040528060278152602001610eda602791396001600160a01b038a166000908152600260205260408120906104d261094d565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b9b16565b610951565b5060019392505050565b60045460ff1690565b60045460ff1681565b600061046c61052761094d565b846104f9856002600061053861094d565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c3216565b6001600160a01b031660009081526001602052604090205490565b61059161094d565b6000546001600160a01b039081169116146105f3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061064761064c565b905090565b6000546001600160a01b031690565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b60006106c661094d565b6000546001600160a01b03908116911614610728576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61073961073361094d565b83610c93565b506001919050565b600061046c61074e61094d565b846104f985604051806060016040528060248152602001610e4b602491396002600061077861094d565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b9b16565b600061046c6107bc61094d565b8484610a3d565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108495780601f1061081e57610100808354040283529160200191610849565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6108df61094d565b6000546001600160a01b03908116911614610941576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61094a81610d85565b50565b3390565b6001600160a01b0383166109965760405162461bcd60e51b8152600401808060200182810382526023815260200180610eb76023913960400191505060405180910390fd5b6001600160a01b0382166109db5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f016021913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a825760405162461bcd60e51b8152600401808060200182810382526024815260200180610f226024913960400191505060405180910390fd5b6001600160a01b038216610ac75760405162461bcd60e51b8152600401808060200182810382526022815260200180610e956022913960400191505060405180910390fd5b610b0a81604051806060016040528060258152602001610e26602591396001600160a01b038616600090815260016020526040902054919063ffffffff610b9b16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b3f908263ffffffff610c3216565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c2a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bef578181015183820152602001610bd7565b50505050905090810190601f168015610c1c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c8c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cee576040805162461bcd60e51b815260206004820152601e60248201527f555344543a206d696e7420746f20746865207a65726f20616464726573730000604482015290519081900360640190fd5b600354610d01908263ffffffff610c3216565b6003556001600160a01b038216600090815260016020526040902054610d2d908263ffffffff610c3216565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610dca5760405162461bcd60e51b8152600401808060200182810382526026815260200180610e6f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe555344543a207472616e7366657220616d6f756e7420657863656564732062616c616e6365555344543a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373555344543a207472616e7366657220746f20746865207a65726f2061646472657373555344543a20617070726f76652066726f6d20746865207a65726f2061646472657373555344543a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365555344543a20617070726f766520746f20746865207a65726f2061646472657373555344543a207472616e736665722066726f6d20746865207a65726f2061646472657373a265627a7a723158201c3b3c9633bc2ede8cd5b63deca7202847053c043869cd57fafbcbcc7403a9fa64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x306 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x47B JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x508 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x51A JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x56E JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x64C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x65B JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x741 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x12E PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x851 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x44E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x423 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x431 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x465 PUSH2 0x94D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 DUP5 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x4FE DUP5 PUSH2 0x494 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x4F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEDA PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4D2 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB9B AND JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x527 PUSH2 0x94D JUMP JUMPDEST DUP5 PUSH2 0x4F9 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x538 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x647 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x44E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x423 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C6 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x728 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x739 PUSH2 0x733 PUSH2 0x94D JUMP JUMPDEST DUP4 PUSH2 0xC93 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x74E PUSH2 0x94D JUMP JUMPDEST DUP5 PUSH2 0x4F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x778 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB9B AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH2 0x7BC PUSH2 0x94D JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x941 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x94A DUP2 PUSH2 0xD85 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEB7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF01 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF22 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE95 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB0A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE26 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB9B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB3F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBEF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBD7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC1C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344543A206D696E7420746F20746865207A65726F20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD01 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD2D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC32 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE6F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID SSTORE MSTORE8 DIFFICULTY SLOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365555344543A20646563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F4F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F2061646472657373555344543A207472616E736665722074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x555344543A20617070726F76652066726F6D2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737355 MSTORE8 DIFFICULTY SLOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365555344543A2061707072 PUSH16 0x766520746F20746865207A65726F2061 PUSH5 0x6472657373 SSTORE MSTORE8 DIFFICULTY SLOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373A265627A7A723158201C3B3C9633BC2E 0xDE DUP13 0xD5 0xB6 RETURNDATASIZE 0xEC 0xA7 KECCAK256 0x28 SELFBALANCE SDIV EXTCODECOPY DIV CODESIZE PUSH10 0xCD57FAFBCBCC7403A9FA PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "11080:7542:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11080:7542:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12076:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12076:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13066:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13066:141:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12203:85;;;:::i;:::-;;;;;;;;;;;;;;;;13636:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13636:287:0;;;;;;;;;;;;;;;;;:::i;11816:79::-;;;:::i;11313:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14290:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14290:197:0;;;;;;;;:::i;12336:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12336:104:0;-1:-1:-1;;;;;12336:104:0;;:::i;10405:127::-;;;:::i;:::-;;11685:77;;;:::i;:::-;;;;-1:-1:-1;;;;;11685:77:0;;;;;;;;;;;;;;9822:71;;;:::i;11947:81::-;;;:::i;15379:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15379:117:0;;:::i;14942:247::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14942:247:0;;;;;;;;:::i;12623:147::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12623:147:0;;;;;;;;:::i;11339:21::-;;;:::i;11364:19::-;;;:::i;12818:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12818:128:0;;;;;;;;;;:::i;10671:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10671:101:0;-1:-1:-1;;;;;10671:101:0;;:::i;12076:77::-;12143:5;12136:12;;;;;;;;-1:-1:-1;;12136:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12115:13;;12136:12;;12143:5;;12136:12;;12143:5;12136:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12076:77;:::o;13066:141::-;13134:4;13146:39;13155:12;:10;:12::i;:::-;13169:7;13178:6;13146:8;:39::i;:::-;-1:-1:-1;13198:4:0;13066:141;;;;:::o;12203:85::-;12271:12;;12203:85;:::o;13636:287::-;13727:4;13739:36;13749:6;13757:9;13768:6;13739:9;:36::i;:::-;13781:120;13790:6;13798:12;:10;:12::i;:::-;13812:88;13850:6;13812:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13812:19:0;;;;;;:11;:19;;;;;;13832:12;:10;:12::i;:::-;-1:-1:-1;;;;;13812:33:0;;;;;;;;;;;;-1:-1:-1;13812:33:0;;;:88;;:37;:88;:::i;:::-;13781:8;:120::i;:::-;-1:-1:-1;13914:4:0;13636:287;;;;;:::o;11816:79::-;11881:9;;;;11816:79;:::o;11313:22::-;;;;;;:::o;14290:197::-;14370:4;14382:83;14391:12;:10;:12::i;:::-;14405:7;14414:50;14453:10;14414:11;:25;14426:12;:10;:12::i;:::-;-1:-1:-1;;;;;14414:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14414:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;12336:104::-;-1:-1:-1;;;;;12417:18:0;12395:7;12417:18;;;:9;:18;;;;;;;12336:104::o;10405:127::-;10018:12;:10;:12::i;:::-;10008:6;;-1:-1:-1;;;;;10008:6:0;;;:22;;;10000:67;;;;;-1:-1:-1;;;10000:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10499:1;10483:6;;10462:40;;-1:-1:-1;;;;;10483:6:0;;;;10462:40;;10499:1;;10462:40;10525:1;10508:19;;-1:-1:-1;;;;;;10508:19:0;;;10405:127::o;11685:77::-;11728:7;11750;:5;:7::i;:::-;11743:14;;11685:77;:::o;9822:71::-;9860:7;9882:6;-1:-1:-1;;;;;9882:6:0;9822:71;:::o;11947:81::-;12016:7;12009:14;;;;;;;;-1:-1:-1;;12009:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11988:13;;12009:14;;12016:7;;12009:14;;12016:7;12009:14;;;;;;;;;;;;;;;;;;;;;;;;15379:117;15435:4;10018:12;:10;:12::i;:::-;10008:6;;-1:-1:-1;;;;;10008:6:0;;;:22;;;10000:67;;;;;-1:-1:-1;;;10000:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15447:27;15453:12;:10;:12::i;:::-;15467:6;15447:5;:27::i;:::-;-1:-1:-1;15487:4:0;15379:117;;;:::o;14942:247::-;15027:4;15039:128;15048:12;:10;:12::i;:::-;15062:7;15071:95;15110:15;15071:95;;;;;;;;;;;;;;;;;:11;:25;15083:12;:10;:12::i;:::-;-1:-1:-1;;;;;15071:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;15071:25:0;;;:34;;;;;;;;;;;:95;;:38;:95;:::i;12623:147::-;12694:4;12706:42;12716:12;:10;:12::i;:::-;12730:9;12741:6;12706:9;:42::i;11339:21::-;;;;;;;;;;;;;;;-1:-1:-1;;11339:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11364:19::-;;;;;;;;;;;;;;;-1:-1:-1;;11364:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12818:128;-1:-1:-1;;;;;12914:18:0;;;12892:7;12914:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12818:128::o;10671:101::-;10018:12;:10;:12::i;:::-;10008:6;;-1:-1:-1;;;;;10008:6:0;;;:22;;;10000:67;;;;;-1:-1:-1;;;10000:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10739:28;10758:8;10739:18;:28::i;:::-;10671:101;:::o;3707:90::-;3782:10;3707:90;:::o;17926:312::-;-1:-1:-1;;;;;18015:19:0;;18007:67;;;;-1:-1:-1;;;18007:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18088:21:0;;18080:67;;;;-1:-1:-1;;;18080:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18154:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;18201:32;;;;;;;;;;;;;;;;;17926:312;;;:::o;15940:439::-;-1:-1:-1;;;;;16033:20:0;;16025:69;;;;-1:-1:-1;;;16025:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16108:23:0;;16100:70;;;;-1:-1:-1;;;16100:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16197;16219:6;16197:70;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16197:17:0;;;;;;:9;:17;;;;;;;:70;;:21;:70;:::i;:::-;-1:-1:-1;;;;;16177:17:0;;;;;;;:9;:17;;;;;;:90;;;;16296:20;;;;;;;:32;;16321:6;16296:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;16273:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;16339:35;;;;;;;16273:20;;16339:35;;;;;;;;;;;;;15940:439;;;:::o;5604:173::-;5690:7;5721:12;5713:6;;;;5705:29;;;;-1:-1:-1;;;5705:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5705:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:5:0;;;5604:173::o;4806:162::-;4864:7;4891:5;;;4910:6;;;;4902:46;;;;;-1:-1:-1;;;4902:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:1;4806:162;-1:-1:-1;;;4806:162:0:o;16629:283::-;-1:-1:-1;;;;;16700:21:0;;16692:64;;;;;-1:-1:-1;;;16692:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;16778:12;;:24;;16795:6;16778:24;:16;:24;:::i;:::-;16763:12;:39;-1:-1:-1;;;;;16829:18:0;;;;;;:9;:18;;;;;;:30;;16852:6;16829:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;16808:18:0;;;;;;:9;:18;;;;;;;;:51;;;;16870:37;;;;;;;16808:18;;;;16870:37;;;;;;;;;;16629:283;;:::o;10865:211::-;-1:-1:-1;;;;;10934:22:0;;10926:73;;;;-1:-1:-1;;;10926:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11031:6;;;11010:38;;-1:-1:-1;;;;;11010:38:0;;;;11031:6;;;11010:38;;;11054:6;:17;;-1:-1:-1;;;;;;11054:17:0;-1:-1:-1;;;;;11054:17:0;;;;;;;;;;10865:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "792400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1058",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1338",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1231",
								"decimals()": "1027",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24315",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "MSTORE"
								},
								{
									"begin": 11388,
									"end": 11630,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9639,
									"end": 9656,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9659,
									"end": 9671,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9659,
									"end": 9669,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9659,
									"end": 9671,
									"name": "AND"
								},
								{
									"begin": 9659,
									"end": 9671,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9659,
									"end": 9671,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9659,
									"end": 9671,
									"name": "JUMPDEST"
								},
								{
									"begin": 9677,
									"end": 9683,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "DUP1"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "DUP4"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "AND"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "SWAP1"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "DUP2"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "OR"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "DUP3"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "SSTORE"
								},
								{
									"begin": 9706,
									"end": 9749,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9706,
									"end": 9749,
									"name": "MLOAD"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "SWAP3"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9677,
									"end": 9695,
									"name": "SWAP2"
								},
								{
									"begin": 9706,
									"end": 9749,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9706,
									"end": 9749,
									"name": "SWAP1"
								},
								{
									"begin": 9677,
									"end": 9683,
									"name": "DUP3"
								},
								{
									"begin": 9677,
									"end": 9683,
									"name": "SWAP1"
								},
								{
									"begin": 9706,
									"end": 9749,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "DUP1"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "MLOAD"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "DUP1"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "DUP3"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "ADD"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "SWAP1"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "SWAP2"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "MSTORE"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "DUP1"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "DUP3"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2AA9A22A102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "SWAP1"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "SWAP3"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "ADD"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "SWAP2"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "DUP3"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "MSTORE"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "SWAP2"
								},
								{
									"begin": 11415,
									"end": 11420,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11415,
									"end": 11420,
									"name": "SWAP2"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11415,
									"end": 11435,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "DUP1"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "MLOAD"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "DUP1"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "DUP3"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "ADD"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "SWAP1"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "SWAP2"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "MSTORE"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "DUP1"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "DUP3"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1554D115"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "SWAP1"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "SWAP3"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "ADD"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "SWAP2"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "DUP3"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "MSTORE"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "SWAP2"
								},
								{
									"begin": 11441,
									"end": 11448,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11441,
									"end": 11448,
									"name": "SWAP2"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11441,
									"end": 11457,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11463,
									"end": 11472,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "DUP1"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "AND"
								},
								{
									"begin": 11475,
									"end": 11477,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "OR"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "SWAP1"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "SSTORE"
								},
								{
									"begin": 11498,
									"end": 11525,
									"name": "PUSH",
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 11483,
									"end": 11495,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11483,
									"end": 11525,
									"name": "DUP2"
								},
								{
									"begin": 11483,
									"end": 11525,
									"name": "SWAP1"
								},
								{
									"begin": 11483,
									"end": 11525,
									"name": "SSTORE"
								},
								{
									"begin": 11541,
									"end": 11551,
									"name": "CALLER"
								},
								{
									"begin": 11463,
									"end": 11472,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "DUP2"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "DUP2"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "MSTORE"
								},
								{
									"begin": 11463,
									"end": 11477,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "SWAP1"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "DUP2"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "MSTORE"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "DUP1"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "DUP4"
								},
								{
									"begin": 11531,
									"end": 11552,
									"name": "KECCAK256"
								},
								{
									"begin": 11531,
									"end": 11567,
									"name": "DUP6"
								},
								{
									"begin": 11531,
									"end": 11567,
									"name": "SWAP1"
								},
								{
									"begin": 11531,
									"end": 11567,
									"name": "SSTORE"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "DUP1"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "MLOAD"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SWAP5"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "DUP6"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "MSTORE"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "MLOAD"
								},
								{
									"begin": 11541,
									"end": 11551,
									"name": "SWAP3"
								},
								{
									"begin": 11541,
									"end": 11551,
									"name": "SWAP4"
								},
								{
									"begin": 11463,
									"end": 11472,
									"name": "SWAP2"
								},
								{
									"begin": 11463,
									"end": 11472,
									"name": "SWAP3"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SWAP3"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "DUP2"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SWAP1"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SUB"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SWAP1"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SWAP2"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "ADD"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "SWAP1"
								},
								{
									"begin": 11579,
									"end": 11625,
									"name": "LOG3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMP"
								},
								{
									"begin": 3707,
									"end": 3797,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3707,
									"end": 3797,
									"name": "JUMPDEST"
								},
								{
									"begin": 3782,
									"end": 3792,
									"name": "CALLER"
								},
								{
									"begin": 3707,
									"end": 3797,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3707,
									"end": 3797,
									"name": "JUMPDEST"
								},
								{
									"begin": 3707,
									"end": 3797,
									"name": "SWAP1"
								},
								{
									"begin": 3707,
									"end": 3797,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SLOAD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "AND"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ISZERO"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "MUL"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SUB"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "AND"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DIV"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "MSTORE"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "KECCAK256"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DIV"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "LT"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPI"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "MLOAD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "NOT"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "AND"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP4"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "OR"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP6"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SSTORE"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMP"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP6"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SSTORE"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ISZERO"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPI"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "GT"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ISZERO"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPI"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "MLOAD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SSTORE"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMP"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "POP"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SWAP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP3"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "GT"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ISZERO"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPI"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP2"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "SSTORE"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "ADD"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMP"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "JUMPDEST"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "DUP1"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "CODECOPY"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11080,
									"end": 18622,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201c3b3c9633bc2ede8cd5b63deca7202847053c043869cd57fafbcbcc7403a9fa64736f6c63430005100032",
									".code": [
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "MSTORE"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "POP"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "LT"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "SHR"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "GT"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "GT"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMP"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPDEST"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMP"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPDEST"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "GT"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMP"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPDEST"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "EQ"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPI"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "JUMPDEST"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "DUP1"
										},
										{
											"begin": 11080,
											"end": 18622,
											"name": "REVERT"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMPDEST"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMPDEST"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MLOAD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP3"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MSTORE"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MLOAD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "ADD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MSTORE"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MLOAD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP3"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP3"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "ADD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP6"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "ADD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "ADD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "AND"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "ISZERO"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMPI"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP3"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SUB"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MLOAD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP4"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SUB"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "EXP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SUB"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "NOT"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "AND"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MSTORE"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "ADD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMPDEST"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP3"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "MLOAD"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "DUP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP2"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SUB"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "RETURN"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "JUMPDEST"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "JUMPDEST"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "MLOAD"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP2"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "ISZERO"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "ISZERO"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "DUP3"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "MSTORE"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "MLOAD"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SUB"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "RETURN"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "JUMPDEST"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "JUMPDEST"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "SWAP2"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "DUP3"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "MSTORE"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "SUB"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "ADD"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "RETURN"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "JUMPDEST"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "DUP1"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "DUP2"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "DUP2"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "AND"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SWAP2"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "DUP2"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "ADD"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SWAP1"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SWAP2"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "AND"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SWAP1"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "ADD"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "JUMPDEST"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "JUMPDEST"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "JUMPDEST"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "DUP1"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "MLOAD"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SWAP1"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SWAP3"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "AND"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "DUP3"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "MSTORE"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "MLOAD"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SWAP1"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "DUP2"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SWAP1"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SUB"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "ADD"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SWAP1"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "RETURN"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "JUMPDEST"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "DUP1"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "DUP2"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "AND"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "SWAP1"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "ADD"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "JUMPDEST"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "DUP1"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "AND"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "JUMPDEST"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "JUMPDEST"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "STOP"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "JUMPDEST"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "JUMPDEST"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "DUP1"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SWAP1"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SWAP3"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "AND"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "DUP3"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "MSTORE"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "MLOAD"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SWAP1"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "DUP2"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SWAP1"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SUB"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "ADD"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SWAP1"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "RETURN"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "JUMPDEST"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "JUMPDEST"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "JUMPDEST"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "DUP1"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "JUMPDEST"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "DUP1"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "DUP2"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "AND"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "SWAP1"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "ADD"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "JUMPDEST"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "DUP1"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "DUP2"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "AND"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "SWAP1"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "ADD"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "JUMPDEST"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "JUMPDEST"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "DUP1"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "DUP2"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "DUP2"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "AND"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "SWAP2"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "ADD"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "AND"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "JUMPDEST"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "DUP1"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "AND"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMPDEST"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SLOAD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MLOAD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP9"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "AND"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ISZERO"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MUL"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP6"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "AND"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP5"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP5"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DIV"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP4"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP5"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DIV"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MUL"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MSTORE"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MSTORE"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SWAP4"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP3"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP4"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ISZERO"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMPI"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "LT"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMPI"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP4"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SLOAD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DIV"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MUL"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP4"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MSTORE"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMP"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMPDEST"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MSTORE"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "KECCAK256"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMPDEST"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SLOAD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "MSTORE"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP4"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "GT"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMPI"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SUB"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "AND"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "JUMPDEST"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "POP"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12076,
											"end": 12153,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "JUMPDEST"
										},
										{
											"begin": 13134,
											"end": 13138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13146,
											"end": 13185,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 13155,
											"end": 13165,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "JUMPDEST"
										},
										{
											"begin": 13169,
											"end": 13176,
											"name": "DUP5"
										},
										{
											"begin": 13178,
											"end": 13184,
											"name": "DUP5"
										},
										{
											"begin": 13146,
											"end": 13154,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13146,
											"end": 13185,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13146,
											"end": 13185,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 13146,
											"end": 13185,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13198,
											"end": 13202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP3"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "SWAP2"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 13066,
											"end": 13207,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "JUMPDEST"
										},
										{
											"begin": 12271,
											"end": 12283,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12271,
											"end": 12283,
											"name": "SLOAD"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12203,
											"end": 12288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "JUMPDEST"
										},
										{
											"begin": 13727,
											"end": 13731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13775,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13749,
											"end": 13755,
											"name": "DUP5"
										},
										{
											"begin": 13757,
											"end": 13766,
											"name": "DUP5"
										},
										{
											"begin": 13768,
											"end": 13774,
											"name": "DUP5"
										},
										{
											"begin": 13739,
											"end": 13748,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13739,
											"end": 13775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13739,
											"end": 13775,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 13739,
											"end": 13775,
											"name": "JUMPDEST"
										},
										{
											"begin": 13781,
											"end": 13901,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 13790,
											"end": 13796,
											"name": "DUP5"
										},
										{
											"begin": 13798,
											"end": 13810,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 13798,
											"end": 13808,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13798,
											"end": 13810,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13798,
											"end": 13810,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 13798,
											"end": 13810,
											"name": "JUMPDEST"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 13850,
											"end": 13856,
											"name": "DUP6"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "MLOAD"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "DUP1"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "ADD"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "MSTORE"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "DUP1"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "DUP2"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "MSTORE"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "ADD"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH data",
											"value": "48762184E6CC81B01F1CF7132221FCCA5EB3C474C8ADD2EA70000C20F5565B7E"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "SWAP2"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "DUP11"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "AND"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "SWAP1"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "DUP2"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "MSTORE"
										},
										{
											"begin": 13812,
											"end": 13823,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "MSTORE"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "DUP2"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "KECCAK256"
										},
										{
											"begin": 13812,
											"end": 13831,
											"name": "SWAP1"
										},
										{
											"begin": 13832,
											"end": 13844,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13832,
											"end": 13842,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13832,
											"end": 13844,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13832,
											"end": 13844,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 13832,
											"end": 13844,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "AND"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "DUP2"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "MSTORE"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "DUP2"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "ADD"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "SWAP2"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "SWAP1"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "SWAP2"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "MSTORE"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "KECCAK256"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "SLOAD"
										},
										{
											"begin": 13812,
											"end": 13845,
											"name": "SWAP2"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "SWAP1"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13812,
											"end": 13849,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "AND"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 13812,
											"end": 13900,
											"name": "JUMPDEST"
										},
										{
											"begin": 13781,
											"end": 13789,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13781,
											"end": 13901,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13781,
											"end": 13901,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 13781,
											"end": 13901,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SWAP4"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "SWAP3"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "POP"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "POP"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "POP"
										},
										{
											"begin": 13636,
											"end": 13923,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "JUMPDEST"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "SLOAD"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "AND"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "SWAP1"
										},
										{
											"begin": 11816,
											"end": 11895,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "JUMPDEST"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "SLOAD"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "AND"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "DUP2"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 14290,
											"end": 14487,
											"name": "JUMPDEST"
										},
										{
											"begin": 14370,
											"end": 14374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14382,
											"end": 14465,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14391,
											"end": 14403,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14391,
											"end": 14401,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14391,
											"end": 14403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14391,
											"end": 14403,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 14391,
											"end": 14403,
											"name": "JUMPDEST"
										},
										{
											"begin": 14405,
											"end": 14412,
											"name": "DUP5"
										},
										{
											"begin": 14414,
											"end": 14464,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 14453,
											"end": 14463,
											"name": "DUP6"
										},
										{
											"begin": 14414,
											"end": 14425,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14426,
											"end": 14438,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 14426,
											"end": 14436,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14426,
											"end": 14438,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14426,
											"end": 14438,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 14426,
											"end": 14438,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "AND"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "DUP3"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "MSTORE"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "DUP1"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "DUP4"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "ADD"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "SWAP4"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "SWAP4"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "MSTORE"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "SWAP2"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "DUP3"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14414,
											"end": 14439,
											"name": "KECCAK256"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "SWAP2"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "DUP13"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "AND"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "DUP2"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "MSTORE"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "SWAP3"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "MSTORE"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "SWAP1"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "KECCAK256"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "SLOAD"
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "SWAP1"
										},
										{
											"begin": 14414,
											"end": 14464,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14414,
											"end": 14452,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14414,
											"end": 14464,
											"name": "AND"
										},
										{
											"begin": 14414,
											"end": 14464,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "AND"
										},
										{
											"begin": 12395,
											"end": 12402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "SWAP1"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "DUP2"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "MSTORE"
										},
										{
											"begin": 12417,
											"end": 12426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "MSTORE"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "SWAP1"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "KECCAK256"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "SLOAD"
										},
										{
											"begin": 12417,
											"end": 12435,
											"name": "SWAP1"
										},
										{
											"begin": 12336,
											"end": 12440,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "JUMPDEST"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "JUMPDEST"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "SWAP1"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "DUP2"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "SWAP2"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "EQ"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPI"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MLOAD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SUB"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "REVERT"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPDEST"
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "DUP1"
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "SLOAD"
										},
										{
											"begin": 10462,
											"end": 10502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10462,
											"end": 10502,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "SWAP1"
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "SWAP2"
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "AND"
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "SWAP1"
										},
										{
											"begin": 10462,
											"end": 10502,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10462,
											"end": 10502,
											"name": "SWAP1"
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "DUP4"
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "SWAP1"
										},
										{
											"begin": 10462,
											"end": 10502,
											"name": "LOG3"
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "DUP1"
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "AND"
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "SWAP1"
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "SSTORE"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "JUMPDEST"
										},
										{
											"begin": 11728,
											"end": 11735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 11750,
											"end": 11755,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "JUMPDEST"
										},
										{
											"begin": 11743,
											"end": 11757,
											"name": "SWAP1"
										},
										{
											"begin": 11743,
											"end": 11757,
											"name": "POP"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "SWAP1"
										},
										{
											"begin": 11685,
											"end": 11762,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "JUMPDEST"
										},
										{
											"begin": 9860,
											"end": 9867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9888,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9882,
											"end": 9888,
											"name": "AND"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "SWAP1"
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11947,
											"end": 12028,
											"name": "JUMPDEST"
										},
										{
											"begin": 12016,
											"end": 12023,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SLOAD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MLOAD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP9"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "AND"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ISZERO"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MUL"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP6"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "AND"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP5"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP5"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DIV"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP4"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP5"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DIV"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MUL"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP3"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP3"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MSTORE"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP3"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MSTORE"
										},
										{
											"begin": 11988,
											"end": 12001,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11988,
											"end": 12001,
											"name": "SWAP4"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP3"
										},
										{
											"begin": 12016,
											"end": 12023,
											"name": "SWAP1"
										},
										{
											"begin": 12016,
											"end": 12023,
											"name": "SWAP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP4"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD"
										},
										{
											"begin": 12016,
											"end": 12023,
											"name": "DUP3"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP3"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ISZERO"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "JUMPI"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "LT"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "JUMPI"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP1"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP4"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SLOAD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DIV"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MUL"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "DUP4"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "MSTORE"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "ADD"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "SWAP2"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12009,
											"end": 12023,
											"name": "JUMP"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "JUMPDEST"
										},
										{
											"begin": 15435,
											"end": 15439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "JUMPDEST"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "SWAP1"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "DUP2"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "SWAP2"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "EQ"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPI"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MLOAD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SUB"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "REVERT"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPDEST"
										},
										{
											"begin": 15447,
											"end": 15474,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 15453,
											"end": 15465,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 15453,
											"end": 15463,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15453,
											"end": 15465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15453,
											"end": 15465,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 15453,
											"end": 15465,
											"name": "JUMPDEST"
										},
										{
											"begin": 15467,
											"end": 15473,
											"name": "DUP4"
										},
										{
											"begin": 15447,
											"end": 15452,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 15447,
											"end": 15474,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15447,
											"end": 15474,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 15447,
											"end": 15474,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15487,
											"end": 15491,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "SWAP2"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "SWAP1"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "POP"
										},
										{
											"begin": 15379,
											"end": 15496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 14942,
											"end": 15189,
											"name": "JUMPDEST"
										},
										{
											"begin": 15027,
											"end": 15031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15167,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 15048,
											"end": 15060,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 15048,
											"end": 15058,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15048,
											"end": 15060,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15048,
											"end": 15060,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 15048,
											"end": 15060,
											"name": "JUMPDEST"
										},
										{
											"begin": 15062,
											"end": 15069,
											"name": "DUP5"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 15110,
											"end": 15125,
											"name": "DUP6"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "MLOAD"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "DUP1"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "ADD"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "MSTORE"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "DUP1"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "DUP2"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "MSTORE"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "ADD"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH data",
											"value": "209244F047A8224DD09938F43CA844BF644F39B7061501FFE1CC3CE9909B330B"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "SWAP2"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "CODECOPY"
										},
										{
											"begin": 15071,
											"end": 15082,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15083,
											"end": 15095,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 15083,
											"end": 15093,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15083,
											"end": 15095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15083,
											"end": 15095,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 15083,
											"end": 15095,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP1"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP2"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "AND"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP3"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "MSTORE"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP1"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP4"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "ADD"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP4"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP1"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP4"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "MSTORE"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP2"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP3"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "SWAP1"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "DUP2"
										},
										{
											"begin": 15071,
											"end": 15096,
											"name": "KECCAK256"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "SWAP2"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "DUP14"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "AND"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "DUP2"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "MSTORE"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "SWAP3"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "MSTORE"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "SWAP1"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "KECCAK256"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "SLOAD"
										},
										{
											"begin": 15071,
											"end": 15105,
											"name": "SWAP2"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "SWAP1"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15071,
											"end": 15109,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "AND"
										},
										{
											"begin": 15071,
											"end": 15166,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 12623,
											"end": 12770,
											"name": "JUMPDEST"
										},
										{
											"begin": 12694,
											"end": 12698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12706,
											"end": 12748,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12716,
											"end": 12728,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 12716,
											"end": 12726,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12716,
											"end": 12728,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12716,
											"end": 12728,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 12716,
											"end": 12728,
											"name": "JUMPDEST"
										},
										{
											"begin": 12730,
											"end": 12739,
											"name": "DUP5"
										},
										{
											"begin": 12741,
											"end": 12747,
											"name": "DUP5"
										},
										{
											"begin": 12706,
											"end": 12715,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 12706,
											"end": 12748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SLOAD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MLOAD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP6"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "AND"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ISZERO"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP5"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "AND"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP4"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP4"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DIV"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP5"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DIV"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP5"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MUL"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP5"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MSTORE"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MSTORE"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP4"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ISZERO"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPI"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "LT"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPI"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP4"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SLOAD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DIV"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MUL"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP4"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MSTORE"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMP"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MSTORE"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "KECCAK256"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SLOAD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "MSTORE"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP4"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "GT"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPI"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP1"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SUB"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "AND"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP3"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "ADD"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "SWAP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMPDEST"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "POP"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "POP"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "POP"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "POP"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "POP"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "DUP2"
										},
										{
											"begin": 11339,
											"end": 11360,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "JUMPDEST"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SLOAD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MLOAD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP6"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "AND"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ISZERO"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP5"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "AND"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP4"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP4"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DIV"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP5"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DIV"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP5"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MUL"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP3"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP5"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP3"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MSTORE"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MSTORE"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP3"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP4"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP3"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP3"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ISZERO"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "JUMPI"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "LT"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "JUMPI"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP4"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SLOAD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DIV"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MUL"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "DUP4"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "MSTORE"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "JUMP"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "SWAP2"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "DUP3"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "AND"
										},
										{
											"begin": 12892,
											"end": 12899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "SWAP1"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "DUP2"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "MSTORE"
										},
										{
											"begin": 12914,
											"end": 12925,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "SWAP1"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "DUP2"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "MSTORE"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "DUP1"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "DUP4"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "KECCAK256"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP4"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP1"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP5"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "AND"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "DUP3"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "MSTORE"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP2"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP1"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP2"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "MSTORE"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "KECCAK256"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SLOAD"
										},
										{
											"begin": 12914,
											"end": 12941,
											"name": "SWAP1"
										},
										{
											"begin": 12818,
											"end": 12946,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "JUMPDEST"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 10018,
											"end": 10030,
											"name": "JUMPDEST"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "SWAP1"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "DUP2"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "SWAP2"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "EQ"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPI"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP3"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MSTORE"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "MLOAD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "DUP2"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SUB"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "ADD"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "SWAP1"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "REVERT"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPDEST"
										},
										{
											"begin": 10739,
											"end": 10767,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 10758,
											"end": 10766,
											"name": "DUP2"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 10739,
											"end": 10767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10739,
											"end": 10767,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 10739,
											"end": 10767,
											"name": "JUMPDEST"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "POP"
										},
										{
											"begin": 10671,
											"end": 10772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3707,
											"end": 3797,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3707,
											"end": 3797,
											"name": "JUMPDEST"
										},
										{
											"begin": 3782,
											"end": 3792,
											"name": "CALLER"
										},
										{
											"begin": 3707,
											"end": 3797,
											"name": "SWAP1"
										},
										{
											"begin": 3707,
											"end": 3797,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17926,
											"end": 18238,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 17926,
											"end": 18238,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18015,
											"end": 18034,
											"name": "DUP4"
										},
										{
											"begin": 18015,
											"end": 18034,
											"name": "AND"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "JUMPI"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP2"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "MSTORE"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "ADD"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP1"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP1"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "ADD"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP3"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP2"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "SUB"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP3"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "MSTORE"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP2"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "MSTORE"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "ADD"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP1"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH data",
											"value": "46B92C107683BD4BEBB0FE39AB57EC138766B4510CA1E67D04027785004B14F6"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "SWAP2"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "CODECOPY"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "ADD"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "SWAP2"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "POP"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "POP"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "MLOAD"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "DUP1"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "SWAP2"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "SUB"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "SWAP1"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "REVERT"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 18007,
											"end": 18074,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "DUP3"
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "AND"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "JUMPI"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP2"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "MSTORE"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "ADD"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP1"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP1"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "ADD"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP3"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP2"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "SUB"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP3"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "MSTORE"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP2"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "MSTORE"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "ADD"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP1"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH data",
											"value": "ADBC321B816A81A31E241DB77C10A77DD37DBE8D1DD85D65BC5D681F7779ACF4"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "SWAP2"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "CODECOPY"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "ADD"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "SWAP2"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "POP"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "POP"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "MLOAD"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "DUP1"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "SWAP2"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "SUB"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "SWAP1"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "REVERT"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 18080,
											"end": 18147,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP1"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP5"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "AND"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP2"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP2"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "MSTORE"
										},
										{
											"begin": 18154,
											"end": 18165,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "SWAP1"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP2"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "MSTORE"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP1"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "DUP4"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "KECCAK256"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "SWAP5"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "DUP8"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "AND"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "DUP1"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "DUP5"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "MSTORE"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "SWAP5"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "DUP3"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "MSTORE"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "SWAP2"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "DUP3"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "SWAP1"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "KECCAK256"
										},
										{
											"begin": 18154,
											"end": 18190,
											"name": "DUP6"
										},
										{
											"begin": 18154,
											"end": 18190,
											"name": "SWAP1"
										},
										{
											"begin": 18154,
											"end": 18190,
											"name": "SSTORE"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "DUP2"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "MLOAD"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "DUP6"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "DUP2"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "MSTORE"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SWAP2"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "MLOAD"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SWAP3"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "DUP2"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SWAP1"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SUB"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SWAP1"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SWAP2"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "ADD"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "SWAP1"
										},
										{
											"begin": 18201,
											"end": 18233,
											"name": "LOG3"
										},
										{
											"begin": 17926,
											"end": 18238,
											"name": "POP"
										},
										{
											"begin": 17926,
											"end": 18238,
											"name": "POP"
										},
										{
											"begin": 17926,
											"end": 18238,
											"name": "POP"
										},
										{
											"begin": 17926,
											"end": 18238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15940,
											"end": 16379,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 15940,
											"end": 16379,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16033,
											"end": 16053,
											"name": "DUP4"
										},
										{
											"begin": 16033,
											"end": 16053,
											"name": "AND"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "JUMPI"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP2"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "MSTORE"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "ADD"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP1"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP1"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "ADD"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP3"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP2"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "SUB"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP3"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "MSTORE"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP2"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "MSTORE"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "ADD"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP1"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH data",
											"value": "B47312614118CA974CD1CB0785CF101003663749B22596BC8E7EA6CE64A4AA76"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "SWAP2"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "CODECOPY"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "ADD"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "SWAP2"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "POP"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "POP"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "MLOAD"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "DUP1"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "SWAP2"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "SUB"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "SWAP1"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "REVERT"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 16025,
											"end": 16094,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16108,
											"end": 16131,
											"name": "DUP3"
										},
										{
											"begin": 16108,
											"end": 16131,
											"name": "AND"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "JUMPI"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP2"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "MSTORE"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "ADD"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP1"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP1"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "ADD"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP3"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP2"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "SUB"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP3"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "MSTORE"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP2"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "MSTORE"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "ADD"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP1"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH data",
											"value": "423F148DF64AF2854C983CFA14596DFE53761B85317EDF4F394D9416B513853B"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "SWAP2"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "CODECOPY"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "ADD"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "SWAP2"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "POP"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "POP"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "MLOAD"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "DUP1"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "SWAP2"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "SUB"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "SWAP1"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "REVERT"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 16100,
											"end": 16170,
											"name": "JUMPDEST"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 16219,
											"end": 16225,
											"name": "DUP2"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "MLOAD"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "DUP1"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "ADD"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "MSTORE"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "DUP1"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "DUP2"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "MSTORE"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "ADD"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH data",
											"value": "AE587BDA794751604922BE67654F7CE009E430D2FB0A0638A0ADF55CCED3D54"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "SWAP2"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "DUP7"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "AND"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "SWAP1"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "DUP2"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "MSTORE"
										},
										{
											"begin": 16197,
											"end": 16206,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "MSTORE"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "SWAP1"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "KECCAK256"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "SLOAD"
										},
										{
											"begin": 16197,
											"end": 16214,
											"name": "SWAP2"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "SWAP1"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16197,
											"end": 16218,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "AND"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 16197,
											"end": 16267,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "DUP1"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "DUP6"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "AND"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "SWAP1"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "DUP2"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "MSTORE"
										},
										{
											"begin": 16177,
											"end": 16186,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "MSTORE"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "DUP1"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "DUP3"
										},
										{
											"begin": 16177,
											"end": 16194,
											"name": "KECCAK256"
										},
										{
											"begin": 16177,
											"end": 16267,
											"name": "SWAP4"
										},
										{
											"begin": 16177,
											"end": 16267,
											"name": "SWAP1"
										},
										{
											"begin": 16177,
											"end": 16267,
											"name": "SWAP4"
										},
										{
											"begin": 16177,
											"end": 16267,
											"name": "SSTORE"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "SWAP1"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "DUP5"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "AND"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "DUP2"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "MSTORE"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "KECCAK256"
										},
										{
											"begin": 16296,
											"end": 16316,
											"name": "SLOAD"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "SWAP1"
										},
										{
											"begin": 16321,
											"end": 16327,
											"name": "DUP3"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16296,
											"end": 16320,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "AND"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 16296,
											"end": 16328,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "DUP1"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "DUP5"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "AND"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "DUP2"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "DUP2"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "MSTORE"
										},
										{
											"begin": 16273,
											"end": 16282,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "SWAP1"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "DUP2"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "MSTORE"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "SWAP2"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "DUP3"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "SWAP1"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "KECCAK256"
										},
										{
											"begin": 16273,
											"end": 16328,
											"name": "SWAP5"
										},
										{
											"begin": 16273,
											"end": 16328,
											"name": "SWAP1"
										},
										{
											"begin": 16273,
											"end": 16328,
											"name": "SWAP5"
										},
										{
											"begin": 16273,
											"end": 16328,
											"name": "SSTORE"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "DUP1"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "MLOAD"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "DUP6"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "DUP2"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "MSTORE"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP1"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "MLOAD"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "SWAP2"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "SWAP4"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP3"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "DUP8"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "AND"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP3"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP3"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP2"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "DUP3"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP1"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SUB"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "ADD"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "SWAP1"
										},
										{
											"begin": 16339,
											"end": 16374,
											"name": "LOG3"
										},
										{
											"begin": 15940,
											"end": 16379,
											"name": "POP"
										},
										{
											"begin": 15940,
											"end": 16379,
											"name": "POP"
										},
										{
											"begin": 15940,
											"end": 16379,
											"name": "POP"
										},
										{
											"begin": 15940,
											"end": 16379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5604,
											"end": 5777,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5604,
											"end": 5777,
											"name": "JUMPDEST"
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5733,
											"name": "DUP2"
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "DUP5"
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "DUP5"
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "GT"
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "ISZERO"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "JUMPI"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MSTORE"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP3"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SUB"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP3"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MSTORE"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP4"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MLOAD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MSTORE"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MLOAD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP4"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "AND"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ISZERO"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "JUMPI"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP3"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SUB"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MLOAD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP4"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SUB"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "EXP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SUB"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "NOT"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "AND"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MSTORE"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "ADD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "JUMPDEST"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP3"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "POP"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "MLOAD"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "DUP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP2"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SUB"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "REVERT"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5705,
											"end": 5734,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5752,
											"end": 5757,
											"name": "SWAP1"
										},
										{
											"begin": 5752,
											"end": 5757,
											"name": "SUB"
										},
										{
											"begin": 5752,
											"end": 5757,
											"name": "SWAP1"
										},
										{
											"begin": 5604,
											"end": 5777,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4806,
											"end": 4968,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4806,
											"end": 4968,
											"name": "JUMPDEST"
										},
										{
											"begin": 4864,
											"end": 4871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP3"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP3"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "ADD"
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP4"
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP2"
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "LT"
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "ISZERO"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "JUMPI"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "DUP1"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "DUP2"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "MSTORE"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "DUP3"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "ADD"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "MSTORE"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "DUP3"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "ADD"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "MSTORE"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "DUP3"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "ADD"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "MSTORE"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "SWAP1"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "MLOAD"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "SWAP1"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "DUP2"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "SWAP1"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "SUB"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "ADD"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "SWAP1"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "REVERT"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 4902,
											"end": 4948,
											"name": "JUMPDEST"
										},
										{
											"begin": 4962,
											"end": 4963,
											"name": "SWAP4"
										},
										{
											"begin": 4806,
											"end": 4968,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4806,
											"end": 4968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16629,
											"end": 16912,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 16629,
											"end": 16912,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16700,
											"end": 16721,
											"name": "DUP3"
										},
										{
											"begin": 16700,
											"end": 16721,
											"name": "AND"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "JUMPI"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "DUP1"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "DUP2"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "DUP3"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "DUP3"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "555344543A206D696E7420746F20746865207A65726F20616464726573730000"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "DUP3"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "MLOAD"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "DUP2"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "SUB"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "REVERT"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 16692,
											"end": 16756,
											"name": "JUMPDEST"
										},
										{
											"begin": 16778,
											"end": 16790,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16778,
											"end": 16790,
											"name": "SLOAD"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "SWAP1"
										},
										{
											"begin": 16795,
											"end": 16801,
											"name": "DUP3"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16778,
											"end": 16794,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "AND"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "JUMPDEST"
										},
										{
											"begin": 16763,
											"end": 16775,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16763,
											"end": 16802,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "DUP3"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "AND"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "SWAP1"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "DUP2"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "MSTORE"
										},
										{
											"begin": 16829,
											"end": 16838,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "MSTORE"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "SWAP1"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "KECCAK256"
										},
										{
											"begin": 16829,
											"end": 16847,
											"name": "SLOAD"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "SWAP1"
										},
										{
											"begin": 16852,
											"end": 16858,
											"name": "DUP3"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16829,
											"end": 16851,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "AND"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 16829,
											"end": 16859,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "DUP4"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "AND"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "MSTORE"
										},
										{
											"begin": 16808,
											"end": 16817,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "MSTORE"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "DUP4"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "KECCAK256"
										},
										{
											"begin": 16808,
											"end": 16859,
											"name": "SWAP5"
										},
										{
											"begin": 16808,
											"end": 16859,
											"name": "SWAP1"
										},
										{
											"begin": 16808,
											"end": 16859,
											"name": "SWAP5"
										},
										{
											"begin": 16808,
											"end": 16859,
											"name": "SSTORE"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "DUP4"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "MLOAD"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "DUP6"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "DUP2"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "MSTORE"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SWAP4"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "MLOAD"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "SWAP3"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "SWAP4"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "SWAP3"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SWAP3"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "DUP2"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SWAP1"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SUB"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SWAP1"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SWAP2"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "ADD"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "SWAP1"
										},
										{
											"begin": 16870,
											"end": 16907,
											"name": "LOG3"
										},
										{
											"begin": 16629,
											"end": 16912,
											"name": "POP"
										},
										{
											"begin": 16629,
											"end": 16912,
											"name": "POP"
										},
										{
											"begin": 16629,
											"end": 16912,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10865,
											"end": 11076,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 10865,
											"end": 11076,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10934,
											"end": 10956,
											"name": "DUP2"
										},
										{
											"begin": 10934,
											"end": 10956,
											"name": "AND"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "JUMPI"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP2"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "MSTORE"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "ADD"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP1"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP1"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "ADD"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP3"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP2"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "SUB"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP3"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "MSTORE"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP2"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "MSTORE"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "ADD"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP1"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "SWAP2"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "CODECOPY"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "ADD"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "SWAP2"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "POP"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "POP"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "MLOAD"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "DUP1"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "SWAP2"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "SUB"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "SWAP1"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "REVERT"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 10926,
											"end": 10999,
											"name": "JUMPDEST"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP1"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "SLOAD"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "DUP1"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "DUP6"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "AND"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "SWAP4"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "SWAP3"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "AND"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "SWAP2"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "SWAP2"
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "LOG3"
										},
										{
											"begin": 11054,
											"end": 11060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "DUP1"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP3"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP1"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP3"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "AND"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP2"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP1"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP2"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "OR"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SWAP1"
										},
										{
											"begin": 11054,
											"end": 11071,
											"name": "SSTORE"
										},
										{
											"begin": 10865,
											"end": 11076,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"209244F047A8224DD09938F43CA844BF644F39B7061501FFE1CC3CE9909B330B": "555344543a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"423F148DF64AF2854C983CFA14596DFE53761B85317EDF4F394D9416B513853B": "555344543a207472616e7366657220746f20746865207a65726f2061646472657373",
										"46B92C107683BD4BEBB0FE39AB57EC138766B4510CA1E67D04027785004B14F6": "555344543a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"48762184E6CC81B01F1CF7132221FCCA5EB3C474C8ADD2EA70000C20F5565B7E": "555344543a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"ADBC321B816A81A31E241DB77C10A77DD37DBE8D1DD85D65BC5D681F7779ACF4": "555344543a20617070726f766520746f20746865207a65726f2061646472657373",
										"AE587BDA794751604922BE67654F7CE009E430D2FB0A0638A0ADF55CCED3D54": "555344543a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B47312614118CA974CD1CB0785CF101003663749B22596BC8E7EA6CE64A4AA76": "555344543a207472616e736665722066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {USDT-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {USDT-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {USDT-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {USDT-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {USDT-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {USDT-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {USDT-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {USDT-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {USDT};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/usdt.sol\":\"Usdt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/usdt.sol\":{\"keccak256\":\"0x678352f709ffa5534a392f6eaf9b1478e04866df20c0076f9f4649fe4719cafe\",\"urls\":[\"bzz-raw://fbf8b2bae5d259718ba3c877b6230f6ba369cb35649cfc4e481174acbf472f2e\",\"dweb:/ipfs/QmR8CdXJX2UvSRoXqD3MGAbrNtGDS7jmVBzyRTboefWLzp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/usdt.sol:Usdt",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/usdt.sol": {
				"ast": {
					"absolutePath": "contracts/usdt.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"IUSDT": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						],
						"Usdt": [
							899
						]
					},
					"id": 900,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IUSDT",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "266:9:0"
									},
									"scope": 88,
									"src": "221:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "373:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "372:9:0"
									},
									"scope": 88,
									"src": "330:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "475:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "474:15:0"
									},
									"scope": 88,
									"src": "434:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "577:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:15:0"
									},
									"scope": 88,
									"src": "538:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "689:9:0"
									},
									"scope": 88,
									"src": "647:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "793:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "792:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:9:0"
									},
									"scope": 88,
									"src": "774:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1064:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1063:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1117:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1116:6:0"
									},
									"scope": 88,
									"src": "1046:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1400:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1456:9:0"
									},
									"scope": 88,
									"src": "1382:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2106:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2105:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2157:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2156:6:0"
									},
									"scope": 88,
									"src": "2089:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2472:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2507:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2471:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2541:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2541:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2540:6:0"
									},
									"scope": 88,
									"src": "2450:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2717:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2739:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2759:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2716:57:0"
									},
									"src": "2702:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2938:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2961:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2986:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2937:63:0"
									},
									"src": "2923:78:0"
								}
							],
							"scope": 900,
							"src": "136:2867:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3700:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3688:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3700:0:0"
									},
									"scope": 113,
									"src": "3676:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3769:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3782:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3782:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3775:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3726:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3751:17:0"
									},
									"scope": 113,
									"src": "3707:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3858:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "3864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3864:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4000:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4000:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3993:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3818:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3844:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3843:14:0"
									},
									"scope": 113,
									"src": "3801:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "3505:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4873:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4879:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4895:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4891:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4915:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4910:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4918:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "4902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4902:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4962:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4955:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4819:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4830:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4818:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4863:9:0"
									},
									"scope": 298,
									"src": "4806:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5279:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5296:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5302:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5292:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5292:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5285:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5225:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5236:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5224:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5270:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5269:9:0"
									},
									"scope": 298,
									"src": "5212:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5699:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5721:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "5705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5705:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5705:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5740:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5752:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5756:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5740:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5771:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5764:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5639:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5639:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5616:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5689:9:0"
									},
									"scope": 298,
									"src": "5604:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6064:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6280:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6285:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6280:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6276:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6288:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6303:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6296:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6317:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6329:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6333:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6317:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6348:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6352:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6348:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6357:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6348:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6360:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "6340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6340:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6340:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6410:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6403:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6010:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6009:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6054:9:0"
									},
									"scope": 298,
									"src": "5997:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6914:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6931:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6934:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6937:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6927:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6927:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6920:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6871:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6859:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6904:9:0"
									},
									"scope": 298,
									"src": "6847:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7517:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7593:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7597:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7593:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7600:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "7585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7585:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7585:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7619:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7631:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7635:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7631:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7619:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7732:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7725:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7457:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7457:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7434:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7507:9:0"
									},
									"scope": 298,
									"src": "7422:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8225:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8242:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8245:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8248:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8238:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8238:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8231:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8171:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8182:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8170:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8216:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8215:9:0"
									},
									"scope": 298,
									"src": "8158:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8815:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8829:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8834:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8829:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "8821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8821:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8821:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8863:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8867:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8863:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8856:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8733:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8744:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8755:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8732:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8806:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8805:9:0"
									},
									"scope": 298,
									"src": "8720:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "4581:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9392:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9392:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9404:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9404:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9458:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9489:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9457:57:0"
									},
									"src": "9431:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9633:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9639:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9639:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9659:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9659:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9639:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9677:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9686:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9677:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9677:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9735:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9727:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9739:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9706:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9706:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9701:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9621:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9633:0:0"
									},
									"scope": 404,
									"src": "9609:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9869:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9882:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9875:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9836:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9859:9:0"
									},
									"scope": 404,
									"src": "9822:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9994:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10008:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10018:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10018:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10008:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10032:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "10000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10000:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10000:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10073:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9991:2:0"
									},
									"src": "9973:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10451:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10499:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10491:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10491:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10462:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10462:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10457:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10508:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10525:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10517:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10508:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10508:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10441:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10441:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10431:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10451:0:0"
									},
									"scope": 404,
									"src": "10405:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10733:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10758:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10739:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10739:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10739:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10723:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10723:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10697:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10733:0:0"
									},
									"scope": 404,
									"src": "10671:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10920:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10954:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10946:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10958:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "10926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10926:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10926:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11031:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11039:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11010:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11010:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11005:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11054:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11063:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11054:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11054:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10893:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10892:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10920:0:0"
									},
									"scope": 404,
									"src": "10865:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "9372:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11097:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IUSDT",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11106:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUSDT_$88",
											"typeString": "contract IUSDT"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11106:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11113:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11113:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899,
								404,
								88,
								113
							],
							"name": "Usdt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11131:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11125:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11144:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11156:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11165:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11156:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11176:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11207:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11216:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11207:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11236:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11227:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11247:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11281:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11281:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11313:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11313:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11339:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11339:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11364:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11364:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11409:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11415:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5553445420546f6b656e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11423:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_9654d7981f44a2b3ba3b25b667f4a6f8466aa8c8ec6e19e5dfa6a72f4d11c575",
															"typeString": "literal_string \"USDT Token\""
														},
														"value": "USDT Token"
													},
													"src": "11415:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11415:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "55534454",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11451:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
															"typeString": "literal_string \"USDT\""
														},
														"value": "USDT"
													},
													"src": "11441:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11441:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11463:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11475:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11463:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11463:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11483:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030303030303030303030303030303030303030303030303030",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11498:27:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "100000000000000000000000000"
													},
													"src": "11483:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11483:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11531:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11541:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11541:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11531:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11555:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11531:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11531:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11596:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11588:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11588:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11600:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11600:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11612:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11579:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11579:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11574:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11399:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11409:0:0"
									},
									"scope": 899,
									"src": "11388:242:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "11737:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11750:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "11743:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11702:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "11728:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11727:9:0"
									},
									"scope": 899,
									"src": "11685:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11868:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11881:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "11874:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11833:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11859:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11858:9:0"
									},
									"scope": 899,
									"src": "11816:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "12003:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "12016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "12009:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11962:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "11988:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11987:15:0"
									},
									"scope": 899,
									"src": "11947:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12130:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12143:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12136:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12089:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12115:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12114:15:0"
									},
									"scope": 899,
									"src": "12076:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12258:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12271:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12264:19:0"
											}
										]
									},
									"documentation": "@dev See {USDT-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12223:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12249:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12248:9:0"
									},
									"scope": 899,
									"src": "12203:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12404:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12417:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12427:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12417:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12410:25:0"
											}
										]
									},
									"documentation": "@dev See {USDT-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12354:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12395:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12394:9:0"
									},
									"scope": 899,
									"src": "12336:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "12700:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12716:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12716:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "12730:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "12741:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "12706:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12706:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "12706:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12761:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "12754:11:0"
											}
										]
									},
									"documentation": "@dev See {USDT-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12641:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12660:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12640:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12694:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12693:6:0"
									},
									"scope": 899,
									"src": "12623:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "12901:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12914:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "12926:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12914:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "12933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12914:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "12907:34:0"
											}
										]
									},
									"documentation": "@dev See {USDT-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12837:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12852:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12836:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12891:9:0"
									},
									"scope": 899,
									"src": "12818:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13140:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13155:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13155:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13169:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13146:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13146:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13146:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13198:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13191:11:0"
											}
										]
									},
									"documentation": "@dev See {USDT-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13082:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13133:6:0"
									},
									"scope": 899,
									"src": "13066:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "13733:190:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13749:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "13757:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "13739:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13739:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "13739:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13798:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13798:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "13850:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "555344543a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13858:41:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_48762184e6cc81b01f1cf7132221fcca5eb3c474c8add2ea70000c20f5565b7e",
																		"typeString": "literal_string \"USDT: transfer amount exceeds allowance\""
																	},
																	"value": "USDT: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_48762184e6cc81b01f1cf7132221fcca5eb3c474c8add2ea70000c20f5565b7e",
																		"typeString": "literal_string \"USDT: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13812:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "13824:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13812:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13832:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13832:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13812:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13812:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13812:88:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13781:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13781:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "13781:120:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13914:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "13907:11:0"
											}
										]
									},
									"documentation": "@dev See {USDT-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {USDT};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13674:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13657:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13727:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13727:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13726:6:0"
									},
									"scope": 899,
									"src": "13636:287:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14376:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14391:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14391:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14453:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14414:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14426:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14426:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14414:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14440:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14414:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14414:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14414:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14382:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14382:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14382:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14478:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14471:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {USDT-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14317:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14334:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14316:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14369:6:0"
									},
									"scope": 899,
									"src": "14290:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "15033:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15048:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15048:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "15062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15110:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "555344543a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15127:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_209244f047a8224dd09938f43ca844bf644f39b7061501ffe1cc3ce9909b330b",
																		"typeString": "literal_string \"USDT: decreased allowance below zero\""
																	},
																	"value": "USDT: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_209244f047a8224dd09938f43ca844bf644f39b7061501ffe1cc3ce9909b330b",
																		"typeString": "literal_string \"USDT: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15071:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15083:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15083:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15071:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "15097:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15071:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15071:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15071:95:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "15039:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15039:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "15039:128:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15180:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15173:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {USDT-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14986:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14968:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15027:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15027:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15026:6:0"
									},
									"scope": 899,
									"src": "14942:247:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "15441:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 675,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15453:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15453:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "15447:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15447:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "15447:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15487:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 673,
												"id": 681,
												"nodeType": "Return",
												"src": "15480:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 670,
											"modifierName": {
												"argumentTypes": null,
												"id": 669,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15416:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15416:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15392:16:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15434:6:0"
									},
									"scope": 899,
									"src": "15379:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "16019:360:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 693,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "16033:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16051:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16043:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16043:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16033:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "555344543a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16055:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b47312614118ca974cd1cb0785cf101003663749b22596bc8e7ea6ce64a4aa76",
																"typeString": "literal_string \"USDT: transfer from the zero address\""
															},
															"value": "USDT: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b47312614118ca974cd1cb0785cf101003663749b22596bc8e7ea6ce64a4aa76",
																"typeString": "literal_string \"USDT: transfer from the zero address\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16025:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "16025:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16108:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16129:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16121:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16121:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16108:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "555344543a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16133:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_423f148df64af2854c983cfa14596dfe53761b85317edf4f394d9416b513853b",
																"typeString": "literal_string \"USDT: transfer to the zero address\""
															},
															"value": "USDT: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_423f148df64af2854c983cfa14596dfe53761b85317edf4f394d9416b513853b",
																"typeString": "literal_string \"USDT: transfer to the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16100:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "16100:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 710,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16177:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 712,
														"indexExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16177:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 717,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16219:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "555344543a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16227:39:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0ae587bda794751604922be67654f7ce009e430d2fb0a0638a0adf55cced3d54",
																	"typeString": "literal_string \"USDT: transfer amount exceeds balance\""
																},
																"value": "USDT: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_0ae587bda794751604922be67654f7ce009e430d2fb0a0638a0adf55cced3d54",
																	"typeString": "literal_string \"USDT: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16197:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "16207:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16197:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16197:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16197:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16177:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "16177:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 722,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16273:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"argumentTypes": null,
															"id": 723,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16283:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16273:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 729,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16321:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16296:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 726,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "16306:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16296:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16296:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16296:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16273:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "16273:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 734,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 735,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16356:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 736,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16367:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16339:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16339:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "EmitStatement",
												"src": "16334:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15994:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15958:51:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16019:0:0"
									},
									"scope": 899,
									"src": "15940:439:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "16686:226:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 748,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "16700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16719:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16711:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16711:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16700:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "555344543a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16723:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_576fc93ce2da181a406f19cfccd6d08d1e6dfbfe476a6e073b0b05d7abd67364",
																"typeString": "literal_string \"USDT: mint to the zero address\""
															},
															"value": "USDT: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_576fc93ce2da181a406f19cfccd6d08d1e6dfbfe476a6e073b0b05d7abd67364",
																"typeString": "literal_string \"USDT: mint to the zero address\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16692:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "16692:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 756,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16763:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 759,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "16795:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 757,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16778:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16778:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16778:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16763:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "16763:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 763,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16808:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 765,
														"indexExpression": {
															"argumentTypes": null,
															"id": 764,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16808:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 770,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "16852:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 766,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16829:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 768,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "16839:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16829:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16829:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16829:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16808:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "16808:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16887:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16879:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16879:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "16900:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16870:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "16865:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16661:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16643:33:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16686:0:0"
									},
									"scope": 899,
									"src": "16629:283:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "17264:265:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 791,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "17278:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17297:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17289:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17289:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17278:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "555344543a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17301:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_809345a7811a54793a8439b163431ba8281a32befaed989f37b8f7ba82699988",
																"typeString": "literal_string \"USDT: burn from the zero address\""
															},
															"value": "USDT: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_809345a7811a54793a8439b163431ba8281a32befaed989f37b8f7ba82699988",
																"typeString": "literal_string \"USDT: burn from the zero address\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17270:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "17270:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17343:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17343:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17387:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "555344543a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17395:35:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a0efbd53ea7a05320d3b4a79f6b674fee94a3ec9cc2759558d5ff656f8bfcd36",
																	"typeString": "literal_string \"USDT: burn amount exceeds balance\""
																},
																"value": "USDT: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a0efbd53ea7a05320d3b4a79f6b674fee94a3ec9cc2759558d5ff656f8bfcd36",
																	"typeString": "literal_string \"USDT: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17364:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "17374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17364:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17364:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17364:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17343:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "17343:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 811,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17437:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17469:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 812,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17452:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17452:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17452:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17437:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "17437:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17513:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17505:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "17517:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17487:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17487:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "17482:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17222:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17239:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17221:33:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17264:0:0"
									},
									"scope": 899,
									"src": "17207:322:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "18001:237:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "18015:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18032:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18024:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18024:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18015:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "555344543a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18036:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46b92c107683bd4bebb0fe39ab57ec138766b4510ca1e67d04027785004b14f6",
																"typeString": "literal_string \"USDT: approve from the zero address\""
															},
															"value": "USDT: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46b92c107683bd4bebb0fe39ab57ec138766b4510ca1e67d04027785004b14f6",
																"typeString": "literal_string \"USDT: approve from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "18007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18007:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "18007:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 846,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "18088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18107:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18099:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18088:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "555344543a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18111:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_adbc321b816a81a31e241db77c10a77dd37dbe8d1dd85d65bc5d681f7779acf4",
																"typeString": "literal_string \"USDT: approve to the zero address\""
															},
															"value": "USDT: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_adbc321b816a81a31e241db77c10a77dd37dbe8d1dd85d65bc5d681f7779acf4",
																"typeString": "literal_string \"USDT: approve to the zero address\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "18080:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18080:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "18080:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18154:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 857,
															"indexExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "18166:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18154:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 858,
														"indexExpression": {
															"argumentTypes": null,
															"id": 856,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18154:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 859,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "18184:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18154:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "18154:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 863,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "18210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18217:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "18226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18201:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18201:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "EmitStatement",
												"src": "18196:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17944:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17976:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17943:48:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18001:0:0"
									},
									"scope": 899,
									"src": "17926:312:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "18463:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 877,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "18484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "18469:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18469:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "18469:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 883,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18515:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18515:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 892,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "18568:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "555344543a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18576:37:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_fe9ea87a3e95b8dff4f125042811ac194e70ea2427b0ad6c62ffb49104e07a3f",
																		"typeString": "literal_string \"USDT: burn amount exceeds allowance\""
																	},
																	"value": "USDT: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_fe9ea87a3e95b8dff4f125042811ac194e70ea2427b0ad6c62ffb49104e07a3f",
																		"typeString": "literal_string \"USDT: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 885,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18529:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 887,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 886,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "18541:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18529:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 890,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 888,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18550:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18550:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18529:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18529:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18529:85:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "18497:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18497:118:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "18497:118:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18421:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18438:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18420:33:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18463:0:0"
									},
									"scope": 899,
									"src": "18402:218:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "11080:7542:0"
						}
					],
					"src": "111:18511:0"
				},
				"id": 0
			}
		}
	}
}