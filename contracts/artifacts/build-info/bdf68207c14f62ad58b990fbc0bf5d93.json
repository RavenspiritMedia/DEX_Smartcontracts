{
	"id": "bdf68207c14f62ad58b990fbc0bf5d93",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/INDRACOIN.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\n\n\npragma solidity 0.5.16;\n\ninterface IINDRA {\n  \n  function totalSupply() external view returns (uint256);\n\n \n  function decimals() external view returns (uint256);\n\n \n  function symbol() external view returns (string memory);\n\n \n  function name() external view returns (string memory);\n\n \n  function getOwner() external view returns (address);\n\n\n  function balanceOf(address account) external view returns (uint256);\n\n \n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n \n  function allowance(address _owner, address spender) external view returns (uint256);\n\n\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  \n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n \n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Context {\n  \n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; \n    return msg.data;\n  }\n}\n\n\nlibrary SafeMath {\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  \n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n \n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    \n\n    return c;\n  }\n\n\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n \n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  \n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  \n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract INDRA is Context, IINDRA, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {\n    _name = name;\n    _symbol = symbol;\n    _decimals = 18;\n    _totalSupply = totalSupply;\n    _balances[msg.sender] = address(this).balance;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n   function () external payable {\n        _balances[msg.sender] = address(this).balance;\n    }\n  \n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  function decimals() external view returns (uint256) {\n    return _decimals;\n  }\n\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  \n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n \n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n \n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  \n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"INDRA: decreased allowance below zero\"));\n    return true;\n  }\n\n \n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"INDRA: transfer from the zero address\");\n    require(recipient != address(0), \"INDRA: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"INDRA: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"INDRA: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"INDRA: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"INDRA: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n \n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"INDRA: approve from the zero address\");\n    require(spender != address(0), \"INDRA: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"INDRA: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/INDRACOIN.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/INDRACOIN.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INDRACOIN.sol\":{\"keccak256\":\"0x1ef99614987d0a17d6aeb7b1aa829c2602b69ec78e3f66facbec9e0135a4f92b\",\"urls\":[\"bzz-raw://712c31a4dbb25ba870cae2834e61f7b902fd203bc87eb132f8e03f0ade6bb538\",\"dweb:/ipfs/QmP3u2wMzmS89LbdiRxFdKG9NKRFjJM5UQHFn1tJ7N5uB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IINDRA": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/INDRACOIN.sol\":\"IINDRA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INDRACOIN.sol\":{\"keccak256\":\"0x1ef99614987d0a17d6aeb7b1aa829c2602b69ec78e3f66facbec9e0135a4f92b\",\"urls\":[\"bzz-raw://712c31a4dbb25ba870cae2834e61f7b902fd203bc87eb132f8e03f0ade6bb538\",\"dweb:/ipfs/QmP3u2wMzmS89LbdiRxFdKG9NKRFjJM5UQHFn1tJ7N5uB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"INDRA": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/INDRACOIN.sol\":3485:7631  contract INDRA is Context, IINDRA, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":62:83   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup3\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup6\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":213:223   */\n  dup3\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup9\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":372:397   */\n  dup3\n  mstore\n  pop\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  dup2\n  mload\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":411:425   */\n  swap2\n  dup3\n  add\n  swap3\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n    /* \"--CODEGEN--\":411:425   */\n  dup4\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":90:101   */\n  dup2\n  dup2\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n  dup3\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":62:83   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":114:128   */\n  dup3\n  add\n    /* \"--CODEGEN--\":138:169   */\n  dup6\n  dup2\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":213:223   */\n  dup3\n  mload\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":244:273   */\n  dup2\n  gt\n    /* \"--CODEGEN--\":285:328   */\n  dup3\n  dup3\n  add\n    /* \"--CODEGEN--\":282:340   */\n  dup9\n  lt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":372:397   */\n  dup3\n  mstore\n  pop\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  dup2\n  mload\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":411:425   */\n  swap2\n  dup3\n  add\n  swap3\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n    /* \"--CODEGEN--\":411:425   */\n  dup4\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":90:101   */\n  dup2\n  dup2\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n  dup3\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  mload\n  swap2\n  pop\n    /* \"contracts/INDRACOIN.sol\":2724:2741  address msgSender */\n  0x00\n  swap1\n  pop\n    /* \"contracts/INDRACOIN.sol\":2744:2756  _msgSender() */\n  tag_22\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/INDRACOIN.sol\":2744:2754  _msgSender */\n  tag_23\n    /* \"contracts/INDRACOIN.sol\":2744:2756  _msgSender() */\n  and\n  jump\t// in\ntag_22:\n    /* \"contracts/INDRACOIN.sol\":2762:2768  _owner */\n  0x00\n    /* \"contracts/INDRACOIN.sol\":2762:2780  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/INDRACOIN.sol\":2791:2834  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/INDRACOIN.sol\":2762:2780  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/INDRACOIN.sol\":2791:2834  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/INDRACOIN.sol\":2762:2768  _owner */\n  dup3\n  swap1\n    /* \"contracts/INDRACOIN.sol\":2791:2834  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/INDRACOIN.sol\":3885:3897  _name = name */\n  dup3\n  mload\n  tag_25\n  swap1\n    /* \"contracts/INDRACOIN.sol\":3885:3890  _name */\n  0x06\n  swap1\n    /* \"contracts/INDRACOIN.sol\":3885:3897  _name = name */\n  0x20\n  dup7\n  add\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n    /* \"contracts/INDRACOIN.sol\":3903:3919  _symbol = symbol */\n  dup2\n  mload\n  tag_27\n  swap1\n    /* \"contracts/INDRACOIN.sol\":3903:3910  _symbol */\n  0x05\n  swap1\n    /* \"contracts/INDRACOIN.sol\":3903:3919  _symbol = symbol */\n  0x20\n  dup6\n  add\n  swap1\n  tag_26\n  jump\t// in\ntag_27:\n  pop\n    /* \"contracts/INDRACOIN.sol\":3925:3934  _decimals */\n  0x04\n    /* \"contracts/INDRACOIN.sol\":3925:3939  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/INDRACOIN.sol\":3937:3939  18 */\n  0x12\n    /* \"contracts/INDRACOIN.sol\":3925:3939  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/INDRACOIN.sol\":3945:3957  _totalSupply */\n  0x03\n    /* \"contracts/INDRACOIN.sol\":3945:3971  _totalSupply = totalSupply */\n  dup2\n  dup2\n  sstore\n    /* \"contracts/INDRACOIN.sol\":3987:3997  msg.sender */\n  caller\n    /* \"contracts/INDRACOIN.sol\":3925:3934  _decimals */\n  0x00\n    /* \"contracts/INDRACOIN.sol\":3977:3998  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/INDRACOIN.sol\":3925:3939  _decimals = 18 */\n  0x01\n    /* \"contracts/INDRACOIN.sol\":3977:3998  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/INDRACOIN.sol\":4001:4022  address(this).balance */\n  selfbalance\n    /* \"contracts/INDRACOIN.sol\":3977:4022  _balances[msg.sender] = address(this).balance */\n  swap1\n  sstore\n    /* \"contracts/INDRACOIN.sol\":4067:4079  _totalSupply */\n  swap4\n  sload\n    /* \"contracts/INDRACOIN.sol\":4034:4080  Transfer(address(0), msg.sender, _totalSupply) */\n  dup5\n  mload\n  swap1\n  dup2\n  mstore\n  swap4\n  mload\n    /* \"contracts/INDRACOIN.sol\":3987:3997  msg.sender */\n  swap3\n  swap4\n    /* \"contracts/INDRACOIN.sol\":3925:3934  _decimals */\n  swap2\n  swap3\n    /* \"contracts/INDRACOIN.sol\":4034:4080  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/INDRACOIN.sol\":3795:4085  constructor(string memory name, string memory symbol ,uint256  totalSupply ) public {... */\n  pop\n  pop\n  pop\n    /* \"contracts/INDRACOIN.sol\":3485:7631  contract INDRA is Context, IINDRA, Ownable {... */\n  jump(tag_28)\n    /* \"contracts/INDRACOIN.sol\":1037:1127  function _msgSender() internal view returns (address payable) {... */\ntag_23:\n    /* \"contracts/INDRACOIN.sol\":1112:1122  msg.sender */\n  caller\n    /* \"contracts/INDRACOIN.sol\":1037:1127  function _msgSender() internal view returns (address payable) {... */\ntag_29:\n  swap1\n  jump\t// out\n    /* \"contracts/INDRACOIN.sol\":3485:7631  contract INDRA is Context, IINDRA, Ownable {... */\ntag_26:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\n  tag_29\n  swap2\n  swap1\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_37)\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/INDRACOIN.sol\":3485:7631  contract INDRA is Context, IINDRA, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n        /* \"contracts/INDRACOIN.sol\":4138:4148  msg.sender */\n      caller\n        /* \"contracts/INDRACOIN.sol\":4128:4149  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":4128:4137  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":4128:4149  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":4152:4173  address(this).balance */\n      selfbalance\n        /* \"contracts/INDRACOIN.sol\":4128:4173  _balances[msg.sender] = address(this).balance */\n      swap1\n      sstore\n        /* \"contracts/INDRACOIN.sol\":3485:7631  contract INDRA is Context, IINDRA, Ownable {... */\n      stop\n        /* \"contracts/INDRACOIN.sol\":4436:4513  function name() external view returns (string memory) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/INDRACOIN.sol\":4436:4513  function name() external view returns (string memory) {... */\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_29:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_29)\n    tag_31:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/INDRACOIN.sol\":4436:4513  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_32\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_32:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/INDRACOIN.sol\":5005:5146  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/INDRACOIN.sol\":5005:5146  function approve(address spender, uint256 amount) external returns (bool) {... */\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5005:5146  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/INDRACOIN.sol\":4520:4605  function totalSupply() external view returns (uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"contracts/INDRACOIN.sol\":4520:4605  function totalSupply() external view returns (uint256) {... */\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/INDRACOIN.sol\":5151:5439  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/INDRACOIN.sol\":5151:5439  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5151:5439  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_43\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4267:4346  function decimals() external view returns (uint256) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n        /* \"contracts/INDRACOIN.sol\":4267:4346  function decimals() external view returns (uint256) {... */\n      pop\n      tag_38\n      tag_46\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":3720:3742  uint8 public _decimals */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_47:\n        /* \"contracts/INDRACOIN.sol\":3720:3742  uint8 public _decimals */\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/INDRACOIN.sol\":5445:5642  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"contracts/INDRACOIN.sol\":5445:5642  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5445:5642  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_53\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4610:4714  function balanceOf(address account) external view returns (uint256) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/INDRACOIN.sol\":4610:4714  function balanceOf(address account) external view returns (uint256) {... */\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n      pop\n        /* \"contracts/INDRACOIN.sol\":4610:4714  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_57\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":3031:3158  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_58:\n        /* \"contracts/INDRACOIN.sol\":3031:3158  function renounceOwnership() public onlyOwner {... */\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/INDRACOIN.sol\":4186:4263  function getOwner() external view returns (address) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"contracts/INDRACOIN.sol\":4186:4263  function getOwner() external view returns (address) {... */\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/INDRACOIN.sol\":2843:2914  function owner() public view returns (address) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_64:\n        /* \"contracts/INDRACOIN.sol\":2843:2914  function owner() public view returns (address) {... */\n      pop\n      tag_62\n      tag_66\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4350:4431  function symbol() external view returns (string memory) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n        /* \"contracts/INDRACOIN.sol\":4350:4431  function symbol() external view returns (string memory) {... */\n      pop\n      tag_27\n      tag_69\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":5903:6020  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_74:\n        /* \"contracts/INDRACOIN.sol\":5903:6020  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n      pop\n        /* \"contracts/INDRACOIN.sol\":5903:6020  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      calldataload\n      tag_77\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":5649:5897  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n        /* \"contracts/INDRACOIN.sol\":5649:5897  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5649:5897  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_81\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4719:4866  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_82:\n        /* \"contracts/INDRACOIN.sol\":4719:4866  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":4719:4866  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_85\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":3746:3767  string public _symbol */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_86:\n        /* \"contracts/INDRACOIN.sol\":3746:3767  string public _symbol */\n      pop\n      tag_27\n      tag_88\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":3771:3790  string public _name */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_93:\n        /* \"contracts/INDRACOIN.sol\":3771:3790  string public _name */\n      pop\n      tag_27\n      tag_95\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4871:4999  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_100:\n        /* \"contracts/INDRACOIN.sol\":4871:4999  function allowance(address owner, address spender) external view returns (uint256) {... */\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_102:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":4871:4999  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_103\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":3165:3266  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_104:\n        /* \"contracts/INDRACOIN.sol\":3165:3266  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n      pop\n        /* \"contracts/INDRACOIN.sol\":3165:3266  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_107\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4436:4513  function name() external view returns (string memory) {... */\n    tag_28:\n        /* \"contracts/INDRACOIN.sol\":4503:4508  _name */\n      0x06\n        /* \"contracts/INDRACOIN.sol\":4496:4508  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":4475:4488  string memory */\n      0x60\n      swap4\n        /* \"contracts/INDRACOIN.sol\":4496:4508  return _name */\n      swap1\n      swap3\n        /* \"contracts/INDRACOIN.sol\":4503:4508  _name */\n      swap1\n      swap2\n        /* \"contracts/INDRACOIN.sol\":4496:4508  return _name */\n      dup4\n      add\n        /* \"contracts/INDRACOIN.sol\":4503:4508  _name */\n      dup3\n        /* \"contracts/INDRACOIN.sol\":4496:4508  return _name */\n      dup3\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/INDRACOIN.sol\":4436:4513  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":5005:5146  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_36:\n        /* \"contracts/INDRACOIN.sol\":5073:5077  bool */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":5085:5124  _approve(_msgSender(), spender, amount) */\n      tag_113\n        /* \"contracts/INDRACOIN.sol\":5094:5106  _msgSender() */\n      tag_114\n        /* \"contracts/INDRACOIN.sol\":5094:5104  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5094:5106  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/INDRACOIN.sol\":5108:5115  spender */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5117:5123  amount */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5085:5093  _approve */\n      tag_116\n        /* \"contracts/INDRACOIN.sol\":5085:5124  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_113:\n      pop\n        /* \"contracts/INDRACOIN.sol\":5137:5141  true */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":5005:5146  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":4520:4605  function totalSupply() external view returns (uint256) {... */\n    tag_39:\n        /* \"contracts/INDRACOIN.sol\":4588:4600  _totalSupply */\n      sload(0x03)\n        /* \"contracts/INDRACOIN.sol\":4520:4605  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":5151:5439  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_43:\n        /* \"contracts/INDRACOIN.sol\":5242:5246  bool */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":5254:5290  _transfer(sender, recipient, amount) */\n      tag_119\n        /* \"contracts/INDRACOIN.sol\":5264:5270  sender */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5272:5281  recipient */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5283:5289  amount */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5254:5263  _transfer */\n      tag_120\n        /* \"contracts/INDRACOIN.sol\":5254:5290  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/INDRACOIN.sol\":5296:5417  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\")) */\n      tag_121\n        /* \"contracts/INDRACOIN.sol\":5305:5311  sender */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5313:5325  _msgSender() */\n      tag_122\n        /* \"contracts/INDRACOIN.sol\":5313:5323  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5313:5325  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/INDRACOIN.sol\":5327:5416  _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\") */\n      tag_123\n        /* \"contracts/INDRACOIN.sol\":5365:5371  amount */\n      dup6\n        /* \"contracts/INDRACOIN.sol\":5327:5416  _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_8e0e7ca5ca1c2590910e85c739f0bd59796087e31e7dc4665d54032c8b8a61df\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5327:5346  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":5327:5338  _allowances */\n      0x02\n        /* \"contracts/INDRACOIN.sol\":5327:5346  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/INDRACOIN.sol\":5347:5359  _msgSender() */\n      tag_124\n        /* \"contracts/INDRACOIN.sol\":5347:5357  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5347:5359  _msgSender() */\n      jump\t// in\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5327:5360  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/INDRACOIN.sol\":5327:5416  _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":5327:5364  _allowances[sender][_msgSender()].sub */\n      tag_125\n        /* \"contracts/INDRACOIN.sol\":5327:5416  _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/INDRACOIN.sol\":5296:5304  _approve */\n      tag_116\n        /* \"contracts/INDRACOIN.sol\":5296:5417  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"INDRA: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"contracts/INDRACOIN.sol\":5430:5434  true */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":5151:5439  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":4267:4346  function decimals() external view returns (uint256) {... */\n    tag_46:\n        /* \"contracts/INDRACOIN.sol\":4332:4341  _decimals */\n      and(0xff, sload(0x04))\n        /* \"contracts/INDRACOIN.sol\":4267:4346  function decimals() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":3720:3742  uint8 public _decimals */\n    tag_49:\n      and(0xff, sload(0x04))\n      dup2\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":5445:5642  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_53:\n        /* \"contracts/INDRACOIN.sol\":5525:5529  bool */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":5537:5620  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_113\n        /* \"contracts/INDRACOIN.sol\":5546:5558  _msgSender() */\n      tag_129\n        /* \"contracts/INDRACOIN.sol\":5546:5556  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5546:5558  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/INDRACOIN.sol\":5560:5567  spender */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5569:5619  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_123\n        /* \"contracts/INDRACOIN.sol\":5608:5618  addedValue */\n      dup6\n        /* \"contracts/INDRACOIN.sol\":5569:5580  _allowances */\n      0x02\n        /* \"contracts/INDRACOIN.sol\":5569:5594  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":5581:5593  _msgSender() */\n      tag_131\n        /* \"contracts/INDRACOIN.sol\":5581:5591  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5581:5593  _msgSender() */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5569:5594  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":5569:5603  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/INDRACOIN.sol\":5569:5619  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":5569:5607  _allowances[_msgSender()][spender].add */\n      tag_132\n        /* \"contracts/INDRACOIN.sol\":5569:5619  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4610:4714  function balanceOf(address account) external view returns (uint256) {... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":4691:4709  _balances[account] */\n      and\n        /* \"contracts/INDRACOIN.sol\":4669:4676  uint256 */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":4691:4709  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":4691:4700  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":4691:4709  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/INDRACOIN.sol\":4610:4714  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":3031:3158  function renounceOwnership() public onlyOwner {... */\n    tag_60:\n        /* \"contracts/INDRACOIN.sol\":2966:2978  _msgSender() */\n      tag_135\n        /* \"contracts/INDRACOIN.sol\":2966:2976  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":2966:2978  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/INDRACOIN.sol\":2956:2962  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/INDRACOIN.sol\":2956:2978  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/INDRACOIN.sol\":2948:3015  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/INDRACOIN.sol\":3125:3126  0 */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":3109:3115  _owner */\n      dup1\n      sload\n        /* \"contracts/INDRACOIN.sol\":3088:3128  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":3109:3115  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/INDRACOIN.sol\":3088:3128  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/INDRACOIN.sol\":3125:3126  0 */\n      dup4\n      swap1\n        /* \"contracts/INDRACOIN.sol\":3088:3128  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/INDRACOIN.sol\":3151:3152  0 */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":3134:3153  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/INDRACOIN.sol\":3031:3158  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":4186:4263  function getOwner() external view returns (address) {... */\n    tag_63:\n        /* \"contracts/INDRACOIN.sol\":4229:4236  address */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":4251:4258  owner() */\n      tag_139\n        /* \"contracts/INDRACOIN.sol\":4251:4256  owner */\n      tag_66\n        /* \"contracts/INDRACOIN.sol\":4251:4258  owner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/INDRACOIN.sol\":4244:4258  return owner() */\n      swap1\n      pop\n        /* \"contracts/INDRACOIN.sol\":4186:4263  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":2843:2914  function owner() public view returns (address) {... */\n    tag_66:\n        /* \"contracts/INDRACOIN.sol\":2881:2888  address */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":2903:2909  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/INDRACOIN.sol\":2843:2914  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":4350:4431  function symbol() external view returns (string memory) {... */\n    tag_69:\n        /* \"contracts/INDRACOIN.sol\":4419:4426  _symbol */\n      0x05\n        /* \"contracts/INDRACOIN.sol\":4412:4426  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":4391:4404  string memory */\n      0x60\n      swap4\n        /* \"contracts/INDRACOIN.sol\":4412:4426  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/INDRACOIN.sol\":4419:4426  _symbol */\n      swap1\n      swap2\n        /* \"contracts/INDRACOIN.sol\":4412:4426  return _symbol */\n      dup4\n      add\n        /* \"contracts/INDRACOIN.sol\":4419:4426  _symbol */\n      dup3\n        /* \"contracts/INDRACOIN.sol\":4412:4426  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n        /* \"contracts/INDRACOIN.sol\":5903:6020  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_77:\n        /* \"contracts/INDRACOIN.sol\":5959:5963  bool */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":2966:2978  _msgSender() */\n      tag_146\n        /* \"contracts/INDRACOIN.sol\":2966:2976  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":2966:2978  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/INDRACOIN.sol\":2956:2962  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/INDRACOIN.sol\":2956:2978  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/INDRACOIN.sol\":2948:3015  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/INDRACOIN.sol\":5971:5998  _mint(_msgSender(), amount) */\n      tag_149\n        /* \"contracts/INDRACOIN.sol\":5977:5989  _msgSender() */\n      tag_150\n        /* \"contracts/INDRACOIN.sol\":5977:5987  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5977:5989  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/INDRACOIN.sol\":5991:5997  amount */\n      dup4\n        /* \"contracts/INDRACOIN.sol\":5971:5976  _mint */\n      tag_151\n        /* \"contracts/INDRACOIN.sol\":5971:5998  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_149:\n      pop\n        /* \"contracts/INDRACOIN.sol\":6011:6015  true */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":5903:6020  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":5649:5897  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_81:\n        /* \"contracts/INDRACOIN.sol\":5734:5738  bool */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":5746:5875  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"INDRA: decreased allowance below zero\")) */\n      tag_113\n        /* \"contracts/INDRACOIN.sol\":5755:5767  _msgSender() */\n      tag_154\n        /* \"contracts/INDRACOIN.sol\":5755:5765  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5755:5767  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/INDRACOIN.sol\":5769:5776  spender */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":5778:5874  _allowances[_msgSender()][spender].sub(subtractedValue, \"INDRA: decreased allowance below zero\") */\n      tag_123\n        /* \"contracts/INDRACOIN.sol\":5817:5832  subtractedValue */\n      dup6\n        /* \"contracts/INDRACOIN.sol\":5778:5874  _allowances[_msgSender()][spender].sub(subtractedValue, \"INDRA: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_45415ede0acc6bd3066af00c2697f110d2b840a11e6d6982fbdee162cf63f851\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/INDRACOIN.sol\":5778:5789  _allowances */\n      0x02\n        /* \"contracts/INDRACOIN.sol\":5778:5803  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":5790:5802  _msgSender() */\n      tag_156\n        /* \"contracts/INDRACOIN.sol\":5790:5800  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":5790:5802  _msgSender() */\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":5778:5803  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":5778:5812  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/INDRACOIN.sol\":5778:5874  _allowances[_msgSender()][spender].sub(subtractedValue, \"INDRA: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":5778:5816  _allowances[_msgSender()][spender].sub */\n      tag_125\n        /* \"contracts/INDRACOIN.sol\":5778:5874  _allowances[_msgSender()][spender].sub(subtractedValue, \"INDRA: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":4719:4866  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_85:\n        /* \"contracts/INDRACOIN.sol\":4790:4794  bool */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":4802:4844  _transfer(_msgSender(), recipient, amount) */\n      tag_113\n        /* \"contracts/INDRACOIN.sol\":4812:4824  _msgSender() */\n      tag_159\n        /* \"contracts/INDRACOIN.sol\":4812:4822  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":4812:4824  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/INDRACOIN.sol\":4826:4835  recipient */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":4837:4843  amount */\n      dup5\n        /* \"contracts/INDRACOIN.sol\":4802:4811  _transfer */\n      tag_120\n        /* \"contracts/INDRACOIN.sol\":4802:4844  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/INDRACOIN.sol\":3746:3767  string public _symbol */\n    tag_88:\n      0x05\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_161\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_160)\n    tag_161:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_162:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_162\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":3771:3790  string public _name */\n    tag_95:\n      0x06\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_161\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_160)\n        /* \"contracts/INDRACOIN.sol\":4871:4999  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":4967:4985  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/INDRACOIN.sol\":4945:4952  uint256 */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":4967:4985  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":4967:4978  _allowances */\n      0x02\n        /* \"contracts/INDRACOIN.sol\":4967:4985  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":4967:4994  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/INDRACOIN.sol\":4871:4999  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":3165:3266  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_107:\n        /* \"contracts/INDRACOIN.sol\":2966:2978  _msgSender() */\n      tag_168\n        /* \"contracts/INDRACOIN.sol\":2966:2976  _msgSender */\n      tag_115\n        /* \"contracts/INDRACOIN.sol\":2966:2978  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/INDRACOIN.sol\":2956:2962  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/INDRACOIN.sol\":2956:2978  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/INDRACOIN.sol\":2948:3015  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/INDRACOIN.sol\":3233:3261  _transferOwnership(newOwner) */\n      tag_171\n        /* \"contracts/INDRACOIN.sol\":3252:3260  newOwner */\n      dup2\n        /* \"contracts/INDRACOIN.sol\":3233:3251  _transferOwnership */\n      tag_172\n        /* \"contracts/INDRACOIN.sol\":3233:3261  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/INDRACOIN.sol\":3165:3266  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":1037:1127  function _msgSender() internal view returns (address payable) {... */\n    tag_115:\n        /* \"contracts/INDRACOIN.sol\":1112:1122  msg.sender */\n      caller\n        /* \"contracts/INDRACOIN.sol\":1037:1127  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":7091:7405  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":7180:7199  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/INDRACOIN.sol\":7172:7240  require(owner != address(0), \"INDRA: approve from the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_47949132d0418a546a65e4198ed7750521b37dad62de03c2d59c129fe516d815\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":7254:7275  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/INDRACOIN.sol\":7246:7314  require(spender != address(0), \"INDRA: approve to the zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b9bec085af116e013ba0cb4636ece7f9f4c8510858860b65c909f4ff37f0dbc9\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":7321:7339  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":7321:7332  _allowances */\n      0x02\n        /* \"contracts/INDRACOIN.sol\":7321:7339  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":7321:7348  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":7321:7357  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/INDRACOIN.sol\":7368:7400  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/INDRACOIN.sol\":7091:7405  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":6025:6467  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6118:6138  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/INDRACOIN.sol\":6110:6180  require(sender != address(0), \"INDRA: transfer from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_43f189f9d541f43c4b16605e8b10a0c6a0bed6754e87651b1b429cf06ade5fad\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6194:6217  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/INDRACOIN.sol\":6186:6257  require(recipient != address(0), \"INDRA: transfer to the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a5c59fe32750386f83567659e2cfaaef18aabfb3d8280ada7958f80697567f0f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/INDRACOIN.sol\":6284:6355  _balances[sender].sub(amount, \"INDRA: transfer amount exceeds balance\") */\n      tag_180\n        /* \"contracts/INDRACOIN.sol\":6306:6312  amount */\n      dup2\n        /* \"contracts/INDRACOIN.sol\":6284:6355  _balances[sender].sub(amount, \"INDRA: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_63cc03a3ef4e80d9618a5eb98be8749a7d78a0ec13f39748ef2bdd594171f4e5\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6284:6301  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":6284:6293  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":6284:6301  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/INDRACOIN.sol\":6284:6355  _balances[sender].sub(amount, \"INDRA: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":6284:6305  _balances[sender].sub */\n      tag_125\n        /* \"contracts/INDRACOIN.sol\":6284:6355  _balances[sender].sub(amount, \"INDRA: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6264:6281  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":6264:6273  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":6264:6281  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":6264:6355  _balances[sender] = _balances[sender].sub(amount, \"INDRA: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/INDRACOIN.sol\":6384:6404  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/INDRACOIN.sol\":6384:6416  _balances[recipient].add(amount) */\n      tag_181\n      swap1\n        /* \"contracts/INDRACOIN.sol\":6409:6415  amount */\n      dup3\n        /* \"contracts/INDRACOIN.sol\":6384:6416  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":6384:6408  _balances[recipient].add */\n      tag_132\n        /* \"contracts/INDRACOIN.sol\":6384:6416  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6361:6381  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":6361:6370  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":6361:6381  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":6361:6416  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/INDRACOIN.sol\":6427:6462  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/INDRACOIN.sol\":6361:6381  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/INDRACOIN.sol\":6427:6462  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/INDRACOIN.sol\":6025:6467  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":1555:1728  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"contracts/INDRACOIN.sol\":1641:1648  uint256 */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":1672:1684  errorMessage */\n      dup2\n        /* \"contracts/INDRACOIN.sol\":1664:1670  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/INDRACOIN.sol\":1656:1685  require(b <= a, errorMessage) */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_184:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_186\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_184)\n    tag_186:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/INDRACOIN.sol\":1656:1685  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_187\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_187:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n      pop\n      pop\n      pop\n        /* \"contracts/INDRACOIN.sol\":1703:1708  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/INDRACOIN.sol\":1555:1728  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":1252:1414  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"contracts/INDRACOIN.sol\":1310:1317  uint256 */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":1337:1342  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/INDRACOIN.sol\":1356:1362  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/INDRACOIN.sol\":1348:1394  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_189\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/INDRACOIN.sol\":1408:1409  c */\n      swap4\n        /* \"contracts/INDRACOIN.sol\":1252:1414  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":6472:6756  function _mint(address account, uint256 amount) internal {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6543:6564  account != address(0) */\n      dup3\n      and\n        /* \"contracts/INDRACOIN.sol\":6535:6600  require(account != address(0), \"INDRA: mint to the zero address\") */\n      tag_191\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x494e4452413a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/INDRACOIN.sol\":6622:6634  _totalSupply */\n      sload(0x03)\n        /* \"contracts/INDRACOIN.sol\":6622:6646  _totalSupply.add(amount) */\n      tag_192\n      swap1\n        /* \"contracts/INDRACOIN.sol\":6639:6645  amount */\n      dup3\n        /* \"contracts/INDRACOIN.sol\":6622:6646  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":6622:6638  _totalSupply.add */\n      tag_132\n        /* \"contracts/INDRACOIN.sol\":6622:6646  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/INDRACOIN.sol\":6607:6619  _totalSupply */\n      0x03\n        /* \"contracts/INDRACOIN.sol\":6607:6646  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6673:6691  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":6673:6682  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":6673:6691  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/INDRACOIN.sol\":6673:6703  _balances[account].add(amount) */\n      tag_193\n      swap1\n        /* \"contracts/INDRACOIN.sol\":6696:6702  amount */\n      dup3\n        /* \"contracts/INDRACOIN.sol\":6673:6703  _balances[account].add(amount) */\n      0xffffffff\n        /* \"contracts/INDRACOIN.sol\":6673:6695  _balances[account].add */\n      tag_132\n        /* \"contracts/INDRACOIN.sol\":6673:6703  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":6652:6670  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/INDRACOIN.sol\":6652:6661  _balances */\n      0x01\n        /* \"contracts/INDRACOIN.sol\":6652:6670  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/INDRACOIN.sol\":6652:6703  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/INDRACOIN.sol\":6714:6751  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/INDRACOIN.sol\":6652:6670  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/INDRACOIN.sol\":6714:6751  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/INDRACOIN.sol\":6472:6756  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/INDRACOIN.sol\":3270:3481  function _transferOwnership(address newOwner) internal {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/INDRACOIN.sol\":3339:3361  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/INDRACOIN.sol\":3331:3404  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/INDRACOIN.sol\":3436:3442  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/INDRACOIN.sol\":3415:3453  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/INDRACOIN.sol\":3436:3442  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/INDRACOIN.sol\":3415:3453  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/INDRACOIN.sol\":3459:3465  _owner */\n      0x00\n        /* \"contracts/INDRACOIN.sol\":3459:3476  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/INDRACOIN.sol\":3270:3481  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_43f189f9d541f43c4b16605e8b10a0c6a0bed6754e87651b1b429cf06ade5fad 494e4452413a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_45415ede0acc6bd3066af00c2697f110d2b840a11e6d6982fbdee162cf63f851 494e4452413a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_47949132d0418a546a65e4198ed7750521b37dad62de03c2d59c129fe516d815 494e4452413a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_63cc03a3ef4e80d9618a5eb98be8749a7d78a0ec13f39748ef2bdd594171f4e5 494e4452413a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_8e0e7ca5ca1c2590910e85c739f0bd59796087e31e7dc4665d54032c8b8a61df 494e4452413a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a5c59fe32750386f83567659e2cfaaef18aabfb3d8280ada7958f80697567f0f 494e4452413a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b9bec085af116e013ba0cb4636ece7f9f4c8510858860b65c909f4ff37f0dbc9 494e4452413a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582004b1bcaa31652c6047149b56e2f50163b15469bc0590b2386c3200bc0e2f94df64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13C7 CODESIZE SUB DUP1 PUSH3 0x13C7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD MLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH3 0x1B9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x296 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP3 MLOAD PUSH3 0x218 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x29B JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x22E SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x29B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH1 0x3 DUP2 DUP2 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SELFBALANCE SWAP1 SSTORE SWAP4 SLOAD DUP5 MLOAD SWAP1 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP PUSH3 0x33D JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2DE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x30E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x30E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x30E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2F1 JUMP JUMPDEST POP PUSH3 0x31C SWAP3 SWAP2 POP PUSH3 0x320 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x298 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x31C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x327 JUMP JUMPDEST PUSH2 0x107A DUP1 PUSH3 0x34D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x488 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3B1 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x315 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x226 JUMPI JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SELFBALANCE SWAP1 SSTORE STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x177 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x601 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x613 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x745 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x754 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x8BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x94A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x55E PUSH2 0xA46 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA4A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP5 DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x5F7 DUP5 PUSH2 0x58D PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x5F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x5CB PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC94 AND JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x620 PUSH2 0xA46 JUMP JUMPDEST DUP5 PUSH2 0x5F2 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x631 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x68A PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 PUSH2 0x745 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BF PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x821 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x832 PUSH2 0x82C PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0xD8C JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x847 PUSH2 0xA46 JUMP JUMPDEST DUP5 PUSH2 0x5F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x871 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC94 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x8B5 PUSH2 0xA46 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x917 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x925 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x917 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xE7E JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1024 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF45 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1001 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC03 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC94 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xC38 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD15 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xD85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E4452413A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDFA SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF1F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373494E4452413A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373494E4452413A20646563726561736564 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E63652062656C6F77207A65726F 0x49 0x4E DIFFICULTY MSTORE COINBASE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 0x49 0x4E DIFFICULTY MSTORE COINBASE GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365494E4452413A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x494E4452413A KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x49 0x4E DIFFICULTY MSTORE COINBASE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582004B1BCAA31652C PUSH1 0x47 EQ SWAP12 JUMP 0xE2 CREATE2 ADD PUSH4 0xB15469BC SDIV SWAP1 0xB2 CODESIZE PUSH13 0x3200BC0E2F94DF64736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "3485:4146:0:-;;;3795:290;8:9:-1;5:2;;;30:1;27;20:12;5:2;3795:290:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3795:290:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3795:290:0;;420:4:-1;411:14;;;;3795:290:0;;;;;411:14:-1;3795:290:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3795:290:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3795:290:0;;420:4:-1;411:14;;;;3795:290:0;;;;;411:14:-1;3795:290:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3795:290:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3795:290:0;;;;;;-1:-1:-1;2724:17:0;;-1:-1:-1;2744:12:0;-1:-1:-1;;;;;2744:10:0;:12;:::i;:::-;2762:6;:18;;-1:-1:-1;;;;;;2762:18:0;-1:-1:-1;;;;;2762:18:0;;;;;;;2791:43;;2762:18;;-1:-1:-1;2762:18:0;2791:43;;2762:6;;2791:43;-1:-1:-1;3885:12:0;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3903:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3925:9:0;:14;;-1:-1:-1;;3925:14:0;3937:2;3925:14;;;3945:12;:26;;;3987:10;3925:9;3977:21;;;3925:14;3977:21;;;;;;;;4001;3977:45;;4067:12;;4034:46;;;;;;;3987:10;;3925:9;;4034:46;;;;;;;;;;3795:290;;;3485:4146;;1037:90;1112:10;1037:90;;:::o;3485:4146::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3485:4146:0;;;-1:-1:-1;3485:4146:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106101145760003560e01c8063893d20e8116100a0578063a9059cbb11610064578063a9059cbb146103ea578063b09f126614610423578063d28d885214610438578063dd62ed3e1461044d578063f2fde38b1461048857610114565b8063893d20e81461032c5780638da5cb5b1461035d57806395d89b4114610372578063a0712d6814610387578063a457c2d7146103b157610114565b8063313ce567116100e7578063313ce5671461026957806332424aa31461027e57806339509351146102a957806370a08231146102e2578063715018a61461031557610114565b806306fdde0314610128578063095ea7b3146101b257806318160ddd146101ff57806323b872dd14610226575b336000908152600160205260409020479055005b34801561013457600080fd5b5061013d6104bb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101be57600080fd5b506101eb600480360360408110156101d557600080fd5b506001600160a01b038135169060200135610551565b604080519115158252519081900360200190f35b34801561020b57600080fd5b5061021461056e565b60408051918252519081900360200190f35b34801561023257600080fd5b506101eb6004803603606081101561024957600080fd5b506001600160a01b03813581169160208101359091169060400135610574565b34801561027557600080fd5b50610214610601565b34801561028a57600080fd5b5061029361060a565b6040805160ff9092168252519081900360200190f35b3480156102b557600080fd5b506101eb600480360360408110156102cc57600080fd5b506001600160a01b038135169060200135610613565b3480156102ee57600080fd5b506102146004803603602081101561030557600080fd5b50356001600160a01b0316610667565b34801561032157600080fd5b5061032a610682565b005b34801561033857600080fd5b50610341610736565b604080516001600160a01b039092168252519081900360200190f35b34801561036957600080fd5b50610341610745565b34801561037e57600080fd5b5061013d610754565b34801561039357600080fd5b506101eb600480360360208110156103aa57600080fd5b50356107b5565b3480156103bd57600080fd5b506101eb600480360360408110156103d457600080fd5b506001600160a01b03813516906020013561083a565b3480156103f657600080fd5b506101eb6004803603604081101561040d57600080fd5b506001600160a01b0381351690602001356108a8565b34801561042f57600080fd5b5061013d6108bc565b34801561044457600080fd5b5061013d61094a565b34801561045957600080fd5b506102146004803603604081101561047057600080fd5b506001600160a01b03813581169160200135166109a5565b34801561049457600080fd5b5061032a600480360360208110156104ab57600080fd5b50356001600160a01b03166109d0565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b600061056561055e610a46565b8484610a4a565b50600192915050565b60035490565b6000610581848484610b36565b6105f78461058d610a46565b6105f285604051806060016040528060288152602001610fd9602891396001600160a01b038a166000908152600260205260408120906105cb610a46565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610c9416565b610a4a565b5060019392505050565b60045460ff1690565b60045460ff1681565b6000610565610620610a46565b846105f28560026000610631610a46565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d2b16565b6001600160a01b031660009081526001602052604090205490565b61068a610a46565b6000546001600160a01b039081169116146106ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610740610745565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105475780601f1061051c57610100808354040283529160200191610547565b60006107bf610a46565b6000546001600160a01b03908116911614610821576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61083261082c610a46565b83610d8c565b506001919050565b6000610565610847610a46565b846105f285604051806060016040528060258152602001610f6a6025913960026000610871610a46565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610c9416565b60006105656108b5610a46565b8484610b36565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109425780601f1061091757610100808354040283529160200191610942565b820191906000526020600020905b81548152906001019060200180831161092557829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109425780601f1061091757610100808354040283529160200191610942565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6109d8610a46565b6000546001600160a01b03908116911614610a3a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610a4381610e7e565b50565b3390565b6001600160a01b038316610a8f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f8f6024913960400191505060405180910390fd5b6001600160a01b038216610ad45760405162461bcd60e51b81526004018080602001828103825260228152602001806110246022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b7b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f456025913960400191505060405180910390fd5b6001600160a01b038216610bc05760405162461bcd60e51b81526004018080602001828103825260238152602001806110016023913960400191505060405180910390fd5b610c0381604051806060016040528060268152602001610fb3602691396001600160a01b038616600090815260016020526040902054919063ffffffff610c9416565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c38908263ffffffff610d2b16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610d235760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ce8578181015183820152602001610cd0565b50505050905090810190601f168015610d155780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d85576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610de7576040805162461bcd60e51b815260206004820152601f60248201527f494e4452413a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610dfa908263ffffffff610d2b16565b6003556001600160a01b038216600090815260016020526040902054610e26908263ffffffff610d2b16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610ec35760405162461bcd60e51b8152600401808060200182810382526026815260200180610f1f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373494e4452413a207472616e736665722066726f6d20746865207a65726f2061646472657373494e4452413a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f494e4452413a20617070726f76652066726f6d20746865207a65726f2061646472657373494e4452413a207472616e7366657220616d6f756e7420657863656564732062616c616e6365494e4452413a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365494e4452413a207472616e7366657220746f20746865207a65726f2061646472657373494e4452413a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582004b1bcaa31652c6047149b56e2f50163b15469bc0590b2386c3200bc0e2f94df64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x488 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3B1 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x315 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x226 JUMPI JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SELFBALANCE SWAP1 SSTORE STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x177 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x601 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x613 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x745 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x754 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x8BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x94A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x55E PUSH2 0xA46 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA4A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 DUP5 DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x5F7 DUP5 PUSH2 0x58D PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x5F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x5CB PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC94 AND JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x620 PUSH2 0xA46 JUMP JUMPDEST DUP5 PUSH2 0x5F2 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x631 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x68A PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 PUSH2 0x745 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BF PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x821 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x832 PUSH2 0x82C PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0xD8C JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x847 PUSH2 0xA46 JUMP JUMPDEST DUP5 PUSH2 0x5F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x871 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC94 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x565 PUSH2 0x8B5 PUSH2 0xA46 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x917 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x925 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x917 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xE7E JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1024 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF45 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1001 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC03 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC94 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xC38 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD15 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xD85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E4452413A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDFA SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD2B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF1F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373494E4452413A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373494E4452413A20646563726561736564 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E63652062656C6F77207A65726F 0x49 0x4E DIFFICULTY MSTORE COINBASE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 0x49 0x4E DIFFICULTY MSTORE COINBASE GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365494E4452413A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x494E4452413A KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x49 0x4E DIFFICULTY MSTORE COINBASE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A7231582004B1BCAA31652C PUSH1 0x47 EQ SWAP12 JUMP 0xE2 CREATE2 ADD PUSH4 0xB15469BC SDIV SWAP1 0xB2 CODESIZE PUSH13 0x3200BC0E2F94DF64736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "3485:4146:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:10;4128:21;;;;:9;:21;;;;;4152;4128:45;;3485:4146;4436:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4436:77:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4436:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5005:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5005:141:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5005:141:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4520:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4520:85:0;;;:::i;:::-;;;;;;;;;;;;;;;;5151:288;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5151:288:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5151:288:0;;;;;;;;;;;;;;;;;:::i;4267:79::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4267:79:0;;;:::i;3720:22::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3720:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5445:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5445:197:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5445:197:0;;;;;;;;:::i;4610:104::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4610:104:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4610:104:0;-1:-1:-1;;;;;4610:104:0;;:::i;3031:127::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3031:127:0;;;:::i;:::-;;4186:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4186:77:0;;;:::i;:::-;;;;-1:-1:-1;;;;;4186:77:0;;;;;;;;;;;;;;2843:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2843:71:0;;;:::i;4350:81::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4350:81:0;;;:::i;5903:117::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5903:117:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5903:117:0;;:::i;5649:248::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5649:248:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5649:248:0;;;;;;;;:::i;4719:147::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4719:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4719:147:0;;;;;;;;:::i;3746:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3746:21:0;;;:::i;3771:19::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3771:19:0;;;:::i;4871:128::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4871:128:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4871:128:0;;;;;;;;;;:::i;3165:101::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3165:101:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3165:101:0;-1:-1:-1;;;;;3165:101:0;;:::i;4436:77::-;4503:5;4496:12;;;;;;;;-1:-1:-1;;4496:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4475:13;;4496:12;;4503:5;;4496:12;;4503:5;4496:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4436:77;:::o;5005:141::-;5073:4;5085:39;5094:12;:10;:12::i;:::-;5108:7;5117:6;5085:8;:39::i;:::-;-1:-1:-1;5137:4:0;5005:141;;;;:::o;4520:85::-;4588:12;;4520:85;:::o;5151:288::-;5242:4;5254:36;5264:6;5272:9;5283:6;5254:9;:36::i;:::-;5296:121;5305:6;5313:12;:10;:12::i;:::-;5327:89;5365:6;5327:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5327:19:0;;;;;;:11;:19;;;;;;5347:12;:10;:12::i;:::-;-1:-1:-1;;;;;5327:33:0;;;;;;;;;;;;-1:-1:-1;5327:33:0;;;:89;;:37;:89;:::i;:::-;5296:8;:121::i;:::-;-1:-1:-1;5430:4:0;5151:288;;;;;:::o;4267:79::-;4332:9;;;;4267:79;:::o;3720:22::-;;;;;;:::o;5445:197::-;5525:4;5537:83;5546:12;:10;:12::i;:::-;5560:7;5569:50;5608:10;5569:11;:25;5581:12;:10;:12::i;:::-;-1:-1:-1;;;;;5569:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;5569:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;4610:104::-;-1:-1:-1;;;;;4691:18:0;4669:7;4691:18;;;:9;:18;;;;;;;4610:104::o;3031:127::-;2966:12;:10;:12::i;:::-;2956:6;;-1:-1:-1;;;;;2956:6:0;;;:22;;;2948:67;;;;;-1:-1:-1;;;2948:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3125:1;3109:6;;3088:40;;-1:-1:-1;;;;;3109:6:0;;;;3088:40;;3125:1;;3088:40;3151:1;3134:19;;-1:-1:-1;;;;;;3134:19:0;;;3031:127::o;4186:77::-;4229:7;4251;:5;:7::i;:::-;4244:14;;4186:77;:::o;2843:71::-;2881:7;2903:6;-1:-1:-1;;;;;2903:6:0;2843:71;:::o;4350:81::-;4419:7;4412:14;;;;;;;;-1:-1:-1;;4412:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4391:13;;4412:14;;4419:7;;4412:14;;4419:7;4412:14;;;;;;;;;;;;;;;;;;;;;;;;5903:117;5959:4;2966:12;:10;:12::i;:::-;2956:6;;-1:-1:-1;;;;;2956:6:0;;;:22;;;2948:67;;;;;-1:-1:-1;;;2948:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5971:27;5977:12;:10;:12::i;:::-;5991:6;5971:5;:27::i;:::-;-1:-1:-1;6011:4:0;5903:117;;;:::o;5649:248::-;5734:4;5746:129;5755:12;:10;:12::i;:::-;5769:7;5778:96;5817:15;5778:96;;;;;;;;;;;;;;;;;:11;:25;5790:12;:10;:12::i;:::-;-1:-1:-1;;;;;5778:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;5778:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;4719:147::-;4790:4;4802:42;4812:12;:10;:12::i;:::-;4826:9;4837:6;4802:9;:42::i;3746:21::-;;;;;;;;;;;;;;;-1:-1:-1;;3746:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3771:19::-;;;;;;;;;;;;;;;-1:-1:-1;;3771:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4871:128;-1:-1:-1;;;;;4967:18:0;;;4945:7;4967:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4871:128::o;3165:101::-;2966:12;:10;:12::i;:::-;2956:6;;-1:-1:-1;;;;;2956:6:0;;;:22;;;2948:67;;;;;-1:-1:-1;;;2948:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3233:28;3252:8;3233:18;:28::i;:::-;3165:101;:::o;1037:90::-;1112:10;1037:90;:::o;7091:314::-;-1:-1:-1;;;;;7180:19:0;;7172:68;;;;-1:-1:-1;;;7172:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7254:21:0;;7246:68;;;;-1:-1:-1;;;7246:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7321:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7368:32;;;;;;;;;;;;;;;;;7091:314;;;:::o;6025:442::-;-1:-1:-1;;;;;6118:20:0;;6110:70;;;;-1:-1:-1;;;6110:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6194:23:0;;6186:71;;;;-1:-1:-1;;;6186:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6284;6306:6;6284:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6284:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;6264:17:0;;;;;;;:9;:17;;;;;;:91;;;;6384:20;;;;;;;:32;;6409:6;6384:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;6361:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;6427:35;;;;;;;6361:20;;6427:35;;;;;;;;;;;;;6025:442;;;:::o;1555:173::-;1641:7;1672:12;1664:6;;;;1656:29;;;;-1:-1:-1;;;1656:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1656:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1703:5:0;;;1555:173::o;1252:162::-;1310:7;1337:5;;;1356:6;;;;1348:46;;;;;-1:-1:-1;;;1348:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:1;1252:162;-1:-1:-1;;;1252:162:0:o;6472:284::-;-1:-1:-1;;;;;6543:21:0;;6535:65;;;;;-1:-1:-1;;;6535:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6622:12;;:24;;6639:6;6622:24;:16;:24;:::i;:::-;6607:12;:39;-1:-1:-1;;;;;6673:18:0;;;;;;:9;:18;;;;;;:30;;6696:6;6673:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6652:18:0;;;;;;:9;:18;;;;;;;;:51;;;;6714:37;;;;;;;6652:18;;;;6714:37;;;;;;;;;;6472:284;;:::o;3270:211::-;-1:-1:-1;;;;;3339:22:0;;3331:73;;;;-1:-1:-1;;;3331:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3436:6;;;3415:38;;-1:-1:-1;;;;;3415:38:0;;;;3436:6;;;3415:38;;;3459:6;:17;;-1:-1:-1;;;;;;3459:17:0;-1:-1:-1;;;;;3459:17:0;;;;;;;;;;3270:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "843600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "20265",
								"_decimals()": "1058",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1338",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1231",
								"decimals()": "1027",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24315",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "MSTORE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSHSIZE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "CODESIZE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSHSIZE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "CODECOPY"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "DUP4"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP6"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "DUP9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "DUP3"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP2"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP3"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP3"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "AND"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ISZERO"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "JUMPI"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "EXP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "NOT"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "AND"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MSTORE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "JUMPDEST"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MSTORE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "DUP4"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "SWAP1"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP6"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "DUP2"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "DUP3"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "DUP9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "DUP3"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP2"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP3"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "DUP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "DUP2"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP3"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "AND"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ISZERO"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "JUMPI"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP4"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "EXP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SUB"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "NOT"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "AND"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "DUP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MSTORE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MSTORE"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "ADD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "MLOAD"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2724,
									"end": 2741,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2724,
									"end": 2741,
									"name": "SWAP1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2744,
									"end": 2756,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2744,
									"end": 2754,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 2744,
									"end": 2756,
									"name": "AND"
								},
								{
									"begin": 2744,
									"end": 2756,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2744,
									"end": 2756,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 2744,
									"end": 2756,
									"name": "JUMPDEST"
								},
								{
									"begin": 2762,
									"end": 2768,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "DUP1"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "DUP4"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "AND"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "SWAP1"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "DUP2"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "OR"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "DUP3"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "SSTORE"
								},
								{
									"begin": 2791,
									"end": 2834,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2791,
									"end": 2834,
									"name": "MLOAD"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "SWAP3"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2762,
									"end": 2780,
									"name": "SWAP2"
								},
								{
									"begin": 2791,
									"end": 2834,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2791,
									"end": 2834,
									"name": "SWAP1"
								},
								{
									"begin": 2762,
									"end": 2768,
									"name": "DUP3"
								},
								{
									"begin": 2762,
									"end": 2768,
									"name": "SWAP1"
								},
								{
									"begin": 2791,
									"end": 2834,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "DUP3"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "MLOAD"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "SWAP1"
								},
								{
									"begin": 3885,
									"end": 3890,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 3885,
									"end": 3890,
									"name": "SWAP1"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "DUP7"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "ADD"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "SWAP1"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "DUP2"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "MLOAD"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "SWAP1"
								},
								{
									"begin": 3903,
									"end": 3910,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3903,
									"end": 3910,
									"name": "SWAP1"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "DUP6"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "ADD"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "SWAP1"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 3903,
									"end": 3919,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3925,
									"end": 3934,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "DUP1"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "AND"
								},
								{
									"begin": 3937,
									"end": 3939,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "OR"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "SWAP1"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "SSTORE"
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 3945,
									"end": 3971,
									"name": "DUP2"
								},
								{
									"begin": 3945,
									"end": 3971,
									"name": "DUP2"
								},
								{
									"begin": 3945,
									"end": 3971,
									"name": "SSTORE"
								},
								{
									"begin": 3987,
									"end": 3997,
									"name": "CALLER"
								},
								{
									"begin": 3925,
									"end": 3934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "DUP2"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "DUP2"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "MSTORE"
								},
								{
									"begin": 3925,
									"end": 3939,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "SWAP1"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "DUP2"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "MSTORE"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "DUP1"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "DUP4"
								},
								{
									"begin": 3977,
									"end": 3998,
									"name": "KECCAK256"
								},
								{
									"begin": 4001,
									"end": 4022,
									"name": "SELFBALANCE"
								},
								{
									"begin": 3977,
									"end": 4022,
									"name": "SWAP1"
								},
								{
									"begin": 3977,
									"end": 4022,
									"name": "SSTORE"
								},
								{
									"begin": 4067,
									"end": 4079,
									"name": "SWAP4"
								},
								{
									"begin": 4067,
									"end": 4079,
									"name": "SLOAD"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "DUP5"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "MLOAD"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP1"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "DUP2"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "MSTORE"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP4"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "MLOAD"
								},
								{
									"begin": 3987,
									"end": 3997,
									"name": "SWAP3"
								},
								{
									"begin": 3987,
									"end": 3997,
									"name": "SWAP4"
								},
								{
									"begin": 3925,
									"end": 3934,
									"name": "SWAP2"
								},
								{
									"begin": 3925,
									"end": 3934,
									"name": "SWAP3"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP3"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "DUP2"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP1"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SUB"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP1"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP2"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "ADD"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "SWAP1"
								},
								{
									"begin": 4034,
									"end": 4080,
									"name": "LOG3"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3795,
									"end": 4085,
									"name": "POP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMP"
								},
								{
									"begin": 1037,
									"end": 1127,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 1037,
									"end": 1127,
									"name": "JUMPDEST"
								},
								{
									"begin": 1112,
									"end": 1122,
									"name": "CALLER"
								},
								{
									"begin": 1037,
									"end": 1127,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 1037,
									"end": 1127,
									"name": "JUMPDEST"
								},
								{
									"begin": 1037,
									"end": 1127,
									"name": "SWAP1"
								},
								{
									"begin": 1037,
									"end": 1127,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SLOAD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "AND"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ISZERO"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "MUL"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SUB"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "AND"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DIV"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "MSTORE"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "KECCAK256"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DIV"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "LT"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPI"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "MLOAD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "NOT"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "AND"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP4"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "OR"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP6"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SSTORE"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP6"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SSTORE"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ISZERO"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPI"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "GT"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ISZERO"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPI"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "MLOAD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SSTORE"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "35"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "POP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "35"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SWAP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "37"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP3"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "GT"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ISZERO"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPI"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP2"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "SSTORE"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "ADD"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [tag]",
									"value": "37"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMP"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "JUMPDEST"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "DUP1"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "CODECOPY"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3485,
									"end": 7631,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582004b1bcaa31652c6047149b56e2f50163b15469bc0590b2386c3200bc0e2f94df64736f6c63430005100032",
									".code": [
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "MSTORE"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "LT"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "SHR"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "GT"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "GT"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMP"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPDEST"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMP"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPDEST"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "GT"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMP"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPDEST"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "DUP1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "EQ"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPI"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "JUMPDEST"
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "CALLER"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "SWAP1"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "DUP2"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "MSTORE"
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "MSTORE"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "SWAP1"
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "KECCAK256"
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "SELFBALANCE"
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "SSTORE"
										},
										{
											"begin": 3485,
											"end": 7631,
											"name": "STOP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMPDEST"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMPDEST"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MLOAD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP3"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MLOAD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MLOAD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP3"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP3"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP6"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "ISZERO"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMPI"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP3"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SUB"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MLOAD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SUB"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "EXP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SUB"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "NOT"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMPDEST"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP3"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "MLOAD"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "DUP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP2"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SUB"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "RETURN"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "JUMPDEST"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "POP"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "DUP1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "DUP2"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "AND"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "ADD"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "JUMPDEST"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "DUP1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "MLOAD"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP2"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "ISZERO"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "ISZERO"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "DUP3"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "MSTORE"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "MLOAD"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "DUP2"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SUB"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "ADD"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "RETURN"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "DUP1"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "SWAP2"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "DUP3"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "MSTORE"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "MLOAD"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "DUP2"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "SUB"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "ADD"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "RETURN"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "AND"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "AND"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "JUMPDEST"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "POP"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "MLOAD"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SWAP3"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "AND"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "DUP3"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "MLOAD"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SUB"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "RETURN"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "JUMPDEST"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "POP"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "DUP1"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "DUP2"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "AND"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "SWAP1"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "ADD"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "JUMPDEST"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "POP"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "DUP1"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "AND"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "JUMPDEST"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "POP"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "JUMPDEST"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "STOP"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "JUMPDEST"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "POP"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "JUMPDEST"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "DUP1"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SWAP1"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SWAP3"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "AND"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "DUP3"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "MSTORE"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "MLOAD"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SWAP1"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "DUP2"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SWAP1"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SUB"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "ADD"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SWAP1"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "RETURN"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "JUMPDEST"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "JUMPDEST"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "POP"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "JUMPDEST"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "POP"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "DUP1"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "JUMPDEST"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "POP"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "DUP1"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "DUP2"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "AND"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "SWAP1"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "ADD"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "JUMPDEST"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "POP"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "DUP1"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "DUP2"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "AND"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "SWAP1"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "ADD"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "JUMPDEST"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "POP"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "JUMPDEST"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "POP"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "DUP1"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "DUP2"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "DUP2"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "AND"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "SWAP2"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "ADD"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "AND"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "DUP1"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "AND"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMPDEST"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SLOAD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP9"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MUL"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP6"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP5"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP5"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DIV"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP4"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP5"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DIV"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MUL"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MSTORE"
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "SWAP4"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP3"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP4"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMPI"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "LT"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMPI"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP4"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SLOAD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DIV"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MUL"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP4"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMP"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "KECCAK256"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SLOAD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP4"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "GT"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMPI"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SUB"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4508,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4513,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "JUMPDEST"
										},
										{
											"begin": 5073,
											"end": 5077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5124,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "JUMPDEST"
										},
										{
											"begin": 5108,
											"end": 5115,
											"name": "DUP5"
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP5"
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 5085,
											"end": 5124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5124,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5085,
											"end": 5124,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP3"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "SWAP2"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "POP"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "POP"
										},
										{
											"begin": 5005,
											"end": 5146,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "JUMPDEST"
										},
										{
											"begin": 4588,
											"end": 4600,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4588,
											"end": 4600,
											"name": "SLOAD"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "SWAP1"
										},
										{
											"begin": 4520,
											"end": 4605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "JUMPDEST"
										},
										{
											"begin": 5242,
											"end": 5246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP5"
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "DUP5"
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "DUP5"
										},
										{
											"begin": 5254,
											"end": 5263,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "JUMPDEST"
										},
										{
											"begin": 5296,
											"end": 5417,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "DUP5"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5313,
											"end": 5323,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "JUMPDEST"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5365,
											"end": 5371,
											"name": "DUP6"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "MLOAD"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "DUP1"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "ADD"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "MSTORE"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "DUP1"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "DUP2"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "MSTORE"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "ADD"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH data",
											"value": "8E0E7CA5CA1C2590910E85C739F0BD59796087E31E7DC4665D54032C8B8A61DF"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "SWAP2"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "DUP11"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "AND"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "SWAP1"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "DUP2"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "MSTORE"
										},
										{
											"begin": 5327,
											"end": 5338,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "MSTORE"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "DUP2"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "KECCAK256"
										},
										{
											"begin": 5327,
											"end": 5346,
											"name": "SWAP1"
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5347,
											"end": 5357,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "AND"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "DUP2"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "MSTORE"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "DUP2"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "SWAP2"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "SWAP2"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "MSTORE"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "KECCAK256"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "SLOAD"
										},
										{
											"begin": 5327,
											"end": 5360,
											"name": "SWAP2"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "SWAP1"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5327,
											"end": 5364,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "AND"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5327,
											"end": 5416,
											"name": "JUMPDEST"
										},
										{
											"begin": 5296,
											"end": 5304,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 5296,
											"end": 5417,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5296,
											"end": 5417,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5296,
											"end": 5417,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SWAP4"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "SWAP3"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "JUMPDEST"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "SLOAD"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "AND"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "SWAP1"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "SLOAD"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "AND"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5445,
											"end": 5642,
											"name": "JUMPDEST"
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5620,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5546,
											"end": 5556,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMPDEST"
										},
										{
											"begin": 5560,
											"end": 5567,
											"name": "DUP5"
										},
										{
											"begin": 5569,
											"end": 5619,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5608,
											"end": 5618,
											"name": "DUP6"
										},
										{
											"begin": 5569,
											"end": 5580,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5581,
											"end": 5591,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP1"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP2"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "AND"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP3"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "MSTORE"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP1"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP4"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "ADD"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP4"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP1"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP4"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "MSTORE"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP2"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP3"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "SWAP1"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "DUP2"
										},
										{
											"begin": 5569,
											"end": 5594,
											"name": "KECCAK256"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "SWAP2"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "DUP13"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "AND"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "SWAP3"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "KECCAK256"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "SLOAD"
										},
										{
											"begin": 5569,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5569,
											"end": 5619,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5569,
											"end": 5607,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 5569,
											"end": 5619,
											"name": "AND"
										},
										{
											"begin": 5569,
											"end": 5619,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "AND"
										},
										{
											"begin": 4669,
											"end": 4676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "SWAP1"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "DUP2"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "MSTORE"
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "MSTORE"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "SWAP1"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "KECCAK256"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "SLOAD"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "SWAP1"
										},
										{
											"begin": 4610,
											"end": 4714,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "JUMPDEST"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 2966,
											"end": 2976,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "EQ"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "JUMPI"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MLOAD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SUB"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "REVERT"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "JUMPDEST"
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "DUP1"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "SLOAD"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "SWAP1"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "SWAP2"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "AND"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "SWAP1"
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP4"
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "LOG3"
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "DUP1"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "AND"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "SWAP1"
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "SSTORE"
										},
										{
											"begin": 3031,
											"end": 3158,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "JUMPDEST"
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4258,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4251,
											"end": 4258,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4251,
											"end": 4258,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 4251,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4258,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4258,
											"name": "POP"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "SWAP1"
										},
										{
											"begin": 4186,
											"end": 4263,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "JUMPDEST"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "AND"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 2914,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4350,
											"end": 4431,
											"name": "JUMPDEST"
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SLOAD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MLOAD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP9"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "AND"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ISZERO"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MUL"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP6"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "AND"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP5"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP5"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DIV"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP4"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP5"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DIV"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MUL"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP3"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "SWAP4"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP3"
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ISZERO"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "JUMPI"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "LT"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "JUMPI"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SLOAD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DIV"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MUL"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "JUMP"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "JUMPDEST"
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2966,
											"end": 2976,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "EQ"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "JUMPI"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MLOAD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SUB"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "REVERT"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "JUMPDEST"
										},
										{
											"begin": 5971,
											"end": 5998,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 5977,
											"end": 5989,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 5977,
											"end": 5987,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5977,
											"end": 5989,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 5989,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 5977,
											"end": 5989,
											"name": "JUMPDEST"
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "DUP4"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 5971,
											"end": 5998,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 5998,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 5971,
											"end": 5998,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6011,
											"end": 6015,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "SWAP2"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "SWAP1"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "POP"
										},
										{
											"begin": 5903,
											"end": 6020,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5649,
											"end": 5897,
											"name": "JUMPDEST"
										},
										{
											"begin": 5734,
											"end": 5738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5875,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5755,
											"end": 5765,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5755,
											"end": 5767,
											"name": "JUMPDEST"
										},
										{
											"begin": 5769,
											"end": 5776,
											"name": "DUP5"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "DUP6"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "MLOAD"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH data",
											"value": "45415EDE0ACC6BD3066AF00C2697F110D2B840A11E6D6982FBDEE162CF63F851"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "CODECOPY"
										},
										{
											"begin": 5778,
											"end": 5789,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5790,
											"end": 5800,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "DUP3"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "DUP1"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "DUP4"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "SWAP4"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "SWAP4"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "SWAP2"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "DUP3"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5803,
											"name": "KECCAK256"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "SWAP2"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "DUP14"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "SWAP3"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "KECCAK256"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "SLOAD"
										},
										{
											"begin": 5778,
											"end": 5812,
											"name": "SWAP2"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5778,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5874,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4719,
											"end": 4866,
											"name": "JUMPDEST"
										},
										{
											"begin": 4790,
											"end": 4794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4844,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 4812,
											"end": 4822,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "JUMPDEST"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP5"
										},
										{
											"begin": 4837,
											"end": 4843,
											"name": "DUP5"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 4802,
											"end": 4844,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SLOAD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MLOAD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP6"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP5"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP4"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP4"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DIV"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP5"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DIV"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP5"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MUL"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP5"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MSTORE"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MSTORE"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP4"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPI"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "LT"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPI"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP4"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SLOAD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DIV"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MUL"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP4"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MSTORE"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MSTORE"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "KECCAK256"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SLOAD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "MSTORE"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP4"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "GT"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPI"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SUB"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "JUMPDEST"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SLOAD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MLOAD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP6"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "AND"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ISZERO"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ADD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP5"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "AND"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP4"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP4"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DIV"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ADD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP5"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DIV"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP5"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MUL"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP3"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ADD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP5"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ADD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP3"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MSTORE"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MSTORE"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP3"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP4"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ADD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP3"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP3"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ISZERO"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "LT"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP4"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SLOAD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DIV"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MUL"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "DUP4"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "MSTORE"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "ADD"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "SWAP2"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3771,
											"end": 3790,
											"name": "JUMP"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "SWAP2"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "DUP3"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "AND"
										},
										{
											"begin": 4945,
											"end": 4952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "SWAP1"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4967,
											"end": 4978,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "SWAP1"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "DUP1"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "DUP4"
										},
										{
											"begin": 4967,
											"end": 4985,
											"name": "KECCAK256"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP4"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP1"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP5"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "AND"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "DUP3"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "MSTORE"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP2"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP1"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP2"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "MSTORE"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "KECCAK256"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SLOAD"
										},
										{
											"begin": 4967,
											"end": 4994,
											"name": "SWAP1"
										},
										{
											"begin": 4871,
											"end": 4999,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 2966,
											"end": 2976,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "JUMPDEST"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "SWAP1"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP2"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "AND"
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "EQ"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "JUMPI"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP3"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MSTORE"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "MLOAD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "DUP2"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SUB"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "ADD"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "SWAP1"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "REVERT"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 2948,
											"end": 3015,
											"name": "JUMPDEST"
										},
										{
											"begin": 3233,
											"end": 3261,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 3252,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 3233,
											"end": 3261,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3261,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 3233,
											"end": 3261,
											"name": "JUMPDEST"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1037,
											"end": 1127,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 1037,
											"end": 1127,
											"name": "JUMPDEST"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "CALLER"
										},
										{
											"begin": 1037,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1127,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7405,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 7091,
											"end": 7405,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7180,
											"end": 7199,
											"name": "DUP4"
										},
										{
											"begin": 7180,
											"end": 7199,
											"name": "AND"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "JUMPI"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP2"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "MSTORE"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "ADD"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP1"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP1"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "ADD"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP3"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP2"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "SUB"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP3"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "MSTORE"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP2"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "MSTORE"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "ADD"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP1"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH data",
											"value": "47949132D0418A546A65E4198ED7750521B37DAD62DE03C2D59C129FE516D815"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "SWAP2"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "CODECOPY"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "ADD"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "SWAP2"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "POP"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "POP"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "MLOAD"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "DUP1"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "SWAP2"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "SUB"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "SWAP1"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "REVERT"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 7172,
											"end": 7240,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7254,
											"end": 7275,
											"name": "DUP3"
										},
										{
											"begin": 7254,
											"end": 7275,
											"name": "AND"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP2"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP3"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP2"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "SUB"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP3"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP2"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH data",
											"value": "B9BEC085AF116E013BA0CB4636ECE7F9F4C8510858860B65C909F4FF37F0DBC9"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "SWAP2"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "CODECOPY"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "SWAP2"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "POP"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "POP"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "MLOAD"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "SWAP2"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "SUB"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "SWAP1"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "REVERT"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 7246,
											"end": 7314,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP1"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP5"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "AND"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP2"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP2"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7332,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP2"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP1"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP4"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "KECCAK256"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "SWAP5"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP8"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "AND"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP1"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP5"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "SWAP5"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP3"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "SWAP2"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP3"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "KECCAK256"
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "DUP6"
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "SSTORE"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "MLOAD"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "DUP6"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SWAP2"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "MLOAD"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SWAP3"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SUB"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SWAP2"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7400,
											"name": "LOG3"
										},
										{
											"begin": 7091,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7091,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7091,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7091,
											"end": 7405,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "DUP4"
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "AND"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "JUMPI"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP2"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "MSTORE"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "ADD"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP1"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP1"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "ADD"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP3"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP2"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "SUB"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP3"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "MSTORE"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP2"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "MSTORE"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "ADD"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP1"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH data",
											"value": "43F189F9D541F43C4B16605E8B10A0C6A0BED6754E87651B1B429CF06ADE5FAD"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "SWAP2"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "CODECOPY"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "ADD"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "SWAP2"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "POP"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "POP"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "MLOAD"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "DUP1"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "SWAP2"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "SUB"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "SWAP1"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "REVERT"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 6110,
											"end": 6180,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6194,
											"end": 6217,
											"name": "DUP3"
										},
										{
											"begin": 6194,
											"end": 6217,
											"name": "AND"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "JUMPI"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP2"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "MSTORE"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP1"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP1"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP3"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP2"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "SUB"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP3"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "MSTORE"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP2"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "MSTORE"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP1"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH data",
											"value": "A5C59FE32750386F83567659E2CFAAEF18AABFB3D8280ADA7958F80697567F0F"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "SWAP2"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "CODECOPY"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "ADD"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "SWAP2"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "POP"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "POP"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "MLOAD"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "DUP1"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "SWAP2"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "SUB"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "SWAP1"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "REVERT"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 6186,
											"end": 6257,
											"name": "JUMPDEST"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "DUP2"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "MLOAD"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "DUP1"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "ADD"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "MSTORE"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "DUP1"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "DUP2"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "MSTORE"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "ADD"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH data",
											"value": "63CC03A3EF4E80D9618A5EB98BE8749A7D78A0EC13F39748EF2BDD594171F4E5"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "SWAP2"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "DUP7"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "AND"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "SWAP1"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "DUP2"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "MSTORE"
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "MSTORE"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "SWAP1"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "KECCAK256"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "SLOAD"
										},
										{
											"begin": 6284,
											"end": 6301,
											"name": "SWAP2"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "SWAP1"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6284,
											"end": 6305,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "AND"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 6284,
											"end": 6355,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "DUP1"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "DUP6"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "AND"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "SWAP1"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "DUP2"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "MSTORE"
										},
										{
											"begin": 6264,
											"end": 6273,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "MSTORE"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "DUP1"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "DUP3"
										},
										{
											"begin": 6264,
											"end": 6281,
											"name": "KECCAK256"
										},
										{
											"begin": 6264,
											"end": 6355,
											"name": "SWAP4"
										},
										{
											"begin": 6264,
											"end": 6355,
											"name": "SWAP1"
										},
										{
											"begin": 6264,
											"end": 6355,
											"name": "SWAP4"
										},
										{
											"begin": 6264,
											"end": 6355,
											"name": "SSTORE"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "SWAP1"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "DUP5"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "AND"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "DUP2"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "MSTORE"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "KECCAK256"
										},
										{
											"begin": 6384,
											"end": 6404,
											"name": "SLOAD"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "SWAP1"
										},
										{
											"begin": 6409,
											"end": 6415,
											"name": "DUP3"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6384,
											"end": 6408,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "AND"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 6384,
											"end": 6416,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "DUP1"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "DUP5"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "AND"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "DUP2"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "DUP2"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "MSTORE"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "SWAP1"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "DUP2"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "MSTORE"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "SWAP2"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "DUP3"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "SWAP1"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "KECCAK256"
										},
										{
											"begin": 6361,
											"end": 6416,
											"name": "SWAP5"
										},
										{
											"begin": 6361,
											"end": 6416,
											"name": "SWAP1"
										},
										{
											"begin": 6361,
											"end": 6416,
											"name": "SWAP5"
										},
										{
											"begin": 6361,
											"end": 6416,
											"name": "SSTORE"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "DUP1"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "MLOAD"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "DUP6"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "DUP2"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "MSTORE"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP1"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "MLOAD"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "SWAP2"
										},
										{
											"begin": 6361,
											"end": 6381,
											"name": "SWAP4"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP3"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "DUP8"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "AND"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP3"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP3"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP2"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "DUP3"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP1"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SUB"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "ADD"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "SWAP1"
										},
										{
											"begin": 6427,
											"end": 6462,
											"name": "LOG3"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 1728,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1555,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1641,
											"end": 1648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1684,
											"name": "DUP2"
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP5"
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP5"
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "GT"
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "ISZERO"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "JUMPI"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MSTORE"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ADD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ADD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP3"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SUB"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP3"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MSTORE"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP4"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MLOAD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MSTORE"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ADD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MLOAD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ADD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP4"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ADD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "AND"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ISZERO"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "JUMPI"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP3"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SUB"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MLOAD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP4"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SUB"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "EXP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SUB"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "NOT"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "AND"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MSTORE"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "ADD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "JUMPDEST"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP3"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "MLOAD"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP2"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SUB"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "REVERT"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "SUB"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1728,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1252,
											"end": 1414,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 1252,
											"end": 1414,
											"name": "JUMPDEST"
										},
										{
											"begin": 1310,
											"end": 1317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1342,
											"name": "DUP3"
										},
										{
											"begin": 1337,
											"end": 1342,
											"name": "DUP3"
										},
										{
											"begin": 1337,
											"end": 1342,
											"name": "ADD"
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP4"
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP2"
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "LT"
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "ISZERO"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "MLOAD"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "SUB"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "REVERT"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 1348,
											"end": 1394,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "SWAP4"
										},
										{
											"begin": 1252,
											"end": 1414,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1252,
											"end": 1414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6472,
											"end": 6756,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 6472,
											"end": 6756,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "DUP3"
										},
										{
											"begin": 6543,
											"end": 6564,
											"name": "AND"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "JUMPI"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "DUP1"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "DUP3"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "DUP3"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "494E4452413A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "DUP3"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "MSTORE"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "MLOAD"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "DUP2"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "SUB"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "ADD"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "SWAP1"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "REVERT"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "JUMPDEST"
										},
										{
											"begin": 6622,
											"end": 6634,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6622,
											"end": 6634,
											"name": "SLOAD"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "SWAP1"
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP3"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6638,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "AND"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 6622,
											"end": 6646,
											"name": "JUMPDEST"
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6607,
											"end": 6646,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP3"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "AND"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP2"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "MSTORE"
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "MSTORE"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "KECCAK256"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "SLOAD"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "SWAP1"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DUP3"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6673,
											"end": 6695,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "AND"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 6673,
											"end": 6703,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP4"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "AND"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "MSTORE"
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP2"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "MSTORE"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP1"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP4"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "KECCAK256"
										},
										{
											"begin": 6652,
											"end": 6703,
											"name": "SWAP5"
										},
										{
											"begin": 6652,
											"end": 6703,
											"name": "SWAP1"
										},
										{
											"begin": 6652,
											"end": 6703,
											"name": "SWAP5"
										},
										{
											"begin": 6652,
											"end": 6703,
											"name": "SSTORE"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "DUP4"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "MLOAD"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "DUP6"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "DUP2"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "MSTORE"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SWAP4"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "MLOAD"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "SWAP3"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "SWAP4"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "SWAP2"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "SWAP3"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SWAP3"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "DUP2"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SWAP1"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SUB"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SWAP1"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SWAP2"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "ADD"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "SWAP1"
										},
										{
											"begin": 6714,
											"end": 6751,
											"name": "LOG3"
										},
										{
											"begin": 6472,
											"end": 6756,
											"name": "POP"
										},
										{
											"begin": 6472,
											"end": 6756,
											"name": "POP"
										},
										{
											"begin": 6472,
											"end": 6756,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3270,
											"end": 3481,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 3270,
											"end": 3481,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3361,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3361,
											"name": "AND"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "JUMPI"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP2"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "MSTORE"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP1"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP1"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP3"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP2"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "SUB"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP3"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "MSTORE"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP2"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "MSTORE"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP1"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "SWAP2"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "CODECOPY"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "SWAP2"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "POP"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "POP"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "MLOAD"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "DUP1"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "SWAP2"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "SUB"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "SWAP1"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "REVERT"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 3331,
											"end": 3404,
											"name": "JUMPDEST"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "SLOAD"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "DUP1"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "DUP6"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "AND"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "SWAP4"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "SWAP3"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "SWAP2"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "SWAP2"
										},
										{
											"begin": 3415,
											"end": 3453,
											"name": "LOG3"
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "DUP1"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP3"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP1"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP3"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "AND"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP2"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP1"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP2"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "OR"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SWAP1"
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "SSTORE"
										},
										{
											"begin": 3270,
											"end": 3481,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"43F189F9D541F43C4B16605E8B10A0C6A0BED6754E87651B1B429CF06ADE5FAD": "494e4452413a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"45415EDE0ACC6BD3066AF00C2697F110D2B840A11E6D6982FBDEE162CF63F851": "494e4452413a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"47949132D0418A546A65E4198ED7750521B37DAD62DE03C2D59C129FE516D815": "494e4452413a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"63CC03A3EF4E80D9618A5EB98BE8749A7D78A0EC13F39748EF2BDD594171F4E5": "494e4452413a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"8E0E7CA5CA1C2590910E85C739F0BD59796087E31E7DC4665D54032C8B8A61DF": "494e4452413a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A5C59FE32750386F83567659E2CFAAEF18AABFB3D8280ADA7958F80697567F0F": "494e4452413a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B9BEC085AF116E013BA0CB4636ECE7F9F4C8510858860B65C909F4FF37F0DBC9": "494e4452413a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/INDRACOIN.sol\":\"INDRA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INDRACOIN.sol\":{\"keccak256\":\"0x1ef99614987d0a17d6aeb7b1aa829c2602b69ec78e3f66facbec9e0135a4f92b\",\"urls\":[\"bzz-raw://712c31a4dbb25ba870cae2834e61f7b902fd203bc87eb132f8e03f0ade6bb538\",\"dweb:/ipfs/QmP3u2wMzmS89LbdiRxFdKG9NKRFjJM5UQHFn1tJ7N5uB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/INDRACOIN.sol:INDRA",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/INDRACOIN.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INDRACOIN.sol\":{\"keccak256\":\"0x1ef99614987d0a17d6aeb7b1aa829c2602b69ec78e3f66facbec9e0135a4f92b\",\"urls\":[\"bzz-raw://712c31a4dbb25ba870cae2834e61f7b902fd203bc87eb132f8e03f0ade6bb538\",\"dweb:/ipfs/QmP3u2wMzmS89LbdiRxFdKG9NKRFjJM5UQHFn1tJ7N5uB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/INDRACOIN.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/INDRACOIN.sol\":1230:2543  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/INDRACOIN.sol\":1230:2543  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158202b578d2709f69af7400867d0a12258490674048fb5f379f6909ae8eca10b63c064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202b578d2709f69af7400867d0a12258490674048fb5f379f6909ae8eca10b63c064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2B JUMPI DUP14 0x27 MULMOD 0xF6 SWAP11 0xF7 BLOCKHASH ADDMOD PUSH8 0xD0A1225849067404 DUP16 0xB5 RETURN PUSH26 0xF6909AE8ECA10B63C064736F6C63430005100032000000000000 ",
							"sourceMap": "1230:1313:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202b578d2709f69af7400867d0a12258490674048fb5f379f6909ae8eca10b63c064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2B JUMPI DUP14 0x27 MULMOD 0xF6 SWAP11 0xF7 BLOCKHASH ADDMOD PUSH8 0xD0A1225849067404 DUP16 0xB5 RETURN PUSH26 0xF6909AE8ECA10B63C064736F6C63430005100032000000000000 ",
							"sourceMap": "1230:1313:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1230,
									"end": 2543,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1230,
									"end": 2543,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202b578d2709f69af7400867d0a12258490674048fb5f379f6909ae8eca10b63c064736f6c63430005100032",
									".code": [
										{
											"begin": 1230,
											"end": 2543,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "ADDRESS"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "EQ"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 2543,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/INDRACOIN.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/INDRACOIN.sol\":{\"keccak256\":\"0x1ef99614987d0a17d6aeb7b1aa829c2602b69ec78e3f66facbec9e0135a4f92b\",\"urls\":[\"bzz-raw://712c31a4dbb25ba870cae2834e61f7b902fd203bc87eb132f8e03f0ade6bb538\",\"dweb:/ipfs/QmP3u2wMzmS89LbdiRxFdKG9NKRFjJM5UQHFn1tJ7N5uB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/INDRACOIN.sol": {
				"ast": {
					"absolutePath": "contracts/INDRACOIN.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"IINDRA": [
							88
						],
						"INDRA": [
							922
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 923,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "47:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IINDRA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "142:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "141:9:0"
									},
									"scope": 88,
									"src": "96:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "200:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "199:9:0"
									},
									"scope": 88,
									"src": "157:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "256:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:15:0"
									},
									"scope": 88,
									"src": "215:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "316:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "316:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:15:0"
									},
									"scope": 88,
									"src": "277:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "380:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:9:0"
									},
									"scope": 88,
									"src": "337:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "412:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "453:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "452:9:0"
									},
									"scope": 88,
									"src": "394:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "486:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "505:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "539:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:6:0"
									},
									"scope": 88,
									"src": "468:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "570:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "586:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "569:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "626:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "625:9:0"
									},
									"scope": 88,
									"src": "551:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "674:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "656:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "708:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "707:6:0"
									},
									"scope": 88,
									"src": "640:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "759:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "742:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "812:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "812:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "811:6:0"
									},
									"scope": 88,
									"src": "721:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "837:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "859:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "879:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "836:57:0"
									},
									"src": "822:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "915:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "938:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "963:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:63:0"
									},
									"src": "900:78:0"
								}
							],
							"scope": 923,
							"src": "72:908:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1030:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:0:0"
									},
									"scope": 113,
									"src": "1006:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1099:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "1112:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1112:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "1105:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1082:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1081:17:0"
									},
									"scope": 113,
									"src": "1037:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1188:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 953,
													"src": "1194:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1194:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "1212:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1212:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "1205:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1174:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1173:14:0"
									},
									"scope": 113,
									"src": "1131:94:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 923,
							"src": "982:245:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1319:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "1325:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1325:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1356:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1361:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1364:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "1348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1348:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1348:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "1408:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "1401:8:0"
											}
										]
									},
									"documentation": null,
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1264:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1309:9:0"
									},
									"scope": 298,
									"src": "1252:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1488:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1505:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "1508:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1511:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "1501:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1501:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "1494:50:0"
											}
										]
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1433:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1478:9:0"
									},
									"scope": 298,
									"src": "1421:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1650:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "1664:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "1672:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "1656:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1656:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1656:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "1691:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1703:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1707:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1691:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "1722:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "1715:8:0"
											}
										]
									},
									"documentation": null,
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1568:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1590:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1590:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1567:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1640:9:0"
									},
									"scope": 298,
									"src": "1555:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1799:147:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1810:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1815:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1810:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "1806:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "1818:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1833:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "1826:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "1847:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1859:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1863:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1859:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1847:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1878:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "1882:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1878:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "1887:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1878:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1890:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "1870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1870:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "1940:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "1933:8:0"
											}
										]
									},
									"documentation": null,
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1756:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1789:9:0"
									},
									"scope": 298,
									"src": "1732:214:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2018:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "2035:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2038:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2041:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "2031:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2031:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "2024:46:0"
											}
										]
									},
									"documentation": null,
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1975:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1963:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2008:9:0"
									},
									"scope": 298,
									"src": "1951:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2175:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2189:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2193:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2189:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2196:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "2181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2181:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2215:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2227:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2231:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2227:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2215:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "2251:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "2244:8:0"
											}
										]
									},
									"documentation": null,
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2093:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2104:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2115:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2092:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2165:9:0"
									},
									"scope": 298,
									"src": "2080:177:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "2329:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2346:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2349:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2352:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "2342:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "2335:44:0"
											}
										]
									},
									"documentation": null,
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2275:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2286:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2274:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "2320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2319:9:0"
									},
									"scope": 298,
									"src": "2262:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "2483:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "2497:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2502:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "2505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "2489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2489:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2489:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "2531:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2531:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "2524:12:0"
											}
										]
									},
									"documentation": null,
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2401:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2423:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2400:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2474:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2473:9:0"
									},
									"scope": 298,
									"src": "2388:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 923,
							"src": "1230:1313:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "2565:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "2565:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "2577:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2577:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2631:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2662:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2630:57:0"
									},
									"src": "2604:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2718:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "2724:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2724:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2744:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2724:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2771:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2762:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2762:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2820:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2812:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2824:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2791:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2791:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "2786:48:0"
											}
										]
									},
									"documentation": null,
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2706:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:0"
									},
									"scope": 404,
									"src": "2694:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2890:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "2903:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "2896:13:0"
											}
										]
									},
									"documentation": null,
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2857:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2880:9:0"
									},
									"scope": 404,
									"src": "2843:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "2942:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2956:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "2966:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2966:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2956:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2980:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "2948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2948:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "2948:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "3021:1:0"
											}
										]
									},
									"documentation": null,
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2939:2:0"
									},
									"src": "2921:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "3077:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3125:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3117:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3088:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "3083:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "3134:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3151:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3143:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3134:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "3134:19:0"
											}
										]
									},
									"documentation": null,
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "3067:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3067:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3077:0:0"
									},
									"scope": 404,
									"src": "3031:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "3227:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3252:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3233:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3233:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "3233:28:0"
											}
										]
									},
									"documentation": null,
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "3217:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3217:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3191:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:0:0"
									},
									"scope": 404,
									"src": "3165:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3325:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "3339:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3359:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3351:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3351:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3339:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3363:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "3331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3331:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3436:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3444:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3415:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3415:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "3410:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "3459:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3468:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3459:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3459:17:0"
											}
										]
									},
									"documentation": null,
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3297:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3325:0:0"
									},
									"scope": 404,
									"src": "3270:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 923,
							"src": "2545:938:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "3503:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "3503:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IINDRA",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "3512:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IINDRA_$88",
											"typeString": "contract IINDRA"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "3512:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "3520:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "3520:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 922,
							"linearizedBaseContracts": [
								922,
								404,
								88,
								113
							],
							"name": "INDRA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "3538:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "3532:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3551:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "3563:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3572:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3563:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3583:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "3614:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3623:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3614:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3643:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3634:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3654:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "3688:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3688:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "3720:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3720:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "3746:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3746:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "3771:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3771:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "3879:206:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 440,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3885:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 441,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "3893:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3885:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "3885:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 444,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3903:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 445,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "3913:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3903:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "3903:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 448,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3925:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3937:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3925:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3925:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "3945:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 453,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "3960:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3945:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3945:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 456,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3977:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 459,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 457,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "3987:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3987:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3977:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 461,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "4009:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INDRA_$922",
																		"typeString": "contract INDRA"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INDRA_$922",
																		"typeString": "contract INDRA"
																	}
																],
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4001:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4001:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3977:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "3977:45:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4051:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4043:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4043:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "4055:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4055:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 472,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4067:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "4034:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "EmitStatement",
												"src": "4029:51:0"
											}
										]
									},
									"documentation": null,
									"id": 476,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3807:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3807:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3827:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3849:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3806:65:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3879:0:0"
									},
									"scope": 922,
									"src": "3795:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "4118:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 479,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4128:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 482,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "4138:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4138:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4128:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 484,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "4160:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INDRA_$922",
																		"typeString": "contract INDRA"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INDRA_$922",
																		"typeString": "contract INDRA"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4152:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4152:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4152:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4128:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "4128:45:0"
											}
										]
									},
									"documentation": null,
									"id": 490,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4098:2:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4118:0:0"
									},
									"scope": 922,
									"src": "4089:91:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "4238:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 495,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4251:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 494,
												"id": 497,
												"nodeType": "Return",
												"src": "4244:14:0"
											}
										]
									},
									"documentation": null,
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4203:2:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4228:9:0"
									},
									"scope": 922,
									"src": "4186:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "4319:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 504,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "4332:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 503,
												"id": 505,
												"nodeType": "Return",
												"src": "4325:16:0"
											}
										]
									},
									"documentation": null,
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4284:2:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "4310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4309:9:0"
									},
									"scope": 922,
									"src": "4267:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4406:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 512,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "4419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 511,
												"id": 513,
												"nodeType": "Return",
												"src": "4412:14:0"
											}
										]
									},
									"documentation": null,
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4365:2:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4391:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4390:15:0"
									},
									"scope": 922,
									"src": "4350:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "4490:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "4503:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 519,
												"id": 521,
												"nodeType": "Return",
												"src": "4496:12:0"
											}
										]
									},
									"documentation": null,
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4449:2:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4475:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4474:15:0"
									},
									"scope": 922,
									"src": "4436:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "4575:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 528,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "4588:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 527,
												"id": 529,
												"nodeType": "Return",
												"src": "4581:19:0"
											}
										]
									},
									"documentation": null,
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4540:2:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "4566:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4565:9:0"
									},
									"scope": 922,
									"src": "4520:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "4678:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 538,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "4691:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"argumentTypes": null,
														"id": 539,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "4701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4691:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 541,
												"nodeType": "Return",
												"src": "4684:25:0"
											}
										]
									},
									"documentation": null,
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4629:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4628:17:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "4669:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4668:9:0"
									},
									"scope": 922,
									"src": "4610:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4796:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 553,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "4812:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4812:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 555,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4826:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4837:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4802:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4802:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "4802:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4857:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 551,
												"id": 560,
												"nodeType": "Return",
												"src": "4850:11:0"
											}
										]
									},
									"documentation": null,
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4737:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4756:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4736:35:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4790:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4789:6:0"
									},
									"scope": 922,
									"src": "4719:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "4954:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 571,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4967:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 573,
														"indexExpression": {
															"argumentTypes": null,
															"id": 572,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4979:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4967:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 575,
													"indexExpression": {
														"argumentTypes": null,
														"id": 574,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4967:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "4960:34:0"
											}
										]
									},
									"documentation": null,
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4890:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4905:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4889:32:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4945:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4944:9:0"
									},
									"scope": 922,
									"src": "4871:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "5079:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 588,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5094:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5094:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 590,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "5108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "5085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5085:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "5085:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5137:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 586,
												"id": 595,
												"nodeType": "Return",
												"src": "5130:11:0"
											}
										]
									},
									"documentation": null,
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "5022:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "5039:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5021:33:0"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "5073:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5072:6:0"
									},
									"scope": 922,
									"src": "5005:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "5248:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 609,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "5264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 610,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "5272:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "5283:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "5254:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "5254:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 615,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "5305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 616,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5313:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5313:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 625,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "5365:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "494e4452413a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5373:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8e0e7ca5ca1c2590910e85c739f0bd59796087e31e7dc4665d54032c8b8a61df",
																		"typeString": "literal_string \"INDRA: transfer amount exceeds allowance\""
																	},
																	"value": "INDRA: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_8e0e7ca5ca1c2590910e85c739f0bd59796087e31e7dc4665d54032c8b8a61df",
																		"typeString": "literal_string \"INDRA: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 618,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "5327:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 620,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 619,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "5339:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5327:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 623,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 621,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "5347:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5347:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5327:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "5327:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5327:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "5296:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "5296:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5430:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 607,
												"id": 631,
												"nodeType": "Return",
												"src": "5423:11:0"
											}
										]
									},
									"documentation": null,
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5173:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5189:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5208:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5172:51:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5242:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5241:6:0"
									},
									"scope": 922,
									"src": "5151:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "5531:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 643,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5546:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 645,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "5560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 653,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "5608:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 646,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "5569:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 649,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 647,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "5581:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5581:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5569:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 651,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 650,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "5595:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5569:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "5569:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5569:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "5537:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "5537:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5633:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 641,
												"id": 658,
												"nodeType": "Return",
												"src": "5626:11:0"
											}
										]
									},
									"documentation": null,
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5472:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5489:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5471:37:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5524:6:0"
									},
									"scope": 922,
									"src": "5445:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "5740:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 670,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5755:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5755:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 680,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "5817:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "494e4452413a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5834:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_45415ede0acc6bd3066af00c2697f110d2b840a11e6d6982fbdee162cf63f851",
																		"typeString": "literal_string \"INDRA: decreased allowance below zero\""
																	},
																	"value": "INDRA: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_45415ede0acc6bd3066af00c2697f110d2b840a11e6d6982fbdee162cf63f851",
																		"typeString": "literal_string \"INDRA: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 673,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "5778:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 676,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 674,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "5790:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5790:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5778:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 678,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 677,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "5804:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5778:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "5778:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5778:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 669,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "5746:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "5746:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5888:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 668,
												"id": 686,
												"nodeType": "Return",
												"src": "5881:11:0"
											}
										]
									},
									"documentation": null,
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5693:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5675:42:0"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5734:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5733:6:0"
									},
									"scope": 922,
									"src": "5649:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "5965:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 698,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5977:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5977:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "5991:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "5971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5971:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "5971:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6011:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 696,
												"id": 704,
												"nodeType": "Return",
												"src": "6004:11:0"
											}
										]
									},
									"documentation": null,
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 693,
											"modifierName": {
												"argumentTypes": null,
												"id": 692,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "5940:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5940:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5917:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5916:16:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5959:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5958:6:0"
									},
									"scope": 922,
									"src": "5903:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "6104:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 716,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "6118:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6136:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6128:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6128:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6118:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e4452413a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6140:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43f189f9d541f43c4b16605e8b10a0c6a0bed6754e87651b1b429cf06ade5fad",
																"typeString": "literal_string \"INDRA: transfer from the zero address\""
															},
															"value": "INDRA: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43f189f9d541f43c4b16605e8b10a0c6a0bed6754e87651b1b429cf06ade5fad",
																"typeString": "literal_string \"INDRA: transfer from the zero address\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "6110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6110:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "6110:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 725,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "6194:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6215:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6207:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6207:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6194:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e4452413a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6219:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5c59fe32750386f83567659e2cfaaef18aabfb3d8280ada7958f80697567f0f",
																"typeString": "literal_string \"INDRA: transfer to the zero address\""
															},
															"value": "INDRA: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5c59fe32750386f83567659e2cfaaef18aabfb3d8280ada7958f80697567f0f",
																"typeString": "literal_string \"INDRA: transfer to the zero address\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "6186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6186:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "6186:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 733,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6264:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 735,
														"indexExpression": {
															"argumentTypes": null,
															"id": 734,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6274:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6264:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 740,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "6306:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "494e4452413a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6314:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_63cc03a3ef4e80d9618a5eb98be8749a7d78a0ec13f39748ef2bdd594171f4e5",
																	"typeString": "literal_string \"INDRA: transfer amount exceeds balance\""
																},
																"value": "INDRA: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_63cc03a3ef4e80d9618a5eb98be8749a7d78a0ec13f39748ef2bdd594171f4e5",
																	"typeString": "literal_string \"INDRA: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 736,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6284:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 738,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 737,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "6294:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6284:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "6284:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6284:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6264:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "6264:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 745,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6361:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 747,
														"indexExpression": {
															"argumentTypes": null,
															"id": 746,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6371:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6361:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 752,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "6409:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 748,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6384:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 750,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 749,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "6394:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6384:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "6384:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6384:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6361:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "6361:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 757,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6436:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 758,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6444:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 759,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6455:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "6427:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6427:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "EmitStatement",
												"src": "6422:40:0"
											}
										]
									},
									"documentation": null,
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6044:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6060:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6079:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6043:51:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6104:0:0"
									},
									"scope": 922,
									"src": "6025:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "6529:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 771,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "6543:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6562:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6543:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e4452413a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6566:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8cd2c247e616ef22b5e9de235b6626ef568be474a208bb790c5569a36dbe0562",
																"typeString": "literal_string \"INDRA: mint to the zero address\""
															},
															"value": "INDRA: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8cd2c247e616ef22b5e9de235b6626ef568be474a208bb790c5569a36dbe0562",
																"typeString": "literal_string \"INDRA: mint to the zero address\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "6535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6535:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "6535:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 779,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "6607:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 782,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "6639:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 780,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6622:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "6622:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6622:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6607:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "6607:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 786,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 788,
														"indexExpression": {
															"argumentTypes": null,
															"id": 787,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6652:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 793,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "6696:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 789,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6673:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 791,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 790,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "6683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6673:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "6673:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6673:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6652:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "6652:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6731:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6723:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 801,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "6744:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "6714:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6714:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "EmitStatement",
												"src": "6709:42:0"
											}
										]
									},
									"documentation": null,
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "6487:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "6504:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6486:33:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6529:0:0"
									},
									"scope": 922,
									"src": "6472:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "6818:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 814,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "6832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6851:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6843:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6832:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e4452413a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6855:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c13ed94c2de72841d3f9c1c769163a1a5178448cc4003515536833b94a57841f",
																"typeString": "literal_string \"INDRA: burn from the zero address\""
															},
															"value": "INDRA: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c13ed94c2de72841d3f9c1c769163a1a5178448cc4003515536833b94a57841f",
																"typeString": "literal_string \"INDRA: burn from the zero address\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "6824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6824:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "6824:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 822,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6898:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 824,
														"indexExpression": {
															"argumentTypes": null,
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "6908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6898:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 829,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "6942:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "494e4452413a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6950:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_74ea521ba02dbd0968265a2d964fb552ca2698b5ec461c7784da3fb01960bb10",
																	"typeString": "literal_string \"INDRA: burn amount exceeds balance\""
																},
																"value": "INDRA: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_74ea521ba02dbd0968265a2d964fb552ca2698b5ec461c7784da3fb01960bb10",
																	"typeString": "literal_string \"INDRA: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 825,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6919:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 826,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "6929:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6919:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "6919:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6919:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6898:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "6898:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 834,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "6993:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 837,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "7025:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 835,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "7008:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "7008:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7008:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6993:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "6993:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 842,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "7052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7069:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7061:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 846,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "7073:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7043:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7043:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "EmitStatement",
												"src": "7038:42:0"
											}
										]
									},
									"documentation": null,
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "6776:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "6793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6775:33:0"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6818:0:0"
									},
									"scope": 922,
									"src": "6761:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "7166:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 860,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7180:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7197:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7189:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7180:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e4452413a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7201:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47949132d0418a546a65e4198ed7750521b37dad62de03c2d59c129fe516d815",
																"typeString": "literal_string \"INDRA: approve from the zero address\""
															},
															"value": "INDRA: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47949132d0418a546a65e4198ed7750521b37dad62de03c2d59c129fe516d815",
																"typeString": "literal_string \"INDRA: approve from the zero address\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "7172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7172:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "7172:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "7254:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7273:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7265:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7265:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7254:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "494e4452413a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7277:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9bec085af116e013ba0cb4636ece7f9f4c8510858860b65c909f4ff37f0dbc9",
																"typeString": "literal_string \"INDRA: approve to the zero address\""
															},
															"value": "INDRA: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9bec085af116e013ba0cb4636ece7f9f4c8510858860b65c909f4ff37f0dbc9",
																"typeString": "literal_string \"INDRA: approve to the zero address\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															940,
															941
														],
														"referencedDeclaration": 941,
														"src": "7246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7246:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "7246:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 877,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "7321:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 880,
															"indexExpression": {
																"argumentTypes": null,
																"id": 878,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7333:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7321:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 881,
														"indexExpression": {
															"argumentTypes": null,
															"id": 879,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7321:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 882,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "7351:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7321:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "7321:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 886,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "7377:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 887,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7384:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 888,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7393:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "7368:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7368:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "EmitStatement",
												"src": "7363:37:0"
											}
										]
									},
									"documentation": null,
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7109:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7124:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7108:48:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7166:0:0"
									},
									"scope": 922,
									"src": "7091:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "7471:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 900,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 901,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "7492:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 899,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "7477:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7477:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "7477:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 905,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 906,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "7523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7523:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 915,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "7576:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "494e4452413a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_5af808a524631ac43d491b307a6fc0cc7289ddd6e7751d69d012dd0551643750",
																		"typeString": "literal_string \"INDRA: burn amount exceeds allowance\""
																	},
																	"value": "INDRA: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_5af808a524631ac43d491b307a6fc0cc7289ddd6e7751d69d012dd0551643750",
																		"typeString": "literal_string \"INDRA: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 908,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "7537:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 910,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 909,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "7549:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7537:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 913,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 911,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "7558:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7558:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7537:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "7537:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7537:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "7505:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7505:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "7505:119:0"
											}
										]
									},
									"documentation": null,
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "7429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "7446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7428:33:0"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7471:0:0"
									},
									"scope": 922,
									"src": "7410:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 923,
							"src": "3485:4146:0"
						}
					],
					"src": "47:7584:0"
				},
				"id": 0
			}
		}
	}
}