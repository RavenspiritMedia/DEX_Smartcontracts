{
	"id": "0f43aa4128c9534a6b13c915de334a57",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/cake.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n\n// \n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor() internal {}\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// \n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), 'Ownable: new owner is the zero address');\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// \ninterface ICAKE20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the CAKE token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// \n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, 'SafeMath: addition overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, 'SafeMath: subtraction overflow');\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, 'SafeMath: multiplication overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, 'SafeMath: division by zero');\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, 'SafeMath: modulo by zero');\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n\n// \n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, 'Address: insufficient balance');\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}('');\n        require(success, 'Address: unable to send value, recipient may have reverted');\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, 'Address: low-level call failed');\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, 'Address: insufficient balance for call');\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), 'Address: call to non-contract');\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// \n/**\n * @dev Implementation of the {ICAKE20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {CAKE20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-CAKE20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of CAKE20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {ICAKE20-approve}.\n */\ncontract CAKE20 is Context, ICAKE20, Ownable {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the CAKE token owner.\n     */\n    function getOwner() external override view returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() public override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() public override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() public override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {CAKE20-totalSupply}.\n     */\n    function totalSupply() public override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {CAKE20-balanceOf}.\n     */\n    function balanceOf(address account) public override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {CAKE20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {CAKE20-allowance}.\n     */\n    function allowance(address owner, address spender) public override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {CAKE20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {CAKE20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {CAKE20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance')\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {CAKE20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {CAKE20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero')\n        );\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), 'CAKE20: transfer from the zero address');\n        require(recipient != address(0), 'CAKE20: transfer to the zero address');\n\n        _balances[sender] = _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance');\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), 'CAKE20: mint to the zero address');\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), 'CAKE20: burn from the zero address');\n\n        _balances[account] = _balances[account].sub(amount, 'CAKE20: burn amount exceeds balance');\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal {\n        require(owner != address(0), 'CAKE20: approve from the zero address');\n        require(spender != address(0), 'CAKE20: approve to the zero address');\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()].sub(amount, 'CAKE20: burn amount exceeds allowance')\n        );\n    }\n}\n\n// CakeToken with Governance.\ncontract CakeToken is CAKE20('PancakeSwap Token', 'Cake') {\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n   \n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n      /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"CAKE::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"CAKE::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"CAKE::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"CAKE::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying CAKEs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/cake.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cake.sol\":12321:18426  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cake.sol\":12321:18426  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a2ccd80a4682ef2d37a1241834724fdaaa35b627cc4caa6cf50d576fee3441a864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2ccd80a4682ef2d37a1241834724fdaaa35b627cc4caa6cf50d576fee3441a864736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xCC 0xD8 EXP CHAINID DUP3 0xEF 0x2D CALLDATACOPY LOG1 0x24 XOR CALLVALUE PUSH19 0x4FDAAA35B627CC4CAA6CF50D576FEE3441A864 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "12321:6105:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2ccd80a4682ef2d37a1241834724fdaaa35b627cc4caa6cf50d576fee3441a864736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xCC 0xD8 EXP CHAINID DUP3 0xEF 0x2D CALLDATACOPY LOG1 0x24 XOR CALLVALUE PUSH19 0x4FDAAA35B627CC4CAA6CF50D576FEE3441A864 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "12321:6105:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12321,
									"end": 18426,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2ccd80a4682ef2d37a1241834724fdaaa35b627cc4caa6cf50d576fee3441a864736f6c634300060c0033",
									".code": [
										{
											"begin": 12321,
											"end": 18426,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 18426,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CAKE20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {ICAKE20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {CAKE20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-CAKE20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of CAKE20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {ICAKE20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {CAKE20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {CAKE20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {CAKE20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the CAKE token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {CAKE20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {CAKE20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {CAKE20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {CAKE20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cake.sol\":19600:28247  contract CAKE20 is Context, ICAKE20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/cake.sol\":20276:20416  constructor(string memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"contracts/cake.sol\":1879:1896  address msgSender */\n  0x00\n    /* \"contracts/cake.sol\":1899:1911  _msgSender() */\n  tag_22\n    /* \"contracts/cake.sol\":1899:1909  _msgSender */\n  shl(0x20, tag_23)\n    /* \"contracts/cake.sol\":1899:1911  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/cake.sol\":1921:1927  _owner */\n  0x00\n    /* \"contracts/cake.sol\":1921:1939  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/cake.sol\":1954:1997  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/cake.sol\":1921:1939  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/cake.sol\":1954:1997  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/cake.sol\":1921:1927  _owner */\n  dup3\n  swap1\n    /* \"contracts/cake.sol\":1954:1997  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/cake.sol\":20347:20359  _name = name */\n  dup2\n  mload\n  tag_25\n  swap1\n    /* \"contracts/cake.sol\":20347:20352  _name */\n  0x04\n  swap1\n    /* \"contracts/cake.sol\":20347:20359  _name = name */\n  0x20\n  dup6\n  add\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n    /* \"contracts/cake.sol\":20369:20385  _symbol = symbol */\n  dup1\n  mload\n  tag_27\n  swap1\n    /* \"contracts/cake.sol\":20369:20376  _symbol */\n  0x05\n  swap1\n    /* \"contracts/cake.sol\":20369:20385  _symbol = symbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_26\n  jump\t// in\ntag_27:\n  pop\n  pop\n    /* \"contracts/cake.sol\":20395:20404  _decimals */\n  0x06\n    /* \"contracts/cake.sol\":20395:20409  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/cake.sol\":20407:20409  18 */\n  0x12\n    /* \"contracts/cake.sol\":20395:20409  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/cake.sol\":19600:28247  contract CAKE20 is Context, ICAKE20, Ownable {... */\n  jump(tag_28)\n    /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\ntag_23:\n    /* \"contracts/cake.sol\":849:859  msg.sender */\n  caller\n    /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/cake.sol\":19600:28247  contract CAKE20 is Context, ICAKE20, Ownable {... */\ntag_26:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cake.sol\":19600:28247  contract CAKE20 is Context, ICAKE20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/cake.sol\":20630:20720  function name() public override view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_24:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_24)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cake.sol\":22063:22221  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":21086:21184  function totalSupply() public override view returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":22680:23066  function transferFrom(... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"contracts/cake.sol\":20782:20872  function decimals() public override view returns (uint8) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":23461:23668  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"contracts/cake.sol\":21242:21359  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"contracts/cake.sol\":2703:2840  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/cake.sol\":20480:20572  function getOwner() external override view returns (address) {... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":2080:2157  function owner() public view returns (address) {... */\n    tag_12:\n      tag_46\n      tag_49\n      jump\t// in\n        /* \"contracts/cake.sol\":20932:21026  function symbol() public override view returns (string memory) {... */\n    tag_13:\n      tag_22\n      tag_51\n      jump\t// in\n        /* \"contracts/cake.sol\":24668:24795  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      calldataload\n      tag_58\n      jump\t// in\n        /* \"contracts/cake.sol\":24155:24460  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"contracts/cake.sol\":21562:21726  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_16:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/cake.sol\":21784:21925  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_67\n      jump\t// in\n        /* \"contracts/cake.sol\":2989:3096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n        /* \"contracts/cake.sol\":20630:20720  function name() public override view returns (string memory) {... */\n    tag_23:\n        /* \"contracts/cake.sol\":20708:20713  _name */\n      0x04\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":20676:20689  string memory */\n      0x60\n      swap4\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      swap1\n      swap3\n        /* \"contracts/cake.sol\":20708:20713  _name */\n      swap1\n      swap2\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      dup4\n      add\n        /* \"contracts/cake.sol\":20708:20713  _name */\n      dup3\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/cake.sol\":20630:20720  function name() public override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":22063:22221  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_30:\n        /* \"contracts/cake.sol\":22138:22142  bool */\n      0x00\n        /* \"contracts/cake.sol\":22154:22193  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"contracts/cake.sol\":22163:22175  _msgSender() */\n      tag_77\n        /* \"contracts/cake.sol\":22163:22173  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":22163:22175  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/cake.sol\":22177:22184  spender */\n      dup5\n        /* \"contracts/cake.sol\":22186:22192  amount */\n      dup5\n        /* \"contracts/cake.sol\":22154:22162  _approve */\n      tag_79\n        /* \"contracts/cake.sol\":22154:22193  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"contracts/cake.sol\":22210:22214  true */\n      0x01\n        /* \"contracts/cake.sol\":22063:22221  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":21086:21184  function totalSupply() public override view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/cake.sol\":21165:21177  _totalSupply */\n      sload(0x03)\n        /* \"contracts/cake.sol\":21086:21184  function totalSupply() public override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":22680:23066  function transferFrom(... */\n    tag_35:\n        /* \"contracts/cake.sol\":22808:22812  bool */\n      0x00\n        /* \"contracts/cake.sol\":22824:22860  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"contracts/cake.sol\":22834:22840  sender */\n      dup5\n        /* \"contracts/cake.sol\":22842:22851  recipient */\n      dup5\n        /* \"contracts/cake.sol\":22853:22859  amount */\n      dup5\n        /* \"contracts/cake.sol\":22824:22833  _transfer */\n      tag_83\n        /* \"contracts/cake.sol\":22824:22860  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/cake.sol\":22870:23038  _approve(... */\n      tag_84\n        /* \"contracts/cake.sol\":22892:22898  sender */\n      dup5\n        /* \"contracts/cake.sol\":22912:22924  _msgSender() */\n      tag_85\n        /* \"contracts/cake.sol\":22912:22922  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":22912:22924  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      tag_86\n        /* \"contracts/cake.sol\":22976:22982  amount */\n      dup6\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      data_037a800c383c8b41b7f30fd6fdbe6b4a969472a92c909c5e3a50fbad30140e2f\n      0x29\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":22938:22957  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":22938:22949  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":22938:22957  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/cake.sol\":22958:22970  _msgSender() */\n      tag_87\n        /* \"contracts/cake.sol\":22958:22968  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":22958:22970  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":22938:22971  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      swap1\n        /* \"contracts/cake.sol\":22938:22975  _allowances[sender][_msgSender()].sub */\n      tag_88\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      jump\t// in\n    tag_86:\n        /* \"contracts/cake.sol\":22870:22878  _approve */\n      tag_79\n        /* \"contracts/cake.sol\":22870:23038  _approve(... */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"contracts/cake.sol\":23055:23059  true */\n      0x01\n        /* \"contracts/cake.sol\":22680:23066  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":20782:20872  function decimals() public override view returns (uint8) {... */\n    tag_37:\n        /* \"contracts/cake.sol\":20856:20865  _decimals */\n      and(0xff, sload(0x06))\n        /* \"contracts/cake.sol\":20782:20872  function decimals() public override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":23461:23668  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_40:\n        /* \"contracts/cake.sol\":23541:23545  bool */\n      0x00\n        /* \"contracts/cake.sol\":23557:23640  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_76\n        /* \"contracts/cake.sol\":23566:23578  _msgSender() */\n      tag_92\n        /* \"contracts/cake.sol\":23566:23576  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":23566:23578  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/cake.sol\":23580:23587  spender */\n      dup5\n        /* \"contracts/cake.sol\":23589:23639  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_86\n        /* \"contracts/cake.sol\":23628:23638  addedValue */\n      dup6\n        /* \"contracts/cake.sol\":23589:23600  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":23589:23614  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/cake.sol\":23601:23613  _msgSender() */\n      tag_94\n        /* \"contracts/cake.sol\":23601:23611  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":23601:23613  _msgSender() */\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":23589:23614  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/cake.sol\":23589:23623  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/cake.sol\":23589:23627  _allowances[_msgSender()][spender].add */\n      tag_95\n        /* \"contracts/cake.sol\":23589:23639  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/cake.sol\":21242:21359  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":21334:21352  _balances[account] */\n      and\n        /* \"contracts/cake.sol\":21308:21315  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":21334:21352  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":21334:21343  _balances */\n      0x01\n        /* \"contracts/cake.sol\":21334:21352  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/cake.sol\":21242:21359  function balanceOf(address account) public override view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":2703:2840  function renounceOwnership() public onlyOwner {... */\n    tag_45:\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_98\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/cake.sol\":2801:2802  0 */\n      0x00\n        /* \"contracts/cake.sol\":2785:2791  _owner */\n      dup1\n      sload\n        /* \"contracts/cake.sol\":2764:2804  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":2785:2791  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/cake.sol\":2764:2804  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/cake.sol\":2801:2802  0 */\n      dup4\n      swap1\n        /* \"contracts/cake.sol\":2764:2804  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/cake.sol\":2831:2832  0 */\n      0x00\n        /* \"contracts/cake.sol\":2814:2833  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":2703:2840  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":20480:20572  function getOwner() external override view returns (address) {... */\n    tag_47:\n        /* \"contracts/cake.sol\":20532:20539  address */\n      0x00\n        /* \"contracts/cake.sol\":20558:20565  owner() */\n      tag_102\n        /* \"contracts/cake.sol\":20558:20563  owner */\n      tag_49\n        /* \"contracts/cake.sol\":20558:20565  owner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/cake.sol\":20551:20565  return owner() */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":20480:20572  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":2080:2157  function owner() public view returns (address) {... */\n    tag_49:\n        /* \"contracts/cake.sol\":2118:2125  address */\n      0x00\n        /* \"contracts/cake.sol\":2144:2150  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/cake.sol\":2080:2157  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":20932:21026  function symbol() public override view returns (string memory) {... */\n    tag_51:\n        /* \"contracts/cake.sol\":21012:21019  _symbol */\n      0x05\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":20980:20993  string memory */\n      0x60\n      swap4\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/cake.sol\":21012:21019  _symbol */\n      swap1\n      swap2\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      dup4\n      add\n        /* \"contracts/cake.sol\":21012:21019  _symbol */\n      dup3\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n        /* \"contracts/cake.sol\":24668:24795  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_58:\n        /* \"contracts/cake.sol\":24724:24728  bool */\n      0x00\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_109\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_110\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/cake.sol\":24740:24767  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"contracts/cake.sol\":24746:24758  _msgSender() */\n      tag_113\n        /* \"contracts/cake.sol\":24746:24756  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":24746:24758  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/cake.sol\":24760:24766  amount */\n      dup4\n        /* \"contracts/cake.sol\":24740:24745  _mint */\n      tag_114\n        /* \"contracts/cake.sol\":24740:24767  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/cake.sol\":24784:24788  true */\n      0x01\n        /* \"contracts/cake.sol\":24668:24795  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":24155:24460  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_61:\n        /* \"contracts/cake.sol\":24240:24244  bool */\n      0x00\n        /* \"contracts/cake.sol\":24256:24432  _approve(... */\n      tag_76\n        /* \"contracts/cake.sol\":24278:24290  _msgSender() */\n      tag_117\n        /* \"contracts/cake.sol\":24278:24288  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":24278:24290  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/cake.sol\":24304:24311  spender */\n      dup5\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      tag_86\n        /* \"contracts/cake.sol\":24364:24379  subtractedValue */\n      dup6\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_7426a02a8645a4fc3fbe54503be0c6ef4e20d7e78f4110ed802fa144a020d321\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/cake.sol\":24325:24336  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":24325:24350  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/cake.sol\":24337:24349  _msgSender() */\n      tag_119\n        /* \"contracts/cake.sol\":24337:24347  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":24337:24349  _msgSender() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":24325:24350  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/cake.sol\":24325:24359  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      swap1\n        /* \"contracts/cake.sol\":24325:24363  _allowances[_msgSender()][spender].sub */\n      tag_88\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      jump\t// in\n        /* \"contracts/cake.sol\":21562:21726  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_64:\n        /* \"contracts/cake.sol\":21640:21644  bool */\n      0x00\n        /* \"contracts/cake.sol\":21656:21698  _transfer(_msgSender(), recipient, amount) */\n      tag_76\n        /* \"contracts/cake.sol\":21666:21678  _msgSender() */\n      tag_122\n        /* \"contracts/cake.sol\":21666:21676  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":21666:21678  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/cake.sol\":21680:21689  recipient */\n      dup5\n        /* \"contracts/cake.sol\":21691:21697  amount */\n      dup5\n        /* \"contracts/cake.sol\":21656:21665  _transfer */\n      tag_83\n        /* \"contracts/cake.sol\":21656:21698  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/cake.sol\":21784:21925  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":21891:21909  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/cake.sol\":21865:21872  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":21891:21909  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":21891:21902  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":21891:21909  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":21891:21918  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/cake.sol\":21784:21925  function allowance(address owner, address spender) public override view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":2989:3096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_70:\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_125\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_78\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/cake.sol\":3061:3089  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/cake.sol\":3080:3088  newOwner */\n      dup2\n        /* \"contracts/cake.sol\":3061:3079  _transferOwnership */\n      tag_129\n        /* \"contracts/cake.sol\":3061:3089  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/cake.sol\":2989:3096  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\n    tag_78:\n        /* \"contracts/cake.sol\":849:859  msg.sender */\n      caller\n        /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":27427:27791  function _approve(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":27550:27569  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/cake.sol\":27542:27611  require(owner != address(0), 'CAKE20: approve from the zero address') */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c8a22d3b0f46cb8553e794906ffc1b6e8656f593e72d64cb7102cb1f934afaf6\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":27629:27650  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/cake.sol\":27621:27690  require(spender != address(0), 'CAKE20: approve to the zero address') */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_818980e094d98e32545e5a09b38cf4334a5aa9765c6adbd223fdb87d9a48dd60\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":27701:27719  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":27701:27712  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":27701:27719  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":27701:27728  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":27701:27737  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":27752:27784  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/cake.sol\":27427:27791  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":25269:25766  function _transfer(... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25396:25416  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/cake.sol\":25388:25459  require(sender != address(0), 'CAKE20: transfer from the zero address') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9f602c3ca62830526fb39312611c26f66e9439b2bdd3e2c3a3e2a522717508c4\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25477:25500  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/cake.sol\":25469:25541  require(recipient != address(0), 'CAKE20: transfer to the zero address') */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ac1d5373694637d2969063be6d0102dc19599842fefc49d9b9656600338f4bd7\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      tag_137\n        /* \"contracts/cake.sol\":25594:25600  amount */\n      dup2\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_6883c37a4c18e68948a3674af93a21b6c0026d301016300c1e6da51f1448eb28\n      0x27\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25572:25589  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":25572:25581  _balances */\n      0x01\n        /* \"contracts/cake.sol\":25572:25589  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      swap1\n        /* \"contracts/cake.sol\":25572:25593  _balances[sender].sub */\n      tag_88\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25552:25569  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":25552:25561  _balances */\n      0x01\n        /* \"contracts/cake.sol\":25552:25569  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/cake.sol\":25552:25644  _balances[sender] = _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/cake.sol\":25677:25697  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/cake.sol\":25677:25709  _balances[recipient].add(amount) */\n      tag_138\n      swap1\n        /* \"contracts/cake.sol\":25702:25708  amount */\n      dup3\n        /* \"contracts/cake.sol\":25677:25701  _balances[recipient].add */\n      tag_95\n        /* \"contracts/cake.sol\":25677:25709  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25654:25674  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":25654:25663  _balances */\n      0x01\n        /* \"contracts/cake.sol\":25654:25674  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":25654:25709  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/cake.sol\":25724:25759  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/cake.sol\":25654:25674  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/cake.sol\":25724:25759  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/cake.sol\":25269:25766  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":8178:8395  function sub(... */\n    tag_88:\n        /* \"contracts/cake.sol\":8294:8301  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":8329:8341  errorMessage */\n      dup2\n        /* \"contracts/cake.sol\":8321:8327  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/cake.sol\":8313:8342  require(b <= a, errorMessage) */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_141:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_143\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_141)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n      pop\n      pop\n        /* \"contracts/cake.sol\":8364:8369  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/cake.sol\":8178:8395  function sub(... */\n      jump\t// out\n        /* \"contracts/cake.sol\":7306:7482  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"contracts/cake.sol\":7364:7371  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":7395:7400  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/cake.sol\":7418:7424  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/cake.sol\":7410:7456  require(c >= a, 'SafeMath: addition overflow') */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/cake.sol\":7474:7475  c */\n      swap4\n        /* \"contracts/cake.sol\":7306:7482  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":26036:26339  function _mint(address account, uint256 amount) internal {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":26111:26132  account != address(0) */\n      dup3\n      and\n        /* \"contracts/cake.sol\":26103:26169  require(account != address(0), 'CAKE20: mint to the zero address') */\n      tag_148\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x43414b4532303a206d696e7420746f20746865207a65726f2061646472657373\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/cake.sol\":26195:26207  _totalSupply */\n      sload(0x03)\n        /* \"contracts/cake.sol\":26195:26219  _totalSupply.add(amount) */\n      tag_149\n      swap1\n        /* \"contracts/cake.sol\":26212:26218  amount */\n      dup3\n        /* \"contracts/cake.sol\":26195:26211  _totalSupply.add */\n      tag_95\n        /* \"contracts/cake.sol\":26195:26219  _totalSupply.add(amount) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/cake.sol\":26180:26192  _totalSupply */\n      0x03\n        /* \"contracts/cake.sol\":26180:26219  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":26250:26268  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":26250:26259  _balances */\n      0x01\n        /* \"contracts/cake.sol\":26250:26268  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/cake.sol\":26250:26280  _balances[account].add(amount) */\n      tag_150\n      swap1\n        /* \"contracts/cake.sol\":26273:26279  amount */\n      dup3\n        /* \"contracts/cake.sol\":26250:26272  _balances[account].add */\n      tag_95\n        /* \"contracts/cake.sol\":26250:26280  _balances[account].add(amount) */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":26229:26247  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":26229:26238  _balances */\n      0x01\n        /* \"contracts/cake.sol\":26229:26247  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":26229:26280  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/cake.sol\":26295:26332  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/cake.sol\":26229:26247  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/cake.sol\":26295:26332  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/cake.sol\":26036:26339  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":3197:3422  function _transferOwnership(address newOwner) internal {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":3270:3292  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/cake.sol\":3262:3335  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/cake.sol\":3371:3377  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/cake.sol\":3350:3388  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/cake.sol\":3371:3377  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/cake.sol\":3350:3388  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/cake.sol\":3398:3404  _owner */\n      0x00\n        /* \"contracts/cake.sol\":3398:3415  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":3197:3422  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_037a800c383c8b41b7f30fd6fdbe6b4a969472a92c909c5e3a50fbad30140e2f 43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_6883c37a4c18e68948a3674af93a21b6c0026d301016300c1e6da51f1448eb28 43414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_7426a02a8645a4fc3fbe54503be0c6ef4e20d7e78f4110ed802fa144a020d321 43414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_818980e094d98e32545e5a09b38cf4334a5aa9765c6adbd223fdb87d9a48dd60 43414b4532303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_9f602c3ca62830526fb39312611c26f66e9439b2bdd3e2c3a3e2a522717508c4 43414b4532303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_ac1d5373694637d2969063be6d0102dc19599842fefc49d9b9656600338f4bd7 43414b4532303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_c8a22d3b0f46cb8553e794906ffc1b6e8656f593e72d64cb7102cb1f934afaf6 43414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220c7d11c269717c92bfb43d480120ecdd5b0e7635356b95d35069be58b72d8433864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1120 CODESIZE SUB DUP1 PUSH3 0x1120 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x0 PUSH3 0x1B1 PUSH3 0x23C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP2 MLOAD PUSH3 0x210 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x240 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x226 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x240 JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x2DC JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x283 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x296 JUMP JUMPDEST POP PUSH3 0x2C1 SWAP3 SWAP2 POP PUSH3 0x2C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C6 JUMP JUMPDEST PUSH2 0xE34 DUP1 PUSH3 0x2EC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x520 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x10D PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x66E JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x75B JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x76F JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x79A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x810 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x814 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x4BF DUP5 PUSH2 0x45B PUSH2 0x810 JUMP JUMPDEST PUSH2 0x4BA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD1 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4DF PUSH2 0x810 JUMP JUMPDEST DUP5 PUSH2 0x4BA DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F0 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x543 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F9 PUSH2 0x5FE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6EB PUSH2 0x6E5 PUSH2 0x810 JUMP JUMPDEST DUP4 PUSH2 0xB4A JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x700 PUSH2 0x810 JUMP JUMPDEST DUP5 PUSH2 0x4BA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD47 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x72A PUSH2 0x810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x768 PUSH2 0x810 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7A2 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x804 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x80D DUP2 PUSH2 0xC30 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDDA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD6D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD90 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD20 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x9F6 SWAP1 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA8E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAD3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBA5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414B4532303A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBB2 SWAP1 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBD8 SWAP1 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E63654F776E61626C653A206E PUSH6 0x77206F776E65 PUSH19 0x20697320746865207A65726F20616464726573 PUSH20 0x43414B4532303A207472616E7366657220616D6F PUSH22 0x6E7420657863656564732062616C616E636543414B45 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F43414B45 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737343414B4532303A207472616E73666572 KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737343414B4532303A207472616E73666572 KECCAK256 PUSH21 0x6F20746865207A65726F206164647265737343414B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xD1 SHR 0x26 SWAP8 OR 0xC9 0x2B 0xFB NUMBER 0xD4 DUP1 SLT 0xE 0xCD 0xD5 0xB0 0xE7 PUSH4 0x5356B95D CALLDATALOAD MOD SWAP12 0xE5 DUP12 PUSH19 0xD8433864736F6C634300060C00330000000000 ",
							"sourceMap": "19600:8647:0:-:0;;;20276:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20276:140:0;;;;;;;;;;-1:-1:-1;20276:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20276:140:0;;;;;;;;;;-1:-1:-1;20276:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1879:17;1899:12;:10;;;:12;;:::i;:::-;1921:6;:18;;-1:-1:-1;;;;;;1921:18:0;-1:-1:-1;;;;;1921:18:0;;;;;;;1954:43;;1921:18;;-1:-1:-1;1921:18:0;1954:43;;1921:6;;1954:43;-1:-1:-1;20347:12:0;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;20369:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;20395:9:0;:14;;-1:-1:-1;;20395:14:0;20407:2;20395:14;;;-1:-1:-1;19600:8647:0;;770:96;849:10;770:96;:::o;19600:8647::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19600:8647:0;;;-1:-1:-1;19600:8647:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104c9565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d2565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b0316610520565b61028a61053b565b005b6102946105ef565b604080516001600160a01b039092168252519081900360200190f35b6102946105fe565b61010d61060d565b6101ae600480360360208110156102d657600080fd5b503561066e565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106f3565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561075b565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b038135811691602001351661076f565b61028a6004803603602081101561037957600080fd5b50356001600160a01b031661079a565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610810565b8484610814565b50600192915050565b60035490565b600061044f848484610900565b6104bf8461045b610810565b6104ba85604051806060016040528060298152602001610cd1602991396001600160a01b038a16600090815260026020526040812090610499610810565b6001600160a01b031681526020810191909152604001600020549190610a52565b610814565b5060019392505050565b60065460ff1690565b60006104336104df610810565b846104ba85600260006104f0610810565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610ae9565b6001600160a01b031660009081526001602052604090205490565b610543610810565b6000546001600160a01b039081169116146105a5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006105f96105fe565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610678610810565b6000546001600160a01b039081169116146106da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106eb6106e5610810565b83610b4a565b506001919050565b6000610433610700610810565b846104ba85604051806060016040528060268152602001610d47602691396002600061072a610810565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a52565b6000610433610768610810565b8484610900565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107a2610810565b6000546001600160a01b03908116911614610804576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61080d81610c30565b50565b3390565b6001600160a01b0383166108595760405162461bcd60e51b8152600401808060200182810382526025815260200180610dda6025913960400191505060405180910390fd5b6001600160a01b03821661089e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610d6d6023913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109455760405162461bcd60e51b8152600401808060200182810382526026815260200180610d906026913960400191505060405180910390fd5b6001600160a01b03821661098a5760405162461bcd60e51b8152600401808060200182810382526024815260200180610db66024913960400191505060405180910390fd5b6109c781604051806060016040528060278152602001610d20602791396001600160a01b0386166000908152600160205260409020549190610a52565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109f69082610ae9565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ae15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aa6578181015183820152602001610a8e565b50505050905090810190601f168015610ad35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b43576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610ba5576040805162461bcd60e51b815260206004820181905260248201527f43414b4532303a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b600354610bb29082610ae9565b6003556001600160a01b038216600090815260016020526040902054610bd89082610ae9565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c755760405162461bcd60e51b8152600401808060200182810382526026815260200180610cfa6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e636543414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f43414b4532303a20617070726f766520746f20746865207a65726f206164647265737343414b4532303a207472616e736665722066726f6d20746865207a65726f206164647265737343414b4532303a207472616e7366657220746f20746865207a65726f206164647265737343414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220c7d11c269717c92bfb43d480120ecdd5b0e7635356b95d35069be58b72d8433864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x520 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x10D PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x66E JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x75B JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x76F JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x79A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x810 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x814 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x4BF DUP5 PUSH2 0x45B PUSH2 0x810 JUMP JUMPDEST PUSH2 0x4BA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD1 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4DF PUSH2 0x810 JUMP JUMPDEST DUP5 PUSH2 0x4BA DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F0 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x543 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F9 PUSH2 0x5FE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6EB PUSH2 0x6E5 PUSH2 0x810 JUMP JUMPDEST DUP4 PUSH2 0xB4A JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x700 PUSH2 0x810 JUMP JUMPDEST DUP5 PUSH2 0x4BA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD47 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x72A PUSH2 0x810 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x768 PUSH2 0x810 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7A2 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x804 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x80D DUP2 PUSH2 0xC30 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDDA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD6D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD90 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD20 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x9F6 SWAP1 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA8E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAD3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBA5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414B4532303A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBB2 SWAP1 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBD8 SWAP1 DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E63654F776E61626C653A206E PUSH6 0x77206F776E65 PUSH19 0x20697320746865207A65726F20616464726573 PUSH20 0x43414B4532303A207472616E7366657220616D6F PUSH22 0x6E7420657863656564732062616C616E636543414B45 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F43414B45 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737343414B4532303A207472616E73666572 KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737343414B4532303A207472616E73666572 KECCAK256 PUSH21 0x6F20746865207A65726F206164647265737343414B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xD1 SHR 0x26 SWAP8 OR 0xC9 0x2B 0xFB NUMBER 0xD4 DUP1 SLT 0xE 0xCD 0xD5 0xB0 0xE7 PUSH4 0x5356B95D CALLDATALOAD MOD SWAP12 0xE5 DUP12 PUSH19 0xD8433864736F6C634300060C00330000000000 ",
							"sourceMap": "19600:8647:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22063:158;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22063:158:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;21086:98;;;:::i;:::-;;;;;;;;;;;;;;;;22680:386;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22680:386:0;;;;;;;;;;;;;;;;;:::i;20782:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23461:207;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;23461:207:0;;;;;;;;:::i;21242:117::-;;;;;;;;;;;;;;;;-1:-1:-1;21242:117:0;-1:-1:-1;;;;;21242:117:0;;:::i;2703:137::-;;;:::i;:::-;;20480:92;;;:::i;:::-;;;;-1:-1:-1;;;;;20480:92:0;;;;;;;;;;;;;;2080:77;;;:::i;20932:94::-;;;:::i;24668:127::-;;;;;;;;;;;;;;;;-1:-1:-1;24668:127:0;;:::i;24155:305::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;24155:305:0;;;;;;;;:::i;21562:164::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21562:164:0;;;;;;;;:::i;21784:141::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21784:141:0;;;;;;;;;;:::i;2989:107::-;;;;;;;;;;;;;;;;-1:-1:-1;2989:107:0;-1:-1:-1;;;;;2989:107:0;;:::i;20630:90::-;20708:5;20701:12;;;;;;;;-1:-1:-1;;20701:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20676:13;;20701:12;;20708:5;;20701:12;;20708:5;20701:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:90;:::o;22063:158::-;22138:4;22154:39;22163:12;:10;:12::i;:::-;22177:7;22186:6;22154:8;:39::i;:::-;-1:-1:-1;22210:4:0;22063:158;;;;:::o;21086:98::-;21165:12;;21086:98;:::o;22680:386::-;22808:4;22824:36;22834:6;22842:9;22853:6;22824:9;:36::i;:::-;22870:168;22892:6;22912:12;:10;:12::i;:::-;22938:90;22976:6;22938:90;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22938:19:0;;;;;;:11;:19;;;;;;22958:12;:10;:12::i;:::-;-1:-1:-1;;;;;22938:33:0;;;;;;;;;;;;-1:-1:-1;22938:33:0;;;:90;:37;:90::i;:::-;22870:8;:168::i;:::-;-1:-1:-1;23055:4:0;22680:386;;;;;:::o;20782:90::-;20856:9;;;;20782:90;:::o;23461:207::-;23541:4;23557:83;23566:12;:10;:12::i;:::-;23580:7;23589:50;23628:10;23589:11;:25;23601:12;:10;:12::i;:::-;-1:-1:-1;;;;;23589:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;23589:25:0;;;:34;;;;;;;;;;;:38;:50::i;21242:117::-;-1:-1:-1;;;;;21334:18:0;21308:7;21334:18;;;:9;:18;;;;;;;21242:117::o;2703:137::-;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:1:::1;2785:6:::0;;2764:40:::1;::::0;-1:-1:-1;;;;;2785:6:0;;::::1;::::0;2764:40:::1;::::0;2801:1;;2764:40:::1;2831:1;2814:19:::0;;-1:-1:-1;;;;;;2814:19:0::1;::::0;;2703:137::o;20480:92::-;20532:7;20558;:5;:7::i;:::-;20551:14;;20480:92;:::o;2080:77::-;2118:7;2144:6;-1:-1:-1;;;;;2144:6:0;2080:77;:::o;20932:94::-;21012:7;21005:14;;;;;;;;-1:-1:-1;;21005:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20980:13;;21005:14;;21012:7;;21005:14;;21012:7;21005:14;;;;;;;;;;;;;;;;;;;;;;;;24668:127;24724:4;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24740:27:::1;24746:12;:10;:12::i;:::-;24760:6;24740:5;:27::i;:::-;-1:-1:-1::0;24784:4:0::1;24668:127:::0;;;:::o;24155:305::-;24240:4;24256:176;24278:12;:10;:12::i;:::-;24304:7;24325:97;24364:15;24325:97;;;;;;;;;;;;;;;;;:11;:25;24337:12;:10;:12::i;:::-;-1:-1:-1;;;;;24325:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;24325:25:0;;;:34;;;;;;;;;;;:97;:38;:97::i;21562:164::-;21640:4;21656:42;21666:12;:10;:12::i;:::-;21680:9;21691:6;21656:9;:42::i;21784:141::-;-1:-1:-1;;;;;21891:18:0;;;21865:7;21891:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;21784:141::o;2989:107::-;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3061:28:::1;3080:8;3061:18;:28::i;:::-;2989:107:::0;:::o;770:96::-;849:10;770:96;:::o;27427:364::-;-1:-1:-1;;;;;27550:19:0;;27542:69;;;;-1:-1:-1;;;27542:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27629:21:0;;27621:69;;;;-1:-1:-1;;;27621:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27701:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;27752:32;;;;;;;;;;;;;;;;;27427:364;;;:::o;25269:497::-;-1:-1:-1;;;;;25396:20:0;;25388:71;;;;-1:-1:-1;;;25388:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25477:23:0;;25469:72;;;;-1:-1:-1;;;25469:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25572;25594:6;25572:72;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25572:17:0;;;;;;:9;:17;;;;;;;:72;:21;:72::i;:::-;-1:-1:-1;;;;;25552:17:0;;;;;;;:9;:17;;;;;;:92;;;;25677:20;;;;;;;:32;;25702:6;25677:24;:32::i;:::-;-1:-1:-1;;;;;25654:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;25724:35;;;;;;;25654:20;;25724:35;;;;;;;;;;;;;25269:497;;;:::o;8178:217::-;8294:7;8329:12;8321:6;;;;8313:29;;;;-1:-1:-1;;;8313:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8364:5:0;;;8178:217::o;7306:176::-;7364:7;7395:5;;;7418:6;;;;7410:46;;;;;-1:-1:-1;;;7410:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;7474:1;7306:176;-1:-1:-1;;;7306:176:0:o;26036:303::-;-1:-1:-1;;;;;26111:21:0;;26103:66;;;;;-1:-1:-1;;;26103:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26195:12;;:24;;26212:6;26195:16;:24::i;:::-;26180:12;:39;-1:-1:-1;;;;;26250:18:0;;;;;;:9;:18;;;;;;:30;;26273:6;26250:22;:30::i;:::-;-1:-1:-1;;;;;26229:18:0;;;;;;:9;:18;;;;;;;;:51;;;;26295:37;;;;;;;26229:18;;;;26295:37;;;;;;;;;;26036:303;;:::o;3197:225::-;-1:-1:-1;;;;;3270:22:0;;3262:73;;;;-1:-1:-1;;;3262:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3371:6;;;3350:38;;-1:-1:-1;;;;;3350:38:0;;;;3371:6;;;3350:38;;;3398:6;:17;;-1:-1:-1;;;;;;3398:17:0;-1:-1:-1;;;;;3398:17:0;;;;;;;;;;3197:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "727200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1209",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24293",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1879,
									"end": 1896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1927,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20352,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20347,
									"end": 20352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20376,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 20369,
									"end": 20376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20395,
									"end": 20404,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20407,
									"end": 20409,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 770,
									"end": 866,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 770,
									"end": 866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 849,
									"end": 859,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 770,
									"end": 866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 770,
									"end": 866,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19600,
									"end": 28247,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7d11c269717c92bfb43d480120ecdd5b0e7635356b95d35069be58b72d8433864736f6c634300060c0033",
									".code": [
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19600,
											"end": 28247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20676,
											"end": 20689,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20676,
											"end": 20689,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22163,
											"end": 22173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22177,
											"end": 22184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22192,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22210,
											"end": 22214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21177,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21165,
											"end": 21177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22808,
											"end": 22812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22834,
											"end": 22840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22842,
											"end": 22851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22824,
											"end": 22833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22892,
											"end": 22898,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22912,
											"end": 22922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22976,
											"end": 22982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH data",
											"source": 0,
											"value": "37A800C383C8B41B7F30FD6FDBE6B4A969472A92C909C5E3A50FBAD30140E2F"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22949,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22958,
											"end": 22968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23055,
											"end": 23059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 23545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23557,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23566,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23580,
											"end": 23587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23628,
											"end": 23638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23601,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23589,
											"end": 23639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21308,
											"end": 21315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20558,
											"end": 20563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20980,
											"end": 20993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20980,
											"end": 20993,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 24746,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24740,
											"end": 24745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24784,
											"end": 24788,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24240,
											"end": 24244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24256,
											"end": 24432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24278,
											"end": 24288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24364,
											"end": 24379,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH data",
											"source": 0,
											"value": "7426A02A8645A4FC3FBE54503BE0C6EF4E20D7E78F4110ED802FA144A020D321"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24336,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24337,
											"end": 24347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21656,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21666,
											"end": 21676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21680,
											"end": 21689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21691,
											"end": 21697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21656,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 21656,
											"end": 21698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21902,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3061,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3080,
											"end": 3088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3061,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3061,
											"end": 3089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3061,
											"end": 3089,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3061,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 770,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 770,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 859,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 770,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 866,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27550,
											"end": 27569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27550,
											"end": 27569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH data",
											"source": 0,
											"value": "C8A22D3B0F46CB8553E794906FFC1B6E8656F593E72D64CB7102CB1F934AFAF6"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27629,
											"end": 27650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27629,
											"end": 27650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH data",
											"source": 0,
											"value": "818980E094D98E32545E5A09B38CF4334A5AA9765C6ADBD223FDB87D9A48DD60"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27712,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27737,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25396,
											"end": 25416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25396,
											"end": 25416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH data",
											"source": 0,
											"value": "9F602C3CA62830526FB39312611C26F66E9439B2BDD3E2C3A3E2A522717508C4"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25477,
											"end": 25500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25477,
											"end": 25500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH data",
											"source": 0,
											"value": "AC1D5373694637D2969063BE6D0102DC19599842FEFC49D9B9656600338F4BD7"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 25594,
											"end": 25600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH data",
											"source": 0,
											"value": "6883C37A4C18E68948A3674AF93A21B6C0026D301016300C1E6DA51F1448EB28"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8178,
											"end": 8395,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8178,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8178,
											"end": 8395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7306,
											"end": 7482,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7306,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7306,
											"end": 7482,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26111,
											"end": 26132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "43414B4532303A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26195,
											"end": 26207,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26195,
											"end": 26207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26195,
											"end": 26211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26180,
											"end": 26192,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26180,
											"end": 26219,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26273,
											"end": 26279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26238,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3197,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3422,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"37A800C383C8B41B7F30FD6FDBE6B4A969472A92C909C5E3A50FBAD30140E2F": "43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"6883C37A4C18E68948A3674AF93A21B6C0026D301016300C1E6DA51F1448EB28": "43414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"7426A02A8645A4FC3FBE54503BE0C6EF4E20D7E78F4110ED802FA144A020D321": "43414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"818980E094D98E32545E5A09B38CF4334A5AA9765C6ADBD223FDB87D9A48DD60": "43414b4532303a20617070726f766520746f20746865207a65726f2061646472657373",
										"9F602C3CA62830526FB39312611C26F66E9439B2BDD3E2C3A3E2A522717508C4": "43414b4532303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"AC1D5373694637D2969063BE6D0102DC19599842FEFC49D9B9656600338F4BD7": "43414b4532303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"C8A22D3B0F46CB8553E794906FFC1B6E8656F593E72D64CB7102CB1F934AFAF6": "43414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {ICAKE20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {CAKE20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-CAKE20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of CAKE20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {ICAKE20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {CAKE20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {CAKE20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {CAKE20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the CAKE token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {CAKE20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {CAKE20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {CAKE20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {CAKE20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"CAKE20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 31,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 728,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 734,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 736,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 738,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 740,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 742,
								"contract": "contracts/cake.sol:CAKE20",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CakeToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {CAKE20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {CAKE20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {CAKE20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"delegates(address)": {
								"params": {
									"delegator": "The address to get delegatee for"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getOwner()": {
								"details": "Returns the CAKE token owner."
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {CAKE20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {CAKE20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {CAKE20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {CAKE20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cake.sol\":28279:36917  contract CakeToken is CAKE20('PancakeSwap Token', 'Cake') {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/cake.sol\":20276:20416  constructor(string memory name, string memory symbol) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x79, 0x2830b731b0b5b2a9bbb0b8102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x43616b65)\n  dup2\n  mstore\n  pop\n    /* \"contracts/cake.sol\":1879:1896  address msgSender */\n  0x00\n    /* \"contracts/cake.sol\":1899:1911  _msgSender() */\n  tag_7\n    /* \"contracts/cake.sol\":1899:1909  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/cake.sol\":1899:1911  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/cake.sol\":1921:1927  _owner */\n  0x00\n    /* \"contracts/cake.sol\":1921:1939  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/cake.sol\":1954:1997  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/cake.sol\":1921:1939  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/cake.sol\":1954:1997  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/cake.sol\":1921:1927  _owner */\n  dup3\n  swap1\n    /* \"contracts/cake.sol\":1954:1997  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/cake.sol\":20347:20359  _name = name */\n  dup2\n  mload\n  tag_10\n  swap1\n    /* \"contracts/cake.sol\":20347:20352  _name */\n  0x04\n  swap1\n    /* \"contracts/cake.sol\":20347:20359  _name = name */\n  0x20\n  dup6\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/cake.sol\":20369:20385  _symbol = symbol */\n  dup1\n  mload\n  tag_12\n  swap1\n    /* \"contracts/cake.sol\":20369:20376  _symbol */\n  0x05\n  swap1\n    /* \"contracts/cake.sol\":20369:20385  _symbol = symbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n    /* \"contracts/cake.sol\":20395:20404  _decimals */\n  0x06\n    /* \"contracts/cake.sol\":20395:20409  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/cake.sol\":20407:20409  18 */\n  0x12\n    /* \"contracts/cake.sol\":20395:20409  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/cake.sol\":28279:36917  contract CakeToken is CAKE20('PancakeSwap Token', 'Cake') {... */\n  jump(tag_13)\n    /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/cake.sol\":849:859  msg.sender */\n  caller\n    /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/cake.sol\":28279:36917  contract CakeToken is CAKE20('PancakeSwap Token', 'Cake') {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cake.sol\":28279:36917  contract CakeToken is CAKE20('PancakeSwap Token', 'Cake') {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x782d6fe1\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x782d6fe1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x39509351\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5c19a95c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/cake.sol\":20630:20720  function name() public override view returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_38:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_38)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_41:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cake.sol\":22063:22221  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_44\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":21086:21184  function totalSupply() public override view returns (uint256) {... */\n    tag_5:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":29546:29668  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_45\n      tag_48\n      jump\t// in\n        /* \"contracts/cake.sol\":22680:23066  function transferFrom(... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_51\n      jump\t// in\n        /* \"contracts/cake.sol\":20782:20872  function decimals() public override view returns (uint8) {... */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":23461:23668  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_56\n      jump\t// in\n        /* \"contracts/cake.sol\":28440:28599  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/cake.sol\":30511:30654  function delegates(address delegator)... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_62\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":30792:30894  function delegate(address delegatee) external {... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_65\n      jump\t// in\n        /* \"contracts/cake.sol\":29427:29476  mapping (address => uint32) public numCheckpoints */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_68\n      jump\t// in\n    tag_66:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":21242:21359  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_14:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_71\n      jump\t// in\n        /* \"contracts/cake.sol\":2703:2840  function renounceOwnership() public onlyOwner {... */\n    tag_15:\n      tag_57\n      tag_73\n      jump\t// in\n        /* \"contracts/cake.sol\":33318:34535  function getPriorVotes(address account, uint blockNumber)... */\n    tag_16:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_76\n      jump\t// in\n        /* \"contracts/cake.sol\":29954:29993  mapping (address => uint) public nonces */\n    tag_17:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_79\n      jump\t// in\n        /* \"contracts/cake.sol\":20480:20572  function getOwner() external override view returns (address) {... */\n    tag_18:\n      tag_60\n      tag_81\n      jump\t// in\n        /* \"contracts/cake.sol\":2080:2157  function owner() public view returns (address) {... */\n    tag_19:\n      tag_60\n      tag_83\n      jump\t// in\n        /* \"contracts/cake.sol\":20932:21026  function symbol() public override view returns (string memory) {... */\n    tag_20:\n      tag_36\n      tag_85\n      jump\t// in\n        /* \"contracts/cake.sol\":24668:24795  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_21:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      calldataload\n      tag_92\n      jump\t// in\n        /* \"contracts/cake.sol\":24155:24460  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_22:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_95\n      jump\t// in\n        /* \"contracts/cake.sol\":21562:21726  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_23:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_98\n      jump\t// in\n        /* \"contracts/cake.sol\":32648:32896  function getCurrentVotes(address account)... */\n    tag_24:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_101\n      jump\t// in\n        /* \"contracts/cake.sol\":31317:32454  function delegateBySig(... */\n    tag_25:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x60\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xa0\n      add\n      calldataload\n      tag_104\n      jump\t// in\n        /* \"contracts/cake.sol\":21784:21925  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_26:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_107\n      jump\t// in\n        /* \"contracts/cake.sol\":29759:29876  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_27:\n      tag_45\n      tag_109\n      jump\t// in\n        /* \"contracts/cake.sol\":29291:29361  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_112\n      jump\t// in\n    tag_110:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/cake.sol\":2989:3096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_29:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_115\n      jump\t// in\n        /* \"contracts/cake.sol\":20630:20720  function name() public override view returns (string memory) {... */\n    tag_37:\n        /* \"contracts/cake.sol\":20708:20713  _name */\n      0x04\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":20676:20689  string memory */\n      0x60\n      swap4\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      swap1\n      swap3\n        /* \"contracts/cake.sol\":20708:20713  _name */\n      swap1\n      swap2\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      dup4\n      add\n        /* \"contracts/cake.sol\":20708:20713  _name */\n      dup3\n        /* \"contracts/cake.sol\":20701:20713  return _name */\n      dup3\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/cake.sol\":20630:20720  function name() public override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":22063:22221  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_44:\n        /* \"contracts/cake.sol\":22138:22142  bool */\n      0x00\n        /* \"contracts/cake.sol\":22154:22193  _approve(_msgSender(), spender, amount) */\n      tag_121\n        /* \"contracts/cake.sol\":22163:22175  _msgSender() */\n      tag_122\n        /* \"contracts/cake.sol\":22163:22173  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":22163:22175  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/cake.sol\":22177:22184  spender */\n      dup5\n        /* \"contracts/cake.sol\":22186:22192  amount */\n      dup5\n        /* \"contracts/cake.sol\":22154:22162  _approve */\n      tag_124\n        /* \"contracts/cake.sol\":22154:22193  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"contracts/cake.sol\":22210:22214  true */\n      0x01\n        /* \"contracts/cake.sol\":22063:22221  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_120:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":21086:21184  function totalSupply() public override view returns (uint256) {... */\n    tag_46:\n        /* \"contracts/cake.sol\":21165:21177  _totalSupply */\n      sload(0x03)\n        /* \"contracts/cake.sol\":21086:21184  function totalSupply() public override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":29546:29668  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_48:\n        /* \"contracts/cake.sol\":29588:29668  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/cake.sol\":29546:29668  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/cake.sol\":22680:23066  function transferFrom(... */\n    tag_51:\n        /* \"contracts/cake.sol\":22808:22812  bool */\n      0x00\n        /* \"contracts/cake.sol\":22824:22860  _transfer(sender, recipient, amount) */\n      tag_127\n        /* \"contracts/cake.sol\":22834:22840  sender */\n      dup5\n        /* \"contracts/cake.sol\":22842:22851  recipient */\n      dup5\n        /* \"contracts/cake.sol\":22853:22859  amount */\n      dup5\n        /* \"contracts/cake.sol\":22824:22833  _transfer */\n      tag_128\n        /* \"contracts/cake.sol\":22824:22860  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/cake.sol\":22870:23038  _approve(... */\n      tag_129\n        /* \"contracts/cake.sol\":22892:22898  sender */\n      dup5\n        /* \"contracts/cake.sol\":22912:22924  _msgSender() */\n      tag_130\n        /* \"contracts/cake.sol\":22912:22922  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":22912:22924  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      tag_131\n        /* \"contracts/cake.sol\":22976:22982  amount */\n      dup6\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      data_037a800c383c8b41b7f30fd6fdbe6b4a969472a92c909c5e3a50fbad30140e2f\n      0x29\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":22938:22957  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":22938:22949  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":22938:22957  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/cake.sol\":22958:22970  _msgSender() */\n      tag_132\n        /* \"contracts/cake.sol\":22958:22968  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":22958:22970  _msgSender() */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":22938:22971  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      swap1\n        /* \"contracts/cake.sol\":22938:22975  _allowances[sender][_msgSender()].sub */\n      tag_133\n        /* \"contracts/cake.sol\":22938:23028  _allowances[sender][_msgSender()].sub(amount, 'CAKE20: transfer amount exceeds allowance') */\n      jump\t// in\n    tag_131:\n        /* \"contracts/cake.sol\":22870:22878  _approve */\n      tag_124\n        /* \"contracts/cake.sol\":22870:23038  _approve(... */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"contracts/cake.sol\":23055:23059  true */\n      0x01\n        /* \"contracts/cake.sol\":22680:23066  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":20782:20872  function decimals() public override view returns (uint8) {... */\n    tag_53:\n        /* \"contracts/cake.sol\":20856:20865  _decimals */\n      and(0xff, sload(0x06))\n        /* \"contracts/cake.sol\":20782:20872  function decimals() public override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":23461:23668  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_56:\n        /* \"contracts/cake.sol\":23541:23545  bool */\n      0x00\n        /* \"contracts/cake.sol\":23557:23640  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_121\n        /* \"contracts/cake.sol\":23566:23578  _msgSender() */\n      tag_137\n        /* \"contracts/cake.sol\":23566:23576  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":23566:23578  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/cake.sol\":23580:23587  spender */\n      dup5\n        /* \"contracts/cake.sol\":23589:23639  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_131\n        /* \"contracts/cake.sol\":23628:23638  addedValue */\n      dup6\n        /* \"contracts/cake.sol\":23589:23600  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":23589:23614  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/cake.sol\":23601:23613  _msgSender() */\n      tag_139\n        /* \"contracts/cake.sol\":23601:23611  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":23601:23613  _msgSender() */\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":23589:23614  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/cake.sol\":23589:23623  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/cake.sol\":23589:23627  _allowances[_msgSender()][spender].add */\n      tag_140\n        /* \"contracts/cake.sol\":23589:23639  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/cake.sol\":28440:28599  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_59:\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_142\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_143\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/cake.sol\":28511:28530  _mint(_to, _amount) */\n      tag_145\n        /* \"contracts/cake.sol\":28517:28520  _to */\n      dup3\n        /* \"contracts/cake.sol\":28522:28529  _amount */\n      dup3\n        /* \"contracts/cake.sol\":28511:28516  _mint */\n      tag_146\n        /* \"contracts/cake.sol\":28511:28530  _mint(_to, _amount) */\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":28567:28582  _delegates[_to] */\n      dup1\n      dup4\n      and\n        /* \"contracts/cake.sol\":28563:28564  0 */\n      0x00\n        /* \"contracts/cake.sol\":28567:28582  _delegates[_to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":28567:28577  _delegates */\n      0x07\n        /* \"contracts/cake.sol\":28567:28582  _delegates[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/cake.sol\":28540:28592  _moveDelegates(address(0), _delegates[_to], _amount) */\n      tag_147\n      swap3\n        /* \"contracts/cake.sol\":28567:28582  _delegates[_to] */\n      and\n        /* \"contracts/cake.sol\":28584:28591  _amount */\n      dup4\n        /* \"contracts/cake.sol\":28540:28554  _moveDelegates */\n      tag_148\n        /* \"contracts/cake.sol\":28540:28592  _moveDelegates(address(0), _delegates[_to], _amount) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/cake.sol\":28440:28599  function mint(address _to, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":30511:30654  function delegates(address delegator)... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":30626:30647  _delegates[delegator] */\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":30596:30603  address */\n      0x00\n        /* \"contracts/cake.sol\":30626:30647  _delegates[delegator] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":30626:30636  _delegates */\n      0x07\n        /* \"contracts/cake.sol\":30626:30647  _delegates[delegator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"contracts/cake.sol\":30511:30654  function delegates(address delegator)... */\n      jump\t// out\n        /* \"contracts/cake.sol\":30792:30894  function delegate(address delegatee) external {... */\n    tag_65:\n        /* \"contracts/cake.sol\":30855:30887  _delegate(msg.sender, delegatee) */\n      tag_151\n        /* \"contracts/cake.sol\":30865:30875  msg.sender */\n      caller\n        /* \"contracts/cake.sol\":30877:30886  delegatee */\n      dup3\n        /* \"contracts/cake.sol\":30855:30864  _delegate */\n      tag_152\n        /* \"contracts/cake.sol\":30855:30887  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/cake.sol\":30792:30894  function delegate(address delegatee) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":29427:29476  mapping (address => uint32) public numCheckpoints */\n    tag_68:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/cake.sol\":21242:21359  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":21334:21352  _balances[account] */\n      and\n        /* \"contracts/cake.sol\":21308:21315  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":21334:21352  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":21334:21343  _balances */\n      0x01\n        /* \"contracts/cake.sol\":21334:21352  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/cake.sol\":21242:21359  function balanceOf(address account) public override view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":2703:2840  function renounceOwnership() public onlyOwner {... */\n    tag_73:\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_155\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_156\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/cake.sol\":2801:2802  0 */\n      0x00\n        /* \"contracts/cake.sol\":2785:2791  _owner */\n      dup1\n      sload\n        /* \"contracts/cake.sol\":2764:2804  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":2785:2791  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/cake.sol\":2764:2804  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/cake.sol\":2801:2802  0 */\n      dup4\n      swap1\n        /* \"contracts/cake.sol\":2764:2804  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/cake.sol\":2831:2832  0 */\n      0x00\n        /* \"contracts/cake.sol\":2814:2833  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":2703:2840  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":33318:34535  function getPriorVotes(address account, uint blockNumber)... */\n    tag_76:\n        /* \"contracts/cake.sol\":33423:33430  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":33468:33480  block.number */\n      number\n        /* \"contracts/cake.sol\":33454:33465  blockNumber */\n      dup3\n        /* \"contracts/cake.sol\":33454:33480  blockNumber < block.number */\n      lt\n        /* \"contracts/cake.sol\":33446:33524  require(blockNumber < block.number, \"CAKE::getPriorVotes: not yet determined\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":33557:33580  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/cake.sol\":33535:33554  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/cake.sol\":33557:33580  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":33557:33571  numCheckpoints */\n      0x09\n        /* \"contracts/cake.sol\":33557:33580  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/cake.sol\":33594:33611  nCheckpoints == 0 */\n      dup1\n        /* \"contracts/cake.sol\":33590:33646  if (nCheckpoints == 0) {... */\n      tag_160\n      jumpi\n        /* \"contracts/cake.sol\":33634:33635  0 */\n      0x00\n        /* \"contracts/cake.sol\":33627:33635  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_120)\n        /* \"contracts/cake.sol\":33590:33646  if (nCheckpoints == 0) {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":33703:33723  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":33703:33714  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":33703:33723  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":33703:33741  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/cake.sol\":33724:33740  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/cake.sol\":33703:33741  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/cake.sol\":33703:33751  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/cake.sol\":33703:33766  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"contracts/cake.sol\":33699:33844  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_161\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":33789:33809  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":33789:33800  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":33789:33809  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"contracts/cake.sol\":33810:33826  nCheckpoints - 1 */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"contracts/cake.sol\":33789:33827  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/cake.sol\":33825:33826  1 */\n      0x01\n        /* \"contracts/cake.sol\":33789:33833  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n      swap1\n      pop\n        /* \"contracts/cake.sol\":33782:33833  return checkpoints[account][nCheckpoints - 1].votes */\n      jump(tag_120)\n        /* \"contracts/cake.sol\":33699:33844  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":33902:33922  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":33902:33913  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":33902:33922  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":33902:33925  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":33902:33935  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/cake.sol\":33902:33925  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/cake.sol\":33902:33935  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/cake.sol\":33902:33949  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/cake.sol\":33898:33984  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"contracts/cake.sol\":33972:33973  0 */\n      0x00\n        /* \"contracts/cake.sol\":33965:33973  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_120)\n        /* \"contracts/cake.sol\":33898:33984  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_162:\n        /* \"contracts/cake.sol\":33994:34006  uint32 lower */\n      0x00\n      not(0x00)\n        /* \"contracts/cake.sol\":34035:34051  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"contracts/cake.sol\":34061:34479  while (upper > lower) {... */\n    tag_163:\n        /* \"contracts/cake.sol\":34076:34081  lower */\n      dup2\n        /* \"contracts/cake.sol\":34068:34081  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/cake.sol\":34068:34073  upper */\n      dup2\n        /* \"contracts/cake.sol\":34068:34081  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/cake.sol\":34061:34479  while (upper > lower) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/cake.sol\":34139:34140  2 */\n      0x02\n        /* \"contracts/cake.sol\":34122:34135  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"contracts/cake.sol\":34121:34140  (upper - lower) / 2 */\n      0xffffffff\n      and\n      div\n        /* \"contracts/cake.sol\":34113:34140  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"contracts/cake.sol\":34181:34201  Checkpoint memory cp */\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":34204:34224  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":34204:34215  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":34204:34224  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":34204:34232  checkpoints[account][center] */\n      0xffffffff\n      dup1\n      dup7\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":34181:34232  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup1\n      dup3\n      mstore\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/cake.sol\":34250:34277  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"contracts/cake.sol\":34246:34469  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contracts/cake.sol\":34304:34312  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"contracts/cake.sol\":34297:34312  return cp.votes */\n      tag_120\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/cake.sol\":34246:34469  if (cp.fromBlock == blockNumber) {... */\n    tag_168:\n        /* \"contracts/cake.sol\":34337:34349  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/cake.sol\":34337:34363  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/cake.sol\":34333:34469  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/cake.sol\":34391:34397  center */\n      dup2\n        /* \"contracts/cake.sol\":34383:34397  lower = center */\n      swap4\n      pop\n        /* \"contracts/cake.sol\":34333:34469  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_171)\n    tag_170:\n        /* \"contracts/cake.sol\":34453:34454  1 */\n      0x01\n        /* \"contracts/cake.sol\":34444:34450  center */\n      dup3\n        /* \"contracts/cake.sol\":34444:34454  center - 1 */\n      sub\n        /* \"contracts/cake.sol\":34436:34454  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/cake.sol\":34333:34469  if (cp.fromBlock < blockNumber) {... */\n    tag_171:\n        /* \"contracts/cake.sol\":34061:34479  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_163)\n    tag_164:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":34495:34515  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":34495:34506  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":34495:34515  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":34495:34522  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/cake.sol\":34495:34528  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n      swap2\n      pop\n      pop\n        /* \"contracts/cake.sol\":33318:34535  function getPriorVotes(address account, uint blockNumber)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":29954:29993  mapping (address => uint) public nonces */\n    tag_79:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/cake.sol\":20480:20572  function getOwner() external override view returns (address) {... */\n    tag_81:\n        /* \"contracts/cake.sol\":20532:20539  address */\n      0x00\n        /* \"contracts/cake.sol\":20558:20565  owner() */\n      tag_173\n        /* \"contracts/cake.sol\":20558:20563  owner */\n      tag_83\n        /* \"contracts/cake.sol\":20558:20565  owner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/cake.sol\":20551:20565  return owner() */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":20480:20572  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":2080:2157  function owner() public view returns (address) {... */\n    tag_83:\n        /* \"contracts/cake.sol\":2118:2125  address */\n      0x00\n        /* \"contracts/cake.sol\":2144:2150  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/cake.sol\":2080:2157  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":20932:21026  function symbol() public override view returns (string memory) {... */\n    tag_85:\n        /* \"contracts/cake.sol\":21012:21019  _symbol */\n      0x05\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":20980:20993  string memory */\n      0x60\n      swap4\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/cake.sol\":21012:21019  _symbol */\n      swap1\n      swap2\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      dup4\n      add\n        /* \"contracts/cake.sol\":21012:21019  _symbol */\n      dup3\n        /* \"contracts/cake.sol\":21005:21019  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n        /* \"contracts/cake.sol\":24668:24795  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_92:\n        /* \"contracts/cake.sol\":24724:24728  bool */\n      0x00\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_180\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/cake.sol\":24740:24767  _mint(_msgSender(), amount) */\n      tag_183\n        /* \"contracts/cake.sol\":24746:24758  _msgSender() */\n      tag_184\n        /* \"contracts/cake.sol\":24746:24756  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":24746:24758  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/cake.sol\":24760:24766  amount */\n      dup4\n        /* \"contracts/cake.sol\":24740:24745  _mint */\n      tag_146\n        /* \"contracts/cake.sol\":24740:24767  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_183:\n      pop\n        /* \"contracts/cake.sol\":24784:24788  true */\n      0x01\n        /* \"contracts/cake.sol\":24668:24795  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":24155:24460  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_95:\n        /* \"contracts/cake.sol\":24240:24244  bool */\n      0x00\n        /* \"contracts/cake.sol\":24256:24432  _approve(... */\n      tag_121\n        /* \"contracts/cake.sol\":24278:24290  _msgSender() */\n      tag_187\n        /* \"contracts/cake.sol\":24278:24288  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":24278:24290  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/cake.sol\":24304:24311  spender */\n      dup5\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      tag_131\n        /* \"contracts/cake.sol\":24364:24379  subtractedValue */\n      dup6\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_7426a02a8645a4fc3fbe54503be0c6ef4e20d7e78f4110ed802fa144a020d321\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/cake.sol\":24325:24336  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":24325:24350  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/cake.sol\":24337:24349  _msgSender() */\n      tag_189\n        /* \"contracts/cake.sol\":24337:24347  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":24337:24349  _msgSender() */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":24325:24350  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/cake.sol\":24325:24359  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      swap1\n        /* \"contracts/cake.sol\":24325:24363  _allowances[_msgSender()][spender].sub */\n      tag_133\n        /* \"contracts/cake.sol\":24325:24422  _allowances[_msgSender()][spender].sub(subtractedValue, 'CAKE20: decreased allowance below zero') */\n      jump\t// in\n        /* \"contracts/cake.sol\":21562:21726  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_98:\n        /* \"contracts/cake.sol\":21640:21644  bool */\n      0x00\n        /* \"contracts/cake.sol\":21656:21698  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"contracts/cake.sol\":21666:21678  _msgSender() */\n      tag_192\n        /* \"contracts/cake.sol\":21666:21676  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":21666:21678  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/cake.sol\":21680:21689  recipient */\n      dup5\n        /* \"contracts/cake.sol\":21691:21697  amount */\n      dup5\n        /* \"contracts/cake.sol\":21656:21665  _transfer */\n      tag_128\n        /* \"contracts/cake.sol\":21656:21698  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/cake.sol\":32648:32896  function getCurrentVotes(address account)... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":32782:32805  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/cake.sol\":32737:32744  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":32782:32805  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":32782:32796  numCheckpoints */\n      0x09\n        /* \"contracts/cake.sol\":32782:32805  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/cake.sol\":32822:32838  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/cake.sol\":32822:32889  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_194\n      jumpi\n        /* \"contracts/cake.sol\":32888:32889  0 */\n      0x00\n        /* \"contracts/cake.sol\":32822:32889  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_195)\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":32841:32861  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":32841:32852  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":32841:32861  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":32841:32879  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/cake.sol\":32862:32878  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/cake.sol\":32841:32879  checkpoints[account][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":32877:32878  1 */\n      0x01\n        /* \"contracts/cake.sol\":32841:32885  checkpoints[account][nCheckpoints - 1].votes */\n      add\n      sload\n        /* \"contracts/cake.sol\":32822:32889  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_195:\n        /* \"contracts/cake.sol\":32815:32889  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap4\n        /* \"contracts/cake.sol\":32648:32896  function getCurrentVotes(address account)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":31317:32454  function delegateBySig(... */\n    tag_104:\n        /* \"contracts/cake.sol\":31500:31523  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/cake.sol\":29588:29668  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/cake.sol\":31626:31632  name() */\n      tag_197\n        /* \"contracts/cake.sol\":31626:31630  name */\n      tag_37\n        /* \"contracts/cake.sol\":31626:31632  name() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/cake.sol\":31610:31634  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/cake.sol\":31652:31664  getChainId() */\n      tag_198\n        /* \"contracts/cake.sol\":31652:31662  getChainId */\n      tag_199\n        /* \"contracts/cake.sol\":31652:31664  getChainId() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/cake.sol\":31549:31709  abi.encode(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      dup1\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x60\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/cake.sol\":31690:31694  this */\n      address\n        /* \"contracts/cake.sol\":31549:31709  abi.encode(... */\n      0x80\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0xa0\n      dup4\n      add\n      dup3\n      mstore\n        /* \"contracts/cake.sol\":31526:31719  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup5\n      add\n      keccak256\n        /* \"contracts/cake.sol\":29805:29876  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/cake.sol\":31774:31909  abi.encode(... */\n      0xc0\n      dup5\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      0xe0\n      dup5\n      add\n      mstore\n      0x0100\n      dup4\n      add\n      dup11\n      swap1\n      mstore\n      0x0120\n      dup1\n      dup5\n      add\n      dup11\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup6\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x0140\n      dup5\n      add\n      dup4\n      mstore\n        /* \"contracts/cake.sol\":31751:31919  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup6\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/cake.sol\":31970:32089  abi.encodePacked(... */\n      0x0160\n      dup6\n      add\n      mstore\n      0x0162\n      dup5\n      add\n      dup3\n      swap1\n      mstore\n      0x0182\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup7\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x01a2\n      dup6\n      add\n      dup1\n      dup6\n      mstore\n        /* \"contracts/cake.sol\":31947:32099  keccak256(... */\n      dup2\n      mload\n      swap2\n      dup8\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      0x00\n        /* \"contracts/cake.sol\":32130:32156  ecrecover(digest, v, r, s) */\n      swap2\n      dup3\n      swap1\n      mstore\n      0x01c2\n      dup7\n      add\n      dup1\n      dup7\n      mstore\n      dup2\n      swap1\n      mstore\n      0xff\n      dup12\n      and\n      0x01e2\n      dup8\n      add\n      mstore\n      0x0202\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      0x0222\n      dup7\n      add\n      dup10\n      swap1\n      mstore\n      swap4\n      mload\n        /* \"contracts/cake.sol\":31526:31719  keccak256(... */\n      swap3\n      swap7\n      pop\n        /* \"contracts/cake.sol\":31751:31919  keccak256(... */\n      swap1\n      swap5\n        /* \"contracts/cake.sol\":31947:32099  keccak256(... */\n      swap3\n      swap4\n      swap1\n      swap3\n        /* \"contracts/cake.sol\":32130:32156  ecrecover(digest, v, r, s) */\n      0x01\n      swap3\n      0x0242\n      dup1\n      dup5\n      add\n      swap4\n      not(0x1f)\n      dup4\n      add\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":32174:32197  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/cake.sol\":32166:32240  require(signatory != address(0), \"CAKE::delegateBySig: invalid signature\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":32267:32284  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":32267:32273  nonces */\n      0x0a\n        /* \"contracts/cake.sol\":32267:32284  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":32267:32286  nonces[signatory]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/cake.sol\":32258:32286  nonce == nonces[signatory]++ */\n      dup10\n      eq\n        /* \"contracts/cake.sol\":32250:32325  require(nonce == nonces[signatory]++, \"CAKE::delegateBySig: invalid nonce\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/cake.sol\":32350:32356  expiry */\n      dup8\n        /* \"contracts/cake.sol\":32343:32346  now */\n      timestamp\n        /* \"contracts/cake.sol\":32343:32356  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/cake.sol\":32335:32399  require(now <= expiry, \"CAKE::delegateBySig: signature expired\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/cake.sol\":32416:32447  _delegate(signatory, delegatee) */\n      tag_205\n        /* \"contracts/cake.sol\":32426:32435  signatory */\n      dup2\n        /* \"contracts/cake.sol\":32437:32446  delegatee */\n      dup12\n        /* \"contracts/cake.sol\":32416:32425  _delegate */\n      tag_152\n        /* \"contracts/cake.sol\":32416:32447  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/cake.sol\":32409:32447  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/cake.sol\":31317:32454  function delegateBySig(... */\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":21784:21925  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":21891:21909  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/cake.sol\":21865:21872  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":21891:21909  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":21891:21902  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":21891:21909  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":21891:21918  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/cake.sol\":21784:21925  function allowance(address owner, address spender) public override view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":29759:29876  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_109:\n        /* \"contracts/cake.sol\":29805:29876  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/cake.sol\":29759:29876  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/cake.sol\":29291:29361  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_112:\n      0x08\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      0xffffffff\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"contracts/cake.sol\":2989:3096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_115:\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      tag_208\n        /* \"contracts/cake.sol\":2294:2304  _msgSender */\n      tag_123\n        /* \"contracts/cake.sol\":2294:2306  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/cake.sol\":2284:2290  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/cake.sol\":2284:2306  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/cake.sol\":2276:2343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_209\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/cake.sol\":3061:3089  _transferOwnership(newOwner) */\n      tag_151\n        /* \"contracts/cake.sol\":3080:3088  newOwner */\n      dup2\n        /* \"contracts/cake.sol\":3061:3079  _transferOwnership */\n      tag_212\n        /* \"contracts/cake.sol\":3061:3089  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\n    tag_123:\n        /* \"contracts/cake.sol\":849:859  msg.sender */\n      caller\n        /* \"contracts/cake.sol\":770:866  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":27427:27791  function _approve(... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":27550:27569  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/cake.sol\":27542:27611  require(owner != address(0), 'CAKE20: approve from the zero address') */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c8a22d3b0f46cb8553e794906ffc1b6e8656f593e72d64cb7102cb1f934afaf6\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":27629:27650  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/cake.sol\":27621:27690  require(spender != address(0), 'CAKE20: approve to the zero address') */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_818980e094d98e32545e5a09b38cf4334a5aa9765c6adbd223fdb87d9a48dd60\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":27701:27719  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":27701:27712  _allowances */\n      0x02\n        /* \"contracts/cake.sol\":27701:27719  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":27701:27728  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":27701:27737  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":27752:27784  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/cake.sol\":27427:27791  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":25269:25766  function _transfer(... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25396:25416  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/cake.sol\":25388:25459  require(sender != address(0), 'CAKE20: transfer from the zero address') */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9f602c3ca62830526fb39312611c26f66e9439b2bdd3e2c3a3e2a522717508c4\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25477:25500  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/cake.sol\":25469:25541  require(recipient != address(0), 'CAKE20: transfer to the zero address') */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ac1d5373694637d2969063be6d0102dc19599842fefc49d9b9656600338f4bd7\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      tag_220\n        /* \"contracts/cake.sol\":25594:25600  amount */\n      dup2\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_6883c37a4c18e68948a3674af93a21b6c0026d301016300c1e6da51f1448eb28\n      0x27\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25572:25589  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":25572:25581  _balances */\n      0x01\n        /* \"contracts/cake.sol\":25572:25589  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      swap1\n        /* \"contracts/cake.sol\":25572:25593  _balances[sender].sub */\n      tag_133\n        /* \"contracts/cake.sol\":25572:25644  _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25552:25569  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":25552:25561  _balances */\n      0x01\n        /* \"contracts/cake.sol\":25552:25569  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/cake.sol\":25552:25644  _balances[sender] = _balances[sender].sub(amount, 'CAKE20: transfer amount exceeds balance') */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/cake.sol\":25677:25697  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/cake.sol\":25677:25709  _balances[recipient].add(amount) */\n      tag_221\n      swap1\n        /* \"contracts/cake.sol\":25702:25708  amount */\n      dup3\n        /* \"contracts/cake.sol\":25677:25701  _balances[recipient].add */\n      tag_140\n        /* \"contracts/cake.sol\":25677:25709  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":25654:25674  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":25654:25663  _balances */\n      0x01\n        /* \"contracts/cake.sol\":25654:25674  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":25654:25709  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/cake.sol\":25724:25759  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/cake.sol\":25654:25674  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/cake.sol\":25724:25759  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/cake.sol\":25269:25766  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":8178:8395  function sub(... */\n    tag_133:\n        /* \"contracts/cake.sol\":8294:8301  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":8329:8341  errorMessage */\n      dup2\n        /* \"contracts/cake.sol\":8321:8327  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/cake.sol\":8313:8342  require(b <= a, errorMessage) */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_224:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_226\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_224)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_227\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_227:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n        /* \"contracts/cake.sol\":8364:8369  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/cake.sol\":8178:8395  function sub(... */\n      jump\t// out\n        /* \"contracts/cake.sol\":7306:7482  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"contracts/cake.sol\":7364:7371  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":7395:7400  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/cake.sol\":7418:7424  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/cake.sol\":7410:7456  require(c >= a, 'SafeMath: addition overflow') */\n      tag_195\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/cake.sol\":26036:26339  function _mint(address account, uint256 amount) internal {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":26111:26132  account != address(0) */\n      dup3\n      and\n        /* \"contracts/cake.sol\":26103:26169  require(account != address(0), 'CAKE20: mint to the zero address') */\n      tag_231\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x43414b4532303a206d696e7420746f20746865207a65726f2061646472657373\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/cake.sol\":26195:26207  _totalSupply */\n      sload(0x03)\n        /* \"contracts/cake.sol\":26195:26219  _totalSupply.add(amount) */\n      tag_232\n      swap1\n        /* \"contracts/cake.sol\":26212:26218  amount */\n      dup3\n        /* \"contracts/cake.sol\":26195:26211  _totalSupply.add */\n      tag_140\n        /* \"contracts/cake.sol\":26195:26219  _totalSupply.add(amount) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/cake.sol\":26180:26192  _totalSupply */\n      0x03\n        /* \"contracts/cake.sol\":26180:26219  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":26250:26268  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":26250:26259  _balances */\n      0x01\n        /* \"contracts/cake.sol\":26250:26268  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/cake.sol\":26250:26280  _balances[account].add(amount) */\n      tag_233\n      swap1\n        /* \"contracts/cake.sol\":26273:26279  amount */\n      dup3\n        /* \"contracts/cake.sol\":26250:26272  _balances[account].add */\n      tag_140\n        /* \"contracts/cake.sol\":26250:26280  _balances[account].add(amount) */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":26229:26247  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":26229:26238  _balances */\n      0x01\n        /* \"contracts/cake.sol\":26229:26247  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":26229:26280  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/cake.sol\":26295:26332  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/cake.sol\":26229:26247  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/cake.sol\":26295:26332  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/cake.sol\":26036:26339  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":34975:35904  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n    tag_148:\n        /* \"contracts/cake.sol\":35080:35086  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35070:35086  srcRep != dstRep */\n      and\n        /* \"contracts/cake.sol\":35070:35076  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35070:35086  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/cake.sol\":35070:35100  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/cake.sol\":35099:35100  0 */\n      0x00\n        /* \"contracts/cake.sol\":35090:35096  amount */\n      dup2\n        /* \"contracts/cake.sol\":35090:35100  amount > 0 */\n      gt\n        /* \"contracts/cake.sol\":35070:35100  srcRep != dstRep && amount > 0 */\n    tag_235:\n        /* \"contracts/cake.sol\":35066:35898  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_244\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35120:35140  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/cake.sol\":35116:35495  if (srcRep != address(0)) {... */\n      tag_237\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35226:35248  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/cake.sol\":35207:35223  uint32 srcRepNum */\n      0x00\n        /* \"contracts/cake.sol\":35226:35248  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":35226:35240  numCheckpoints */\n      0x09\n        /* \"contracts/cake.sol\":35226:35248  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/cake.sol\":35286:35299  srcRepNum > 0 */\n      dup2\n        /* \"contracts/cake.sol\":35286:35346  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_238\n      jumpi\n        /* \"contracts/cake.sol\":35345:35346  0 */\n      0x00\n        /* \"contracts/cake.sol\":35286:35346  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_239)\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35302:35321  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":35302:35313  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":35302:35321  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":35302:35336  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/cake.sol\":35322:35335  srcRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/cake.sol\":35302:35336  checkpoints[srcRep][srcRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":35334:35335  1 */\n      0x01\n        /* \"contracts/cake.sol\":35302:35342  checkpoints[srcRep][srcRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/cake.sol\":35286:35346  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_239:\n        /* \"contracts/cake.sol\":35266:35346  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":35364:35381  uint256 srcRepNew */\n      0x00\n        /* \"contracts/cake.sol\":35384:35405  srcRepOld.sub(amount) */\n      tag_240\n        /* \"contracts/cake.sol\":35266:35346  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      dup3\n        /* \"contracts/cake.sol\":35398:35404  amount */\n      dup6\n        /* \"contracts/cake.sol\":35384:35397  srcRepOld.sub */\n      tag_241\n        /* \"contracts/cake.sol\":35384:35405  srcRepOld.sub(amount) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/cake.sol\":35364:35405  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":35423:35480  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_242\n        /* \"contracts/cake.sol\":35440:35446  srcRep */\n      dup7\n        /* \"contracts/cake.sol\":35448:35457  srcRepNum */\n      dup5\n        /* \"contracts/cake.sol\":35459:35468  srcRepOld */\n      dup5\n        /* \"contracts/cake.sol\":35470:35479  srcRepNew */\n      dup5\n        /* \"contracts/cake.sol\":35423:35439  _writeCheckpoint */\n      tag_243\n        /* \"contracts/cake.sol\":35423:35480  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/cake.sol\":35116:35495  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35513:35533  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/cake.sol\":35509:35888  if (dstRep != address(0)) {... */\n      tag_244\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35619:35641  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/cake.sol\":35600:35616  uint32 dstRepNum */\n      0x00\n        /* \"contracts/cake.sol\":35619:35641  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":35619:35633  numCheckpoints */\n      0x09\n        /* \"contracts/cake.sol\":35619:35641  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/cake.sol\":35679:35692  dstRepNum > 0 */\n      dup2\n        /* \"contracts/cake.sol\":35679:35739  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_245\n      jumpi\n        /* \"contracts/cake.sol\":35738:35739  0 */\n      0x00\n        /* \"contracts/cake.sol\":35679:35739  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_246)\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":35695:35714  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":35695:35706  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":35695:35714  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":35695:35729  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/cake.sol\":35715:35728  dstRepNum - 1 */\n      dup8\n      add\n        /* \"contracts/cake.sol\":35695:35729  checkpoints[dstRep][dstRepNum - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":35727:35728  1 */\n      0x01\n        /* \"contracts/cake.sol\":35695:35735  checkpoints[dstRep][dstRepNum - 1].votes */\n      add\n      sload\n        /* \"contracts/cake.sol\":35679:35739  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_246:\n        /* \"contracts/cake.sol\":35659:35739  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":35757:35774  uint256 dstRepNew */\n      0x00\n        /* \"contracts/cake.sol\":35777:35798  dstRepOld.add(amount) */\n      tag_247\n        /* \"contracts/cake.sol\":35659:35739  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      dup3\n        /* \"contracts/cake.sol\":35791:35797  amount */\n      dup6\n        /* \"contracts/cake.sol\":35777:35790  dstRepOld.add */\n      tag_140\n        /* \"contracts/cake.sol\":35777:35798  dstRepOld.add(amount) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/cake.sol\":35757:35798  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":35816:35873  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_196\n        /* \"contracts/cake.sol\":35833:35839  dstRep */\n      dup6\n        /* \"contracts/cake.sol\":35841:35850  dstRepNum */\n      dup5\n        /* \"contracts/cake.sol\":35852:35861  dstRepOld */\n      dup5\n        /* \"contracts/cake.sol\":35863:35872  dstRepNew */\n      dup5\n        /* \"contracts/cake.sol\":35816:35832  _writeCheckpoint */\n      tag_243\n        /* \"contracts/cake.sol\":35816:35873  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/cake.sol\":35509:35888  if (dstRep != address(0)) {... */\n    tag_244:\n        /* \"contracts/cake.sol\":34975:35904  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":34541:34969  function _delegate(address delegator, address delegatee)... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":34655:34676  _delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"contracts/cake.sol\":34629:34652  address currentDelegate */\n      0x00\n        /* \"contracts/cake.sol\":34655:34676  _delegates[delegator] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":34655:34665  _delegates */\n      0x07\n        /* \"contracts/cake.sol\":34655:34676  _delegates[delegator] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/cake.sol\":34713:34733  balanceOf(delegator) */\n      tag_250\n        /* \"contracts/cake.sol\":34666:34675  delegator */\n      dup5\n        /* \"contracts/cake.sol\":34713:34722  balanceOf */\n      tag_71\n        /* \"contracts/cake.sol\":34713:34733  balanceOf(delegator) */\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":34788:34809  _delegates[delegator] */\n      dup6\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":34788:34798  _delegates */\n      0x07\n        /* \"contracts/cake.sol\":34788:34809  _delegates[delegator] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/cake.sol\":34788:34821  _delegates[delegator] = delegatee */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup10\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/cake.sol\":34837:34891  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/cake.sol\":34686:34733  uint256 delegatorBalance = balanceOf(delegator) */\n      swap5\n      swap6\n      pop\n        /* \"contracts/cake.sol\":34788:34821  _delegates[delegator] = delegatee */\n      swap4\n        /* \"contracts/cake.sol\":34837:34891  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap3\n      dup7\n      and\n      swap3\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/cake.sol\":34788:34809  _delegates[delegator] */\n      swap1\n        /* \"contracts/cake.sol\":34837:34891  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/cake.sol\":34902:34962  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_251\n        /* \"contracts/cake.sol\":34917:34932  currentDelegate */\n      dup3\n        /* \"contracts/cake.sol\":34934:34943  delegatee */\n      dup5\n        /* \"contracts/cake.sol\":34945:34961  delegatorBalance */\n      dup4\n        /* \"contracts/cake.sol\":34902:34916  _moveDelegates */\n      tag_148\n        /* \"contracts/cake.sol\":34902:34962  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/cake.sol\":34541:34969  function _delegate(address delegator, address delegatee)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":36766:36915  function getChainId() internal pure returns (uint) {... */\n    tag_199:\n        /* \"contracts/cake.sol\":36874:36883  chainid() */\n      chainid\n        /* \"contracts/cake.sol\":36766:36915  function getChainId() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cake.sol\":3197:3422  function _transferOwnership(address newOwner) internal {... */\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":3270:3292  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/cake.sol\":3262:3335  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/cake.sol\":3371:3377  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/cake.sol\":3350:3388  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/cake.sol\":3371:3377  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/cake.sol\":3350:3388  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/cake.sol\":3398:3404  _owner */\n      0x00\n        /* \"contracts/cake.sol\":3398:3415  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":3197:3422  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"contracts/cake.sol\":7753:7887  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_241:\n        /* \"contracts/cake.sol\":7811:7818  uint256 */\n      0x00\n        /* \"contracts/cake.sol\":7837:7880  sub(a, b, 'SafeMath: subtraction overflow') */\n      tag_195\n        /* \"contracts/cake.sol\":7841:7842  a */\n      dup4\n        /* \"contracts/cake.sol\":7844:7845  b */\n      dup4\n        /* \"contracts/cake.sol\":7837:7880  sub(a, b, 'SafeMath: subtraction overflow') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/cake.sol\":7837:7840  sub */\n      tag_133\n        /* \"contracts/cake.sol\":7837:7880  sub(a, b, 'SafeMath: subtraction overflow') */\n      jump\t// in\n        /* \"contracts/cake.sol\":35910:36596  function _writeCheckpoint(... */\n    tag_243:\n        /* \"contracts/cake.sol\":36081:36099  uint32 blockNumber */\n      0x00\n        /* \"contracts/cake.sol\":36102:36178  safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_258\n        /* \"contracts/cake.sol\":36109:36121  block.number */\n      number\n        /* \"contracts/cake.sol\":36102:36178  safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      data_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f\n      0x34\n      swap2\n      codecopy\n        /* \"contracts/cake.sol\":36102:36108  safe32 */\n      tag_259\n        /* \"contracts/cake.sol\":36102:36178  safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_258:\n        /* \"contracts/cake.sol\":36081:36178  uint32 blockNumber = safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/cake.sol\":36208:36209  0 */\n      0x00\n        /* \"contracts/cake.sol\":36193:36205  nCheckpoints */\n      dup5\n        /* \"contracts/cake.sol\":36193:36209  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/cake.sol\":36193:36278  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":36213:36235  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":36213:36224  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":36213:36235  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":36213:36278  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/cake.sol\":36236:36252  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/cake.sol\":36213:36253  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/cake.sol\":36213:36263  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"contracts/cake.sol\":36213:36278  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup3\n      dup3\n      and\n        /* \"contracts/cake.sol\":36213:36263  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      swap2\n      and\n        /* \"contracts/cake.sol\":36213:36278  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/cake.sol\":36193:36278  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_260:\n        /* \"contracts/cake.sol\":36189:36523  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_261\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":36294:36316  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":36294:36305  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":36294:36316  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/cake.sol\":36294:36334  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/cake.sol\":36317:36333  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/cake.sol\":36294:36334  checkpoints[delegatee][nCheckpoints - 1] */\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":36332:36333  1 */\n      0x01\n        /* \"contracts/cake.sol\":36294:36340  checkpoints[delegatee][nCheckpoints - 1].votes */\n      add\n        /* \"contracts/cake.sol\":36294:36351  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":36189:36523  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_262)\n    tag_261:\n        /* \"contracts/cake.sol\":36421:36454  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/cake.sol\":36382:36404  checkpoints[delegatee] */\n      dup11\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":36382:36393  checkpoints */\n      0x08\n        /* \"contracts/cake.sol\":36382:36404  checkpoints[delegatee] */\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/cake.sol\":36382:36418  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      dup5\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"contracts/cake.sol\":36382:36454  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap6\n      mload\n      dup7\n      sload\n      swap1\n      dup7\n      and\n      not(0xffffffff)\n      swap2\n      dup3\n      and\n      or\n      dup8\n      sstore\n      swap3\n      mload\n      0x01\n      swap7\n      dup8\n      add\n      sstore\n        /* \"contracts/cake.sol\":36468:36493  numCheckpoints[delegatee] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/cake.sol\":36468:36482  numCheckpoints */\n      0x09\n        /* \"contracts/cake.sol\":36468:36493  numCheckpoints[delegatee] */\n      swap1\n      swap3\n      mstore\n      swap4\n      swap1\n      keccak256\n        /* \"contracts/cake.sol\":36468:36512  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n        /* \"contracts/cake.sol\":36496:36512  nCheckpoints + 1 */\n      swap3\n      dup9\n      add\n        /* \"contracts/cake.sol\":36468:36512  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/cake.sol\":36189:36523  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_262:\n        /* \"contracts/cake.sol\":36538:36589  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap3\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/cake.sol\":35910:36596  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cake.sol\":36602:36760  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_259:\n        /* \"contracts/cake.sol\":36677:36683  uint32 */\n      0x00\n        /* \"contracts/cake.sol\":36714:36726  errorMessage */\n      dup2\n        /* \"contracts/cake.sol\":36707:36712  2**32 */\n      0x0100000000\n        /* \"contracts/cake.sol\":36703:36712  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/cake.sol\":36695:36727  require(n < 2**32, errorMessage) */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_226\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_224)\n    tag_264:\n      pop\n        /* \"contracts/cake.sol\":36751:36752  n */\n      swap2\n      swap3\n        /* \"contracts/cake.sol\":36602:36760  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_167:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_037a800c383c8b41b7f30fd6fdbe6b4a969472a92c909c5e3a50fbad30140e2f 43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb 43414b453a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_6883c37a4c18e68948a3674af93a21b6c0026d301016300c1e6da51f1448eb28 43414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_7426a02a8645a4fc3fbe54503be0c6ef4e20d7e78f4110ed802fa144a020d321 43414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_818980e094d98e32545e5a09b38cf4334a5aa9765c6adbd223fdb87d9a48dd60 43414b4532303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa 43414b453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_9f602c3ca62830526fb39312611c26f66e9439b2bdd3e2c3a3e2a522717508c4 43414b4532303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f 43414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474 43414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f 43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_ac1d5373694637d2969063be6d0102dc19599842fefc49d9b9656600338f4bd7 43414b4532303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_c8a22d3b0f46cb8553e794906ffc1b6e8656f593e72d64cb7102cb1f934afaf6 43414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa264697066735822122083ce4653c435476e5fc94dfd59b7a42e08c4a511349bbe8bf737d8520327b67964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x2830B731B0B5B2A9BBB0B8102A37B5B2B7 PUSH1 0x79 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x43616B65 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH1 0x0 PUSH3 0x6B PUSH3 0xF6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP2 MLOAD PUSH3 0xCA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xFA JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xE0 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xFA JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x196 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x13D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x16D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x16D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x16D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x150 JUMP JUMPDEST POP PUSH3 0x17B SWAP3 SWAP2 POP PUSH3 0x17F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x180 JUMP JUMPDEST PUSH2 0x1B8A DUP1 PUSH3 0x1A6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E4 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x515 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x497 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x462 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x408 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x33B JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86F JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x894 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x951 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x361 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x361 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBEA JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x273 PUSH2 0xFDB JUMP JUMPDEST PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x679 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0x6AD PUSH2 0x108D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1091 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 DUP5 DUP5 DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x765 DUP5 PUSH2 0x701 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x760 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x193E PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x73F PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0x785 PUSH2 0x108D JUMP JUMPDEST DUP5 PUSH2 0x760 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x796 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP3 DUP3 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x84D SWAP3 AND DUP4 PUSH2 0x14A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x879 CALLER DUP3 PUSH2 0x15E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AC3 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x9BF JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xA2E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xB22 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xA9B PUSH2 0x1926 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xAFD JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x6B8 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xB14 JUMPI DUP2 SWAP4 POP PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xA71 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB75 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC44 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC55 PUSH2 0xC4F PUSH2 0x108D JUMP JUMPDEST DUP4 PUSH2 0x13C0 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0xC6A PUSH2 0x108D JUMP JUMPDEST DUP5 PUSH2 0x760 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19DA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC94 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0xCD2 PUSH2 0x108D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xD04 JUMPI PUSH1 0x0 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xD68 PUSH2 0x60A JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD77 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A23 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AEA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x198D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA3 DUP2 DUP12 PUSH2 0x15E8 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1034 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1084 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x1681 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B30 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x111B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A00 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A69 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B0C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1244 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B3 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1273 SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1323 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x130B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1350 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x141B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414B4532303A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1428 SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x144E SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x14C8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x155A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1508 JUMPI PUSH1 0x0 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1548 DUP3 DUP6 PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0x1556 DUP7 DUP5 DUP5 DUP5 PUSH2 0x1763 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1595 JUMPI PUSH1 0x0 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15D5 DUP3 DUP6 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA8 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1763 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x160F DUP5 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1677 DUP3 DUP5 DUP4 PUSH2 0x14A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1967 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1787 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8F PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x18C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x17D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x180D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x191E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1323 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x130B JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E63654F776E61626C653A206E PUSH6 0x77206F776E65 PUSH19 0x20697320746865207A65726F20616464726573 PUSH20 0x43414B453A3A64656C656761746542795369673A KECCAK256 PUSH20 0x69676E6174757265206578706972656443414B45 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636543414B4532303A2064656372 PUSH6 0x617365642061 PUSH13 0x6C6F77616E63652062656C6F77 KECCAK256 PUSH27 0x65726F43414B4532303A20617070726F766520746F20746865207A PUSH6 0x726F20616464 PUSH19 0x65737343414B453A3A64656C65676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH20 0x69676E61747572654F776E61626C653A2063616C PUSH13 0x6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E657243414B4532303A207472616E PUSH20 0x6665722066726F6D20746865207A65726F206164 PUSH5 0x7265737343 COINBASE 0x4B GASLIMIT GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 NUMBER COINBASE 0x4B GASLIMIT GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 NUMBER COINBASE 0x4B GASLIMIT GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xCE CHAINID MSTORE8 0xC4 CALLDATALOAD SELFBALANCE PUSH15 0x5FC94DFD59B7A42E08C4A511349BBE DUP12 0xF7 CALLDATACOPY 0xD8 MSTORE SUB 0x27 0xB6 PUSH26 0x64736F6C634300060C0033000000000000000000000000000000 ",
							"sourceMap": "28279:8638:0:-:0;;;;;;;;;;;;;20276:140;;;;;;;;;;;;;-1:-1:-1;;;20276:140:0;;;;;;;;;;;;;;;;-1:-1:-1;;;20276:140:0;;;1879:17;1899:12;:10;;;:12;;:::i;:::-;1921:6;:18;;-1:-1:-1;;;;;;1921:18:0;-1:-1:-1;;;;;1921:18:0;;;;;;;1954:43;;1921:18;;-1:-1:-1;1921:18:0;1954:43;;1921:6;;1954:43;-1:-1:-1;20347:12:0;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;20369:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;20395:9:0;:14;;-1:-1:-1;;20395:14:0;20407:2;20395:14;;;-1:-1:-1;28279:8638:0;;770:96;849:10;770:96;:::o;28279:8638::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28279:8638:0;;;-1:-1:-1;28279:8638:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c8063782d6fe1116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461055c578063e7a324dc1461058a578063f1127ed814610592578063f2fde38b146105e4576101a9565b8063a9059cbb146104c3578063b4b5ea57146104ef578063c3cda52014610515576101a9565b80638da5cb5b116100d35780638da5cb5b1461046a57806395d89b4114610472578063a0712d681461047a578063a457c2d714610497576101a9565b8063782d6fe1146104105780637ecebe001461043c578063893d20e814610462576101a9565b806339509351116101665780635c19a95c116101405780635c19a95c1461037d5780636fcfff45146103a357806370a08231146103e2578063715018a614610408576101a9565b806339509351146102e157806340c10f191461030d578063587cde1e1461033b576101a9565b806306fdde03146101ae578063095ea7b31461022b57806318160ddd1461026b57806320606b701461028557806323b872dd1461028d578063313ce567146102c3575b600080fd5b6101b661060a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101f05781810151838201526020016101d8565b50505050905090810190601f16801561021d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102576004803603604081101561024157600080fd5b506001600160a01b0381351690602001356106a0565b604080519115158252519081900360200190f35b6102736106be565b60408051918252519081900360200190f35b6102736106c4565b610257600480360360608110156102a357600080fd5b506001600160a01b038135811691602081013590911690604001356106e8565b6102cb61076f565b6040805160ff9092168252519081900360200190f35b610257600480360360408110156102f757600080fd5b506001600160a01b038135169060200135610778565b6103396004803603604081101561032357600080fd5b506001600160a01b0381351690602001356107c6565b005b6103616004803603602081101561035157600080fd5b50356001600160a01b0316610851565b604080516001600160a01b039092168252519081900360200190f35b6103396004803603602081101561039357600080fd5b50356001600160a01b031661086f565b6103c9600480360360208110156103b957600080fd5b50356001600160a01b031661087c565b6040805163ffffffff9092168252519081900360200190f35b610273600480360360208110156103f857600080fd5b50356001600160a01b0316610894565b6103396108af565b6102736004803603604081101561042657600080fd5b506001600160a01b038135169060200135610951565b6102736004803603602081101561045257600080fd5b50356001600160a01b0316610b59565b610361610b6b565b610361610b7a565b6101b6610b89565b6102576004803603602081101561049057600080fd5b5035610bea565b610257600480360360408110156104ad57600080fd5b506001600160a01b038135169060200135610c5d565b610257600480360360408110156104d957600080fd5b506001600160a01b038135169060200135610cc5565b6102736004803603602081101561050557600080fd5b50356001600160a01b0316610cd9565b610339600480360360c081101561052b57600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610d3d565b6102736004803603604081101561057257600080fd5b506001600160a01b0381358116916020013516610fb0565b610273610fdb565b6105c4600480360360408110156105a857600080fd5b5080356001600160a01b0316906020013563ffffffff16610fff565b6040805163ffffffff909316835260208301919091528051918290030190f35b610339600480360360208110156105fa57600080fd5b50356001600160a01b031661102c565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b5050505050905090565b60006106b46106ad61108d565b8484611091565b5060015b92915050565b60035490565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b60006106f584848461117d565b6107658461070161108d565b6107608560405180606001604052806029815260200161193e602991396001600160a01b038a1660009081526002602052604081209061073f61108d565b6001600160a01b0316815260208101919091526040016000205491906112cf565b611091565b5060019392505050565b60065460ff1690565b60006106b461078561108d565b84610760856002600061079661108d565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611366565b6107ce61108d565b6000546001600160a01b0390811691161461081e576040805162461bcd60e51b81526020600482018190526024820152600080516020611a49833981519152604482015290519081900360640190fd5b61082882826113c0565b6001600160a01b0380831660009081526007602052604081205461084d9216836114a6565b5050565b6001600160a01b039081166000908152600760205260409020541690565b61087933826115e8565b50565b60096020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526001602052604090205490565b6108b761108d565b6000546001600160a01b03908116911614610907576040805162461bcd60e51b81526020600482018190526024820152600080516020611a49833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60004382106109915760405162461bcd60e51b8152600401808060200182810382526027815260200180611ac36027913960400191505060405180910390fd5b6001600160a01b03831660009081526009602052604090205463ffffffff16806109bf5760009150506106b8565b6001600160a01b038416600090815260086020908152604080832063ffffffff600019860181168552925290912054168310610a2e576001600160a01b03841660009081526008602090815260408083206000199490940163ffffffff168352929052206001015490506106b8565b6001600160a01b038416600090815260086020908152604080832083805290915290205463ffffffff16831015610a695760009150506106b8565b600060001982015b8163ffffffff168163ffffffff161115610b2257600282820363ffffffff16048103610a9b611926565b506001600160a01b038716600090815260086020908152604080832063ffffffff808616855290835292819020815180830190925280549093168082526001909301549181019190915290871415610afd576020015194506106b89350505050565b805163ffffffff16871115610b1457819350610b1b565b6001820392505b5050610a71565b506001600160a01b038516600090815260086020908152604080832063ffffffff9094168352929052206001015491505092915050565b600a6020526000908152604090205481565b6000610b75610b7a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106965780601f1061066b57610100808354040283529160200191610696565b6000610bf461108d565b6000546001600160a01b03908116911614610c44576040805162461bcd60e51b81526020600482018190526024820152600080516020611a49833981519152604482015290519081900360640190fd5b610c55610c4f61108d565b836113c0565b506001919050565b60006106b4610c6a61108d565b84610760856040518060600160405280602681526020016119da6026913960026000610c9461108d565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906112cf565b60006106b4610cd261108d565b848461117d565b6001600160a01b03811660009081526009602052604081205463ffffffff1680610d04576000610d36565b6001600160a01b038316600090815260086020908152604080832063ffffffff60001986011684529091529020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610d6861060a565b80519060200120610d7761167d565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a9052825180850390910181526101408401835280519085012061190160f01b6101608501526101628401829052610182808501829052835180860390910181526101a285018085528151918701919091206000918290526101c2860180865281905260ff8b166101e287015261020286018a90526102228601899052935192965090949293909260019261024280840193601f198301929081900390910190855afa158015610eaa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610efc5760405162461bcd60e51b8152600401808060200182810382526026815260200180611a236026913960400191505060405180910390fd5b6001600160a01b0381166000908152600a602052604090208054600181019091558914610f5a5760405162461bcd60e51b8152600401808060200182810382526022815260200180611aea6022913960400191505060405180910390fd5b87421115610f995760405162461bcd60e51b815260040180806020018281038252602681526020018061198d6026913960400191505060405180910390fd5b610fa3818b6115e8565b505050505b505050505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b60086020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b61103461108d565b6000546001600160a01b03908116911614611084576040805162461bcd60e51b81526020600482018190526024820152600080516020611a49833981519152604482015290519081900360640190fd5b61087981611681565b3390565b6001600160a01b0383166110d65760405162461bcd60e51b8152600401808060200182810382526025815260200180611b306025913960400191505060405180910390fd5b6001600160a01b03821661111b5760405162461bcd60e51b8152600401808060200182810382526023815260200180611a006023913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111c25760405162461bcd60e51b8152600401808060200182810382526026815260200180611a696026913960400191505060405180910390fd5b6001600160a01b0382166112075760405162461bcd60e51b8152600401808060200182810382526024815260200180611b0c6024913960400191505060405180910390fd5b611244816040518060600160405280602781526020016119b3602791396001600160a01b03861660009081526001602052604090205491906112cf565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546112739082611366565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561135e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132357818101518382015260200161130b565b50505050905090810190601f1680156113505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d36576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b03821661141b576040805162461bcd60e51b815260206004820181905260248201527f43414b4532303a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6003546114289082611366565b6003556001600160a01b03821660009081526001602052604090205461144e9082611366565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b816001600160a01b0316836001600160a01b0316141580156114c85750600081115b156115e3576001600160a01b0383161561155a576001600160a01b03831660009081526009602052604081205463ffffffff16908161150857600061153a565b6001600160a01b038516600090815260086020908152604080832063ffffffff60001987011684529091529020600101545b905060006115488285611721565b905061155686848484611763565b5050505b6001600160a01b038216156115e3576001600160a01b03821660009081526009602052604081205463ffffffff1690816115955760006115c7565b6001600160a01b038416600090815260086020908152604080832063ffffffff60001987011684529091529020600101545b905060006115d58285611366565b9050610fa885848484611763565b505050565b6001600160a01b038083166000908152600760205260408120549091169061160f84610894565b6001600160a01b0385811660008181526007602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46116778284836114a6565b50505050565b4690565b6001600160a01b0381166116c65760405162461bcd60e51b81526004018080602001828103825260268152602001806119676026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610d3683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112cf565b600061178743604051806060016040528060348152602001611a8f603491396118c8565b905060008463ffffffff161180156117d057506001600160a01b038516600090815260086020908152604080832063ffffffff6000198901811685529252909120548282169116145b1561180d576001600160a01b038516600090815260086020908152604080832063ffffffff6000198901168452909152902060010182905561187e565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600884528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260099092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b600081640100000000841061191e5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561132357818101518382015260200161130b565b509192915050565b60408051808201909152600080825260208201529056fe43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343414b453a3a64656c656761746542795369673a207369676e6174757265206578706972656443414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e636543414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f43414b4532303a20617070726f766520746f20746865207a65726f206164647265737343414b453a3a64656c656761746542795369673a20696e76616c6964207369676e61747572654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243414b4532303a207472616e736665722066726f6d20746865207a65726f206164647265737343414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747343414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656443414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e636543414b4532303a207472616e7366657220746f20746865207a65726f206164647265737343414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373a264697066735822122083ce4653c435476e5fc94dfd59b7a42e08c4a511349bbe8bf737d8520327b67964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E4 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x515 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x497 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x462 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x408 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x33B JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86F JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x894 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x951 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x361 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x361 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBEA JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x273 PUSH2 0xFDB JUMP JUMPDEST PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x679 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0x6AD PUSH2 0x108D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1091 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 DUP5 DUP5 DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x765 DUP5 PUSH2 0x701 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x760 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x193E PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x73F PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0x785 PUSH2 0x108D JUMP JUMPDEST DUP5 PUSH2 0x760 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x796 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP3 DUP3 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x84D SWAP3 AND DUP4 PUSH2 0x14A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x879 CALLER DUP3 PUSH2 0x15E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AC3 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x9BF JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xA2E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xB22 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xA9B PUSH2 0x1926 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xAFD JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x6B8 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xB14 JUMPI DUP2 SWAP4 POP PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xA71 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB75 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC44 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC55 PUSH2 0xC4F PUSH2 0x108D JUMP JUMPDEST DUP4 PUSH2 0x13C0 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0xC6A PUSH2 0x108D JUMP JUMPDEST DUP5 PUSH2 0x760 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19DA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC94 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH2 0xCD2 PUSH2 0x108D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xD04 JUMPI PUSH1 0x0 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xD68 PUSH2 0x60A JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD77 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A23 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AEA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x198D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA3 DUP2 DUP12 PUSH2 0x15E8 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x1034 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1084 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1A49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x1681 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B30 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x111B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A00 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A69 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B0C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1244 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B3 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1273 SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1323 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x130B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1350 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x141B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414B4532303A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1428 SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x144E SWAP1 DUP3 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x14C8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x155A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1508 JUMPI PUSH1 0x0 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1548 DUP3 DUP6 PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP PUSH2 0x1556 DUP7 DUP5 DUP5 DUP5 PUSH2 0x1763 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1595 JUMPI PUSH1 0x0 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15D5 DUP3 DUP6 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA8 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1763 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x160F DUP5 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1677 DUP3 DUP5 DUP4 PUSH2 0x14A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1967 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1787 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8F PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x18C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x17D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x180D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x191E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1323 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x130B JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E63654F776E61626C653A206E PUSH6 0x77206F776E65 PUSH19 0x20697320746865207A65726F20616464726573 PUSH20 0x43414B453A3A64656C656761746542795369673A KECCAK256 PUSH20 0x69676E6174757265206578706972656443414B45 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636543414B4532303A2064656372 PUSH6 0x617365642061 PUSH13 0x6C6F77616E63652062656C6F77 KECCAK256 PUSH27 0x65726F43414B4532303A20617070726F766520746F20746865207A PUSH6 0x726F20616464 PUSH19 0x65737343414B453A3A64656C65676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH20 0x69676E61747572654F776E61626C653A2063616C PUSH13 0x6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E657243414B4532303A207472616E PUSH20 0x6665722066726F6D20746865207A65726F206164 PUSH5 0x7265737343 COINBASE 0x4B GASLIMIT GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 NUMBER COINBASE 0x4B GASLIMIT GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 NUMBER COINBASE 0x4B GASLIMIT GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 NUMBER COINBASE 0x4B GASLIMIT ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xCE CHAINID MSTORE8 0xC4 CALLDATALOAD SELFBALANCE PUSH15 0x5FC94DFD59B7A42E08C4A511349BBE DUP12 0xF7 CALLDATACOPY 0xD8 MSTORE SUB 0x27 0xB6 PUSH26 0x64736F6C634300060C0033000000000000000000000000000000 ",
							"sourceMap": "28279:8638:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22063:158;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22063:158:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;21086:98;;;:::i;:::-;;;;;;;;;;;;;;;;29546:122;;;:::i;22680:386::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22680:386:0;;;;;;;;;;;;;;;;;:::i;20782:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23461:207;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;23461:207:0;;;;;;;;:::i;28440:159::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;28440:159:0;;;;;;;;:::i;:::-;;30511:143;;;;;;;;;;;;;;;;-1:-1:-1;30511:143:0;-1:-1:-1;;;;;30511:143:0;;:::i;:::-;;;;-1:-1:-1;;;;;30511:143:0;;;;;;;;;;;;;;30792:102;;;;;;;;;;;;;;;;-1:-1:-1;30792:102:0;-1:-1:-1;;;;;30792:102:0;;:::i;29427:49::-;;;;;;;;;;;;;;;;-1:-1:-1;29427:49:0;-1:-1:-1;;;;;29427:49:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;21242:117;;;;;;;;;;;;;;;;-1:-1:-1;21242:117:0;-1:-1:-1;;;;;21242:117:0;;:::i;2703:137::-;;;:::i;33318:1217::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;33318:1217:0;;;;;;;;:::i;29954:39::-;;;;;;;;;;;;;;;;-1:-1:-1;29954:39:0;-1:-1:-1;;;;;29954:39:0;;:::i;20480:92::-;;;:::i;2080:77::-;;;:::i;20932:94::-;;;:::i;24668:127::-;;;;;;;;;;;;;;;;-1:-1:-1;24668:127:0;;:::i;24155:305::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;24155:305:0;;;;;;;;:::i;21562:164::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21562:164:0;;;;;;;;:::i;32648:248::-;;;;;;;;;;;;;;;;-1:-1:-1;32648:248:0;-1:-1:-1;;;;;32648:248:0;;:::i;31317:1137::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31317:1137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;21784:141::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21784:141:0;;;;;;;;;;:::i;29759:117::-;;;:::i;29291:70::-;;;;;;;;;;;;;;;;-1:-1:-1;29291:70:0;;-1:-1:-1;;;;;29291:70:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2989:107;;;;;;;;;;;;;;;;-1:-1:-1;2989:107:0;-1:-1:-1;;;;;2989:107:0;;:::i;20630:90::-;20708:5;20701:12;;;;;;;;-1:-1:-1;;20701:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20676:13;;20701:12;;20708:5;;20701:12;;20708:5;20701:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:90;:::o;22063:158::-;22138:4;22154:39;22163:12;:10;:12::i;:::-;22177:7;22186:6;22154:8;:39::i;:::-;-1:-1:-1;22210:4:0;22063:158;;;;;:::o;21086:98::-;21165:12;;21086:98;:::o;29546:122::-;29588:80;29546:122;:::o;22680:386::-;22808:4;22824:36;22834:6;22842:9;22853:6;22824:9;:36::i;:::-;22870:168;22892:6;22912:12;:10;:12::i;:::-;22938:90;22976:6;22938:90;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22938:19:0;;;;;;:11;:19;;;;;;22958:12;:10;:12::i;:::-;-1:-1:-1;;;;;22938:33:0;;;;;;;;;;;;-1:-1:-1;22938:33:0;;;:90;:37;:90::i;:::-;22870:8;:168::i;:::-;-1:-1:-1;23055:4:0;22680:386;;;;;:::o;20782:90::-;20856:9;;;;20782:90;:::o;23461:207::-;23541:4;23557:83;23566:12;:10;:12::i;:::-;23580:7;23589:50;23628:10;23589:11;:25;23601:12;:10;:12::i;:::-;-1:-1:-1;;;;;23589:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;23589:25:0;;;:34;;;;;;;;;;;:38;:50::i;28440:159::-;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2276:67:0;;;;;;;;;;;;;;;28511:19:::1;28517:3;28522:7;28511:5;:19::i;:::-;-1:-1:-1::0;;;;;28567:15:0;;::::1;28563:1;28567:15:::0;;;:10:::1;:15;::::0;;;;;28540:52:::1;::::0;28567:15:::1;28584:7:::0;28540:14:::1;:52::i;:::-;28440:159:::0;;:::o;30511:143::-;-1:-1:-1;;;;;30626:21:0;;;30596:7;30626:21;;;:10;:21;;;;;;;;30511:143::o;30792:102::-;30855:32;30865:10;30877:9;30855;:32::i;:::-;30792:102;:::o;29427:49::-;;;;;;;;;;;;;;;:::o;21242:117::-;-1:-1:-1;;;;;21334:18:0;21308:7;21334:18;;;:9;:18;;;;;;;21242:117::o;2703:137::-;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2276:67:0;;;;;;;;;;;;;;;2801:1:::1;2785:6:::0;;2764:40:::1;::::0;-1:-1:-1;;;;;2785:6:0;;::::1;::::0;2764:40:::1;::::0;2801:1;;2764:40:::1;2831:1;2814:19:::0;;-1:-1:-1;;;;;;2814:19:0::1;::::0;;2703:137::o;33318:1217::-;33423:7;33468:12;33454:11;:26;33446:78;;;;-1:-1:-1;;;33446:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33557:23:0;;33535:19;33557:23;;;:14;:23;;;;;;;;33594:17;33590:56;;33634:1;33627:8;;;;;33590:56;-1:-1:-1;;;;;33703:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;33724:16:0;;33703:38;;;;;;;;;:48;;:63;-1:-1:-1;33699:145:0;;-1:-1:-1;;;;;33789:20:0;;;;;;:11;:20;;;;;;;;-1:-1:-1;;33810:16:0;;;;33789:38;;;;;;;;33825:1;33789:44;;;-1:-1:-1;33782:51:0;;33699:145;-1:-1:-1;;;;;33902:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;33898:86:0;;;33972:1;33965:8;;;;;33898:86;33994:12;-1:-1:-1;;34035:16:0;;34061:418;34076:5;34068:13;;:5;:13;;;34061:418;;;34139:1;34122:13;;;34121:19;;;34113:27;;34181:20;;:::i;:::-;-1:-1:-1;;;;;;34204:20:0;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;34181:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34250:27;;34246:223;;;34304:8;;;;-1:-1:-1;34297:15:0;;-1:-1:-1;;;;34297:15:0;34246:223;34337:12;;:26;;;-1:-1:-1;34333:136:0;;;34391:6;34383:14;;34333:136;;;34453:1;34444:6;:10;34436:18;;34333:136;34061:418;;;;;-1:-1:-1;;;;;;34495:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;33318:1217:0;;;;:::o;29954:39::-;;;;;;;;;;;;;:::o;20480:92::-;20532:7;20558;:5;:7::i;:::-;20551:14;;20480:92;:::o;2080:77::-;2118:7;2144:6;-1:-1:-1;;;;;2144:6:0;2080:77;:::o;20932:94::-;21012:7;21005:14;;;;;;;;-1:-1:-1;;21005:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20980:13;;21005:14;;21012:7;;21005:14;;21012:7;21005:14;;;;;;;;;;;;;;;;;;;;;;;;24668:127;24724:4;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2276:67:0;;;;;;;;;;;;;;;24740:27:::1;24746:12;:10;:12::i;:::-;24760:6;24740:5;:27::i;:::-;-1:-1:-1::0;24784:4:0::1;24668:127:::0;;;:::o;24155:305::-;24240:4;24256:176;24278:12;:10;:12::i;:::-;24304:7;24325:97;24364:15;24325:97;;;;;;;;;;;;;;;;;:11;:25;24337:12;:10;:12::i;:::-;-1:-1:-1;;;;;24325:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;24325:25:0;;;:34;;;;;;;;;;;:97;:38;:97::i;21562:164::-;21640:4;21656:42;21666:12;:10;:12::i;:::-;21680:9;21691:6;21656:9;:42::i;32648:248::-;-1:-1:-1;;;;;32782:23:0;;32737:7;32782:23;;;:14;:23;;;;;;;;32822:16;:67;;32888:1;32822:67;;;-1:-1:-1;;;;;32841:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;32862:16:0;;32841:38;;;;;;;;32877:1;32841:44;;32822:67;32815:74;32648:248;-1:-1:-1;;;32648:248:0:o;31317:1137::-;31500:23;29588:80;31626:6;:4;:6::i;:::-;31610:24;;;;;;31652:12;:10;:12::i;:::-;31549:160;;;;;;;;;;;;;;;;;;;;;;;;;31690:4;31549:160;;;;;;;;;;;;;;;;;;;;;;;31526:193;;;;;;29805:71;31774:135;;;;-1:-1:-1;;;;;31774:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31751:168;;;;;;-1:-1:-1;;;31970:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31947:152;;;;;;;;;-1:-1:-1;32130:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31526:193;;-1:-1:-1;31751:168:0;;31947:152;;-1:-1:-1;;32130:26:0;;;;;;;-1:-1:-1;;32130:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;32130:26:0;;-1:-1:-1;;32130:26:0;;;-1:-1:-1;;;;;;;32174:23:0;;32166:74;;;;-1:-1:-1;;;32166:74:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32267:17:0;;;;;;:6;:17;;;;;:19;;;;;;;;32258:28;;32250:75;;;;-1:-1:-1;;;32250:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32350:6;32343:3;:13;;32335:64;;;;-1:-1:-1;;;32335:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32416:31;32426:9;32437;32416;:31::i;:::-;32409:38;;;;31317:1137;;;;;;;:::o;21784:141::-;-1:-1:-1;;;;;21891:18:0;;;21865:7;21891:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;21784:141::o;29759:117::-;29805:71;29759:117;:::o;29291:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2989:107::-;2294:12;:10;:12::i;:::-;2284:6;;-1:-1:-1;;;;;2284:6:0;;;:22;;;2276:67;;;;;-1:-1:-1;;;2276:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2276:67:0;;;;;;;;;;;;;;;3061:28:::1;3080:8;3061:18;:28::i;770:96::-:0;849:10;770:96;:::o;27427:364::-;-1:-1:-1;;;;;27550:19:0;;27542:69;;;;-1:-1:-1;;;27542:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27629:21:0;;27621:69;;;;-1:-1:-1;;;27621:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27701:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;27752:32;;;;;;;;;;;;;;;;;27427:364;;;:::o;25269:497::-;-1:-1:-1;;;;;25396:20:0;;25388:71;;;;-1:-1:-1;;;25388:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25477:23:0;;25469:72;;;;-1:-1:-1;;;25469:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25572;25594:6;25572:72;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25572:17:0;;;;;;:9;:17;;;;;;;:72;:21;:72::i;:::-;-1:-1:-1;;;;;25552:17:0;;;;;;;:9;:17;;;;;;:92;;;;25677:20;;;;;;;:32;;25702:6;25677:24;:32::i;:::-;-1:-1:-1;;;;;25654:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;25724:35;;;;;;;25654:20;;25724:35;;;;;;;;;;;;;25269:497;;;:::o;8178:217::-;8294:7;8329:12;8321:6;;;;8313:29;;;;-1:-1:-1;;;8313:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8364:5:0;;;8178:217::o;7306:176::-;7364:7;7395:5;;;7418:6;;;;7410:46;;;;;-1:-1:-1;;;7410:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;26036:303;-1:-1:-1;;;;;26111:21:0;;26103:66;;;;;-1:-1:-1;;;26103:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26195:12;;:24;;26212:6;26195:16;:24::i;:::-;26180:12;:39;-1:-1:-1;;;;;26250:18:0;;;;;;:9;:18;;;;;;:30;;26273:6;26250:22;:30::i;:::-;-1:-1:-1;;;;;26229:18:0;;;;;;:9;:18;;;;;;;;:51;;;;26295:37;;;;;;;26229:18;;;;26295:37;;;;;;;;;;26036:303;;:::o;34975:929::-;35080:6;-1:-1:-1;;;;;35070:16:0;:6;-1:-1:-1;;;;;35070:16:0;;;:30;;;;;35099:1;35090:6;:10;35070:30;35066:832;;;-1:-1:-1;;;;;35120:20:0;;;35116:379;;-1:-1:-1;;;;;35226:22:0;;35207:16;35226:22;;;:14;:22;;;;;;;;;35286:13;:60;;35345:1;35286:60;;;-1:-1:-1;;;;;35302:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;35322:13:0;;35302:34;;;;;;;;35334:1;35302:40;;35286:60;35266:80;-1:-1:-1;35364:17:0;35384:21;35266:80;35398:6;35384:13;:21::i;:::-;35364:41;;35423:57;35440:6;35448:9;35459;35470;35423:16;:57::i;:::-;35116:379;;;;-1:-1:-1;;;;;35513:20:0;;;35509:379;;-1:-1:-1;;;;;35619:22:0;;35600:16;35619:22;;;:14;:22;;;;;;;;;35679:13;:60;;35738:1;35679:60;;;-1:-1:-1;;;;;35695:19:0;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;35715:13:0;;35695:34;;;;;;;;35727:1;35695:40;;35679:60;35659:80;-1:-1:-1;35757:17:0;35777:21;35659:80;35791:6;35777:13;:21::i;:::-;35757:41;;35816:57;35833:6;35841:9;35852;35863;35816:16;:57::i;35509:379::-;34975:929;;;:::o;34541:428::-;-1:-1:-1;;;;;34655:21:0;;;34629:23;34655:21;;;:10;:21;;;;;;;;;;34713:20;34666:9;34713;:20::i;:::-;-1:-1:-1;;;;;34788:21:0;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;34788:33:0;;;;;;;;;;34837:54;;34686:47;;-1:-1:-1;34788:33:0;34837:54;;;;;;34788:21;34837:54;34902:60;34917:15;34934:9;34945:16;34902:14;:60::i;:::-;34541:428;;;;:::o;36766:149::-;36874:9;36766:149;:::o;3197:225::-;-1:-1:-1;;;;;3270:22:0;;3262:73;;;;-1:-1:-1;;;3262:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3371:6;;;3350:38;;-1:-1:-1;;;;;3350:38:0;;;;3371:6;;;3350:38;;;3398:6;:17;;-1:-1:-1;;;;;;3398:17:0;-1:-1:-1;;;;;3398:17:0;;;;;;;;;;3197:225::o;7753:134::-;7811:7;7837:43;7841:1;7844;7837:43;;;;;;;;;;;;;;;;;:3;:43::i;35910:686::-;36081:18;36102:76;36109:12;36102:76;;;;;;;;;;;;;;;;;:6;:76::i;:::-;36081:97;;36208:1;36193:12;:16;;;:85;;;;-1:-1:-1;;;;;;36213:22:0;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;36236:16:0;;36213:40;;;;;;;;;:50;:65;;;:50;;:65;36193:85;36189:334;;;-1:-1:-1;;;;;36294:22:0;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;36317:16:0;;36294:40;;;;;;;;36332:1;36294:46;:57;;;36189:334;;;36421:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;36382:22:0;;-1:-1:-1;36382:22:0;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;36382:72:0;;;;;;;;;;;;;36468:25;;;:14;:25;;;;;;:44;;36496:16;;;36468:44;;;;;;;;;;36189:334;36538:51;;;;;;;;;;;;;;-1:-1:-1;;;;;36538:51:0;;;;;;;;;;;35910:686;;;;;:::o;36602:158::-;36677:6;36714:12;36707:5;36703:9;;36695:32;;;;-1:-1:-1;;;36695:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36751:1:0;;36602:158;-1:-1:-1;;36602:158:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1410000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "264",
								"DOMAIN_TYPEHASH()": "288",
								"allowance(address,address)": "1294",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1231",
								"checkpoints(address,uint32)": "2168",
								"decimals()": "1147",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1262",
								"getCurrentVotes(address)": "2228",
								"getOwner()": "1162",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1192",
								"numCheckpoints(address)": "1206",
								"owner()": "1082",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"getChainId()": "14",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2830B731B0B5B2A9BBB0B8102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "43616B65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20276,
									"end": 20416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1879,
									"end": 1896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1927,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 1927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1954,
									"end": 1997,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20352,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20347,
									"end": 20352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20347,
									"end": 20359,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20376,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 20369,
									"end": 20376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20369,
									"end": 20385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20395,
									"end": 20404,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20407,
									"end": 20409,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20395,
									"end": 20409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 770,
									"end": 866,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 770,
									"end": 866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 849,
									"end": 859,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 770,
									"end": 866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 770,
									"end": 866,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28279,
									"end": 36917,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083ce4653c435476e5fc94dfd59b7a42e08c4a511349bbe8bf737d8520327b67964736f6c634300060c0033",
									".code": [
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "E7A324DC"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "F1127ED8"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "C3CDA520"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "20606B70"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28279,
											"end": 36917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20676,
											"end": 20689,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20676,
											"end": 20689,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20630,
											"end": 20720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22163,
											"end": 22173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22163,
											"end": 22175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22177,
											"end": 22184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22192,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22154,
											"end": 22193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22210,
											"end": 22214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21177,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21165,
											"end": 21177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21086,
											"end": 21184,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29588,
											"end": 29668,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29668,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22808,
											"end": 22812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22834,
											"end": 22840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22842,
											"end": 22851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22824,
											"end": 22833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22824,
											"end": 22860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22892,
											"end": 22898,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22912,
											"end": 22922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22912,
											"end": 22924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22976,
											"end": 22982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH data",
											"source": 0,
											"value": "37A800C383C8B41B7F30FD6FDBE6B4A969472A92C909C5E3A50FBAD30140E2F"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22949,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 22958,
											"end": 22968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 22958,
											"end": 22970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22938,
											"end": 22975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22938,
											"end": 23028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22870,
											"end": 23038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23055,
											"end": 23059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22680,
											"end": 23066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20872,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23461,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 23545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23557,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23566,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23566,
											"end": 23578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23580,
											"end": 23587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23628,
											"end": 23638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23601,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23601,
											"end": 23613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23614,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23589,
											"end": 23639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28517,
											"end": 28520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28522,
											"end": 28529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28563,
											"end": 28564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28577,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28540,
											"end": 28592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28540,
											"end": 28592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28591,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28540,
											"end": 28554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 28540,
											"end": 28592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28540,
											"end": 28592,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28540,
											"end": 28592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28440,
											"end": 28599,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30636,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30626,
											"end": 30647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30511,
											"end": 30654,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30865,
											"end": 30875,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30877,
											"end": 30886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30855,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30855,
											"end": 30887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30855,
											"end": 30887,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30855,
											"end": 30887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30792,
											"end": 30894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29476,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21308,
											"end": 21315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21334,
											"end": 21352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21359,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2804,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33423,
											"end": 33430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33468,
											"end": 33480,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33454,
											"end": 33465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33454,
											"end": 33480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH data",
											"source": 0,
											"value": "A1BE2AA7CE8870F4C68A34627CE4514A20D52F005EDD6F8BF954781312534474"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33446,
											"end": 33524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33535,
											"end": 33554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33571,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33557,
											"end": 33580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33594,
											"end": 33611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33590,
											"end": 33646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 33590,
											"end": 33646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33634,
											"end": 33635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33627,
											"end": 33635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33627,
											"end": 33635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33627,
											"end": 33635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33590,
											"end": 33646,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 33590,
											"end": 33646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33714,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33724,
											"end": 33740,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33724,
											"end": 33740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33703,
											"end": 33766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 33699,
											"end": 33844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33699,
											"end": 33844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33800,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33810,
											"end": 33826,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33810,
											"end": 33826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33810,
											"end": 33826,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33810,
											"end": 33826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33827,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33825,
											"end": 33826,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33789,
											"end": 33833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33789,
											"end": 33833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33782,
											"end": 33833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33782,
											"end": 33833,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33699,
											"end": 33844,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33699,
											"end": 33844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33902,
											"end": 33935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33902,
											"end": 33949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 33898,
											"end": 33984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 33898,
											"end": 33984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33972,
											"end": 33973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33965,
											"end": 33973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33965,
											"end": 33973,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33984,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 33898,
											"end": 33984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34035,
											"end": 34051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34035,
											"end": 34051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34076,
											"end": 34081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34068,
											"end": 34081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34068,
											"end": 34081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34081,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34139,
											"end": 34140,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34122,
											"end": 34135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34121,
											"end": 34140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34140,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34113,
											"end": 34140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34113,
											"end": 34140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34181,
											"end": 34201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34181,
											"end": 34201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34181,
											"end": 34201,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34181,
											"end": 34201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34215,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34204,
											"end": 34232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34181,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34250,
											"end": 34277,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34250,
											"end": 34277,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34246,
											"end": 34469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34246,
											"end": 34469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34246,
											"end": 34469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34304,
											"end": 34312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34312,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34297,
											"end": 34312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 34297,
											"end": 34312,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34297,
											"end": 34312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34246,
											"end": 34469,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34246,
											"end": 34469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34337,
											"end": 34349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34337,
											"end": 34349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34337,
											"end": 34363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34337,
											"end": 34363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34337,
											"end": 34363,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34391,
											"end": 34397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34383,
											"end": 34397,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34383,
											"end": 34397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34453,
											"end": 34454,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34444,
											"end": 34450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34444,
											"end": 34454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34436,
											"end": 34454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 34333,
											"end": 34469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 34061,
											"end": 34479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34506,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34528,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34495,
											"end": 34528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33318,
											"end": 34535,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29954,
											"end": 29993,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20532,
											"end": 20539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20558,
											"end": 20563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20558,
											"end": 20565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20480,
											"end": 20572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2157,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 20932,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20980,
											"end": 20993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20980,
											"end": 20993,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 21005,
											"end": 21019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 24746,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 24746,
											"end": 24758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24760,
											"end": 24766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24740,
											"end": 24745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 24740,
											"end": 24767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24784,
											"end": 24788,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 24155,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24240,
											"end": 24244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24256,
											"end": 24432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24278,
											"end": 24288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24278,
											"end": 24290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24364,
											"end": 24379,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH data",
											"source": 0,
											"value": "7426A02A8645A4FC3FBE54503BE0C6EF4E20D7E78F4110ED802FA144A020D321"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24336,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24337,
											"end": 24347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24337,
											"end": 24349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24325,
											"end": 24363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24325,
											"end": 24422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21562,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21656,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21666,
											"end": 21676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21666,
											"end": 21678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21680,
											"end": 21689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21691,
											"end": 21697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21656,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 21656,
											"end": 21698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32796,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32782,
											"end": 32805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32822,
											"end": 32838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32888,
											"end": 32889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32862,
											"end": 32878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32862,
											"end": 32878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32877,
											"end": 32878,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32841,
											"end": 32885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32841,
											"end": 32885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32822,
											"end": 32889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32889,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32648,
											"end": 32896,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29588,
											"end": 29668,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 31626,
											"end": 31632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 31626,
											"end": 31630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 31626,
											"end": 31632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31626,
											"end": 31632,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 31626,
											"end": 31632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31610,
											"end": 31634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31634,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 31652,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 31652,
											"end": 31664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31652,
											"end": 31664,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 31652,
											"end": 31664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31690,
											"end": 31694,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31549,
											"end": 31709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29876,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31774,
											"end": 31909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "PUSH",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "PUSH",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "PUSH",
											"source": 0,
											"value": "1A2"
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 32089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "1C2"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "1E2"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31526,
											"end": 31719,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31919,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 32099,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32130,
											"end": 32156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32174,
											"end": 32197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH data",
											"source": 0,
											"value": "8C9772D8870FAF984838FDB1A6A39869B314CEDD021C20FB983E461D778F09AA"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 32166,
											"end": 32240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32273,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32267,
											"end": 32286,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32286,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32286,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH data",
											"source": 0,
											"value": "AA9EE17312BE9DC937C6C61D6A03A6C21827D2F9C3E6DFEA349C1095E56DB22F"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32250,
											"end": 32325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32356,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32343,
											"end": 32346,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32343,
											"end": 32356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32343,
											"end": 32356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH data",
											"source": 0,
											"value": "2975FF3A9C2DF4C97FCC8BDA6FF60212C199EDFEF1308A20EFC5C659649E98EB"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 32335,
											"end": 32399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32416,
											"end": 32447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32426,
											"end": 32435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32437,
											"end": 32446,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 32416,
											"end": 32425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32416,
											"end": 32447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32416,
											"end": 32447,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 32416,
											"end": 32447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32409,
											"end": 32447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31317,
											"end": 32454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21902,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 21918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21784,
											"end": 21925,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29805,
											"end": 29876,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29759,
											"end": 29876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29291,
											"end": 29361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2989,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2276,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3061,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3080,
											"end": 3088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3061,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3061,
											"end": 3089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 770,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 859,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 770,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 866,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27550,
											"end": 27569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27550,
											"end": 27569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH data",
											"source": 0,
											"value": "C8A22D3B0F46CB8553E794906FFC1B6E8656F593E72D64CB7102CB1F934AFAF6"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27542,
											"end": 27611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27629,
											"end": 27650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27629,
											"end": 27650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH data",
											"source": 0,
											"value": "818980E094D98E32545E5A09B38CF4334A5AA9765C6ADBD223FDB87D9A48DD60"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27621,
											"end": 27690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27712,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27737,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27752,
											"end": 27784,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27427,
											"end": 27791,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25396,
											"end": 25416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25396,
											"end": 25416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH data",
											"source": 0,
											"value": "9F602C3CA62830526FB39312611C26F66E9439B2BDD3E2C3A3E2A522717508C4"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 25388,
											"end": 25459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25477,
											"end": 25500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25477,
											"end": 25500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH data",
											"source": 0,
											"value": "AC1D5373694637D2969063BE6D0102DC19599842FEFC49D9B9656600338F4BD7"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 25469,
											"end": 25541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 25594,
											"end": 25600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH data",
											"source": 0,
											"value": "6883C37A4C18E68948A3674AF93A21B6C0026D301016300C1E6DA51F1448EB28"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25572,
											"end": 25593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 25572,
											"end": 25644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25644,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25677,
											"end": 25701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 25677,
											"end": 25709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25654,
											"end": 25674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25759,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25766,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8178,
											"end": 8395,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8178,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8313,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8178,
											"end": 8395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7306,
											"end": 7482,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7306,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7456,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26111,
											"end": 26132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "43414B4532303A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26103,
											"end": 26169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26195,
											"end": 26207,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26195,
											"end": 26207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26195,
											"end": 26211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26195,
											"end": 26219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26180,
											"end": 26192,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26180,
											"end": 26219,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26273,
											"end": 26279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26250,
											"end": 26280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26238,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26280,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26229,
											"end": 26247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26295,
											"end": 26332,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26339,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34975,
											"end": 35904,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 34975,
											"end": 35904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35080,
											"end": 35086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35070,
											"end": 35086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35070,
											"end": 35086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35099,
											"end": 35100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35090,
											"end": 35096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35090,
											"end": 35100,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 35070,
											"end": 35100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35066,
											"end": 35898,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35066,
											"end": 35898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 35066,
											"end": 35898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35120,
											"end": 35140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35120,
											"end": 35140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35120,
											"end": 35140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35207,
											"end": 35223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35240,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35226,
											"end": 35248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35286,
											"end": 35299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35345,
											"end": 35346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35313,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35322,
											"end": 35335,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35322,
											"end": 35335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35334,
											"end": 35335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35302,
											"end": 35342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35302,
											"end": 35342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 35286,
											"end": 35346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35266,
											"end": 35346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35364,
											"end": 35381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35384,
											"end": 35405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 35266,
											"end": 35346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35398,
											"end": 35404,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35384,
											"end": 35397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 35384,
											"end": 35405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35384,
											"end": 35405,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 35384,
											"end": 35405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35364,
											"end": 35405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35364,
											"end": 35405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 35440,
											"end": 35446,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35448,
											"end": 35457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35459,
											"end": 35468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35470,
											"end": 35479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 35423,
											"end": 35480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35423,
											"end": 35480,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 35423,
											"end": 35480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 35116,
											"end": 35495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35513,
											"end": 35533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35509,
											"end": 35888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 35509,
											"end": 35888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35600,
											"end": 35616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35633,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35619,
											"end": 35641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35706,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35715,
											"end": 35728,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35715,
											"end": 35728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35727,
											"end": 35728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35695,
											"end": 35735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35695,
											"end": 35735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 35679,
											"end": 35739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35659,
											"end": 35739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35757,
											"end": 35774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35777,
											"end": 35798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35659,
											"end": 35739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35791,
											"end": 35797,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35777,
											"end": 35790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 35777,
											"end": 35798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35777,
											"end": 35798,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35777,
											"end": 35798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35757,
											"end": 35798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35757,
											"end": 35798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35816,
											"end": 35873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35833,
											"end": 35839,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35841,
											"end": 35850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35852,
											"end": 35861,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35863,
											"end": 35872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35816,
											"end": 35832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 35816,
											"end": 35873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35509,
											"end": 35888,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 35509,
											"end": 35888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35904,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34629,
											"end": 34652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34665,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34713,
											"end": 34733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 34666,
											"end": 34675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34713,
											"end": 34722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34713,
											"end": 34733,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34713,
											"end": 34733,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 34713,
											"end": 34733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34798,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34686,
											"end": 34733,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34686,
											"end": 34733,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34788,
											"end": 34821,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34788,
											"end": 34809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 34891,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 34917,
											"end": 34932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34934,
											"end": 34943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34945,
											"end": 34961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 34916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 34902,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34902,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 34902,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34541,
											"end": 34969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36766,
											"end": 36915,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 36766,
											"end": 36915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36874,
											"end": 36883,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 36766,
											"end": 36915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36766,
											"end": 36915,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3422,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3197,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3388,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3422,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7753,
											"end": 7887,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 7753,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7841,
											"end": 7842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36081,
											"end": 36099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36109,
											"end": 36121,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH data",
											"source": 0,
											"value": "A024375C1B834D2D05951566D035F756F78479A9DC650436C3BA2937D280012F"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 36102,
											"end": 36108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 36102,
											"end": 36178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36081,
											"end": 36178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36081,
											"end": 36178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36193,
											"end": 36205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36193,
											"end": 36209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36193,
											"end": 36209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36193,
											"end": 36209,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36193,
											"end": 36278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36193,
											"end": 36278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36193,
											"end": 36278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36193,
											"end": 36278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36224,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36235,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36236,
											"end": 36252,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36236,
											"end": 36252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36213,
											"end": 36278,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36193,
											"end": 36278,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36193,
											"end": 36278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36317,
											"end": 36333,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36317,
											"end": 36333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36332,
											"end": 36333,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36294,
											"end": 36340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36294,
											"end": 36351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36393,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36382,
											"end": 36454,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36482,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36496,
											"end": 36512,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36496,
											"end": 36512,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36496,
											"end": 36512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36512,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36189,
											"end": 36523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36589,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35910,
											"end": 36596,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36602,
											"end": 36760,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 36602,
											"end": 36760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36677,
											"end": 36683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36714,
											"end": 36726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36707,
											"end": 36712,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 36703,
											"end": 36712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36703,
											"end": 36712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 36695,
											"end": 36727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36751,
											"end": 36752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36751,
											"end": 36752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36602,
											"end": 36760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36602,
											"end": 36760,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2975FF3A9C2DF4C97FCC8BDA6FF60212C199EDFEF1308A20EFC5C659649E98EB": "43414b453a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"37A800C383C8B41B7F30FD6FDBE6B4A969472A92C909C5E3A50FBAD30140E2F": "43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"6883C37A4C18E68948A3674AF93A21B6C0026D301016300C1E6DA51F1448EB28": "43414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"7426A02A8645A4FC3FBE54503BE0C6EF4E20D7E78F4110ED802FA144A020D321": "43414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"818980E094D98E32545E5A09B38CF4334A5AA9765C6ADBD223FDB87D9A48DD60": "43414b4532303a20617070726f766520746f20746865207a65726f2061646472657373",
										"8C9772D8870FAF984838FDB1A6A39869B314CEDD021C20FB983E461D778F09AA": "43414b453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"9F602C3CA62830526FB39312611C26F66E9439B2BDD3E2C3A3E2A522717508C4": "43414b4532303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"A024375C1B834D2D05951566D035F756F78479A9DC650436C3BA2937D280012F": "43414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"A1BE2AA7CE8870F4C68A34627CE4514A20D52F005EDD6F8BF954781312534474": "43414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"AA9EE17312BE9DC937C6C61D6A03A6C21827D2F9C3E6DFEA349C1095E56DB22F": "43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"AC1D5373694637D2969063BE6D0102DC19599842FEFC49D9B9656600338F4BD7": "43414b4532303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"C8A22D3B0F46CB8553E794906FFC1B6E8656F593E72D64CB7102CB1F934AFAF6": "43414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getOwner()": "893d20e8",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {CAKE20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {CAKE20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {CAKE20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegates(address)\":{\"params\":{\"delegator\":\"The address to get delegatee for\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getOwner()\":{\"details\":\"Returns the CAKE token owner.\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {CAKE20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {CAKE20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {CAKE20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {CAKE20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {CAKE20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"CakeToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 31,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 728,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 734,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 736,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 738,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 740,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 742,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 1266,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "_delegates",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1278,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "checkpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1271_storage))"
							},
							{
								"astId": 1283,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 1300,
								"contract": "contracts/cake.sol:CakeToken",
								"label": "nonces",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1271_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)1271_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)1271_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct CakeToken.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)1271_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)1271_storage": {
								"encoding": "inplace",
								"label": "struct CakeToken.Checkpoint",
								"members": [
									{
										"astId": 1268,
										"contract": "contracts/cake.sol:CakeToken",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1270,
										"contract": "contracts/cake.sol:CakeToken",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							}
						},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICAKE20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the CAKE token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the CAKE token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"ICAKE20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 31,
								"contract": "contracts/cake.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cake.sol\":7054:12247  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cake.sol\":7054:12247  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122087bc9a07e57860ebea757601fdb85d5529a2ea1f745a64c196884aad882fab6b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087bc9a07e57860ebea757601fdb85d5529a2ea1f745a64c196884aad882fab6b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xBC SWAP11 SMOD 0xE5 PUSH25 0x60EBEA757601FDB85D5529A2EA1F745A64C196884AAD882FAB PUSH12 0x64736F6C634300060C003300 ",
							"sourceMap": "7054:5193:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087bc9a07e57860ebea757601fdb85d5529a2ea1f745a64c196884aad882fab6b64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xBC SWAP11 SMOD 0xE5 PUSH25 0x60EBEA757601FDB85D5529A2EA1F745A64C196884AAD882FAB PUSH12 0x64736F6C634300060C003300 ",
							"sourceMap": "7054:5193:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7054,
									"end": 12247,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087bc9a07e57860ebea757601fdb85d5529a2ea1f745a64c196884aad882fab6b64736f6c634300060c0033",
									".code": [
										{
											"begin": 7054,
											"end": 12247,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 12247,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cake.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/cake.sol\":{\"keccak256\":\"0xcc74bf5f7927419f494100a2a2ab23a786e8dd826f27bf507c530ef88bdafbbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03cd4de9a75b12700c472ee6f2bb995f644fad13bc428cf75f4fa291f01ff03c\",\"dweb:/ipfs/QmazprEBshishMV8TFCs2yan66j2spPZUyvdug6jYVMnBq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/cake.sol": {
				"ast": {
					"absolutePath": "contracts/cake.sol",
					"exportedSymbols": {
						"Address": [
							711
						],
						"CAKE20": [
							1231
						],
						"CakeToken": [
							1863
						],
						"Context": [
							26
						],
						"ICAKE20": [
							242
						],
						"Ownable": [
							143
						],
						"SafeMath": [
							509
						]
					},
					"id": 1864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "762:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:0:0"
									},
									"scope": 26,
									"src": "739:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "832:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 10,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "849:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "849:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 9,
												"id": 12,
												"nodeType": "Return",
												"src": "842:17:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "815:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "815:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "814:17:0"
									},
									"scope": 26,
									"src": "770:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "929:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$26",
														"typeString": "contract Context"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "939:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 21,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1079:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1079:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 18,
												"id": 23,
												"nodeType": "Return",
												"src": "1072:15:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "915:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 16,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "915:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:14:0"
									},
									"scope": 26,
									"src": "872:222:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1864,
							"src": "562:534:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 28,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "1617:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$26",
											"typeString": "contract Context"
										}
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "1617:7:0"
								}
							],
							"contractDependencies": [
								26
							],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "1102:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 143,
							"linearizedBaseContracts": [
								143,
								26
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 143,
									"src": "1631:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 37,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "1687:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "1718:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1686:57:0"
									},
									"src": "1660:84:0"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1869:135:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 58,
														"src": "1879:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 41,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1879:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 43,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1899:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1879:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1921:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1930:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1921:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1921:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1983:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 51,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1975:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1975:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 55,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1987:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 50,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "EmitStatement",
												"src": "1949:48:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1750:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 59,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:0"
									},
									"scope": 143,
									"src": "1846:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2127:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "2144:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 64,
												"id": 66,
												"nodeType": "Return",
												"src": "2137:13:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2010:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 68,
												"src": "2118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2117:9:0"
									},
									"scope": 143,
									"src": "2080:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2266:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 72,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "2284:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 73,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "2294:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2284:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2308:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2276:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2276:67:0"
											},
											{
												"id": 79,
												"nodeType": "PlaceholderStatement",
												"src": "2353:1:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2163:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 81,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2263:2:0"
									},
									"src": "2245:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2749:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 88,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2785:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2801:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2793:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 89,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2793:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2793:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 87,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2764:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "EmitStatement",
												"src": "2759:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 95,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2831:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 96,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2823:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2823:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2814:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2814:19:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2367:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 85,
											"modifierName": {
												"argumentTypes": null,
												"id": 84,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "2739:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2739:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:0:0"
									},
									"scope": 143,
									"src": "2703:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3051:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 112,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3080:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 111,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "3061:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3061:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "3061:28:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2846:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 109,
											"modifierName": {
												"argumentTypes": null,
												"id": 108,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "3041:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3041:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "3016:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3015:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3051:0:0"
									},
									"scope": 143,
									"src": "2989:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "3252:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "3270:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3290:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3282:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 124,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3282:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3282:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3270:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3294:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3262:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "3262:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 133,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 134,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "3379:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 132,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3350:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3350:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "EmitStatement",
												"src": "3345:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 137,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "3398:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 138,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3407:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3398:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "3398:17:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3102:90:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "3225:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3224:18:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3252:0:0"
									},
									"scope": 143,
									"src": "3197:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1864,
							"src": "1597:1827:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "ICAKE20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "3454:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3545:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3570:9:0"
									},
									"scope": 242,
									"src": "3525:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3586:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3659:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "3685:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3684:7:0"
									},
									"scope": 242,
									"src": "3642:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "3698:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "3793:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3792:15:0"
									},
									"scope": 242,
									"src": "3752:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3814:47:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3879:2:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "3905:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3905:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3904:15:0"
									},
									"scope": 242,
									"src": "3866:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3926:53:0",
										"text": " @dev Returns the CAKE token owner."
									},
									"functionSelector": "893d20e8",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4001:2:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "4027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4026:9:0"
									},
									"scope": 242,
									"src": "3984:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4042:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4138:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4137:17:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4177:9:0"
									},
									"scope": 242,
									"src": "4119:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4193:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "4425:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "4444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4424:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "4478:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4477:6:0"
									},
									"scope": 242,
									"src": "4407:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4490:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "4778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "4794:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4777:33:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 201,
												"src": "4834:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4833:9:0"
									},
									"scope": 242,
									"src": "4759:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4849:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5530:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5512:33:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5564:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5564:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5563:6:0"
									},
									"scope": 242,
									"src": "5496:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "5576:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5908:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5932:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5898:81:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5998:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5997:6:0"
									},
									"scope": 242,
									"src": "5877:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "6010:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 232,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "6188:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "6210:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "6230:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6187:57:0"
									},
									"src": "6173:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6251:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 241,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "6419:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "6442:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "6467:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6418:63:0"
									},
									"src": "6404:78:0"
								}
							],
							"scope": 1864,
							"src": "3430:3054:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "6490:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 509,
							"linearizedBaseContracts": [
								509
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "7373:109:0",
										"statements": [
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 268,
														"src": "7383:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "7395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "7399:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7395:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7383:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 261,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "7423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7418:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7426:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7410:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "7410:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 266,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 254,
													"src": "7474:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 252,
												"id": 267,
												"nodeType": "Return",
												"src": "7467:8:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "7077:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 269,
												"src": "7319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 269,
												"src": "7330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7318:22:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 269,
												"src": "7364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7363:9:0"
									},
									"scope": 509,
									"src": "7306:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7820:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 280,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7841:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7844:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7847:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 279,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															286,
															314
														],
														"referencedDeclaration": 314,
														"src": "7837:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7837:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 284,
												"nodeType": "Return",
												"src": "7830:50:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7488:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "7766:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "7777:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7765:22:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "7811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7810:9:0"
									},
									"scope": 509,
									"src": "7753:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "8303:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 299,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "8321:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 300,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "8326:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8321:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 302,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "8329:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8313:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8313:29:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 313,
														"src": "8352:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 307,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "8364:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "8368:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8352:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 311,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 306,
													"src": "8387:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 297,
												"id": 312,
												"nodeType": "Return",
												"src": "8380:8:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7893:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "8200:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "8219:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "8238:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8190:80:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "8294:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8293:9:0"
									},
									"scope": 509,
									"src": "8178:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "8709:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "8941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8946:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8941:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 330,
												"nodeType": "IfStatement",
												"src": "8937:45:0",
												"trueBody": {
													"id": 329,
													"nodeType": "Block",
													"src": "8949:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8970:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 323,
															"id": 328,
															"nodeType": "Return",
															"src": "8963:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 348,
														"src": "8992:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 333,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "9004:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 334,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "9008:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9004:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8992:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 338,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "9027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 339,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "9031:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 341,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "9036:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9027:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9039:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9019:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 346,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "9093:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 347,
												"nodeType": "Return",
												"src": "9086:8:0"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "8401:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "8655:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "8666:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8654:22:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "8700:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8699:9:0"
									},
									"scope": 509,
									"src": "8642:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "9630:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 360,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9651:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 361,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "9654:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9657:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 359,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															366,
															394
														],
														"referencedDeclaration": 394,
														"src": "9647:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9647:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 358,
												"id": 364,
												"nodeType": "Return",
												"src": "9640:46:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "9107:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "9576:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "9587:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9575:22:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "9621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9620:9:0"
									},
									"scope": 509,
									"src": "9563:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "10300:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "10318:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10322:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10318:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 382,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "10325:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10310:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10310:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "10310:28:0"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 393,
														"src": "10348:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10348:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 387,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "10360:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 388,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "10364:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10348:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 391,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "10469:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 377,
												"id": 392,
												"nodeType": "Return",
												"src": "10462:8:0"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "9699:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "10197:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "10216:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "10235:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10187:80:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "10291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10290:9:0"
									},
									"scope": 509,
									"src": "10175:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "10995:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 405,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "11016:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 406,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "11019:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11022:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 404,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															411,
															435
														],
														"referencedDeclaration": 435,
														"src": "11012:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11012:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 403,
												"id": 409,
												"nodeType": "Return",
												"src": "11005:44:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "10483:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "10941:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "10952:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10940:22:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "10986:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10985:9:0"
									},
									"scope": 509,
									"src": "10928:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "11652:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "11670:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11675:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 427,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "11678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11662:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "11662:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 430,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "11708:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 431,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "11712:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 422,
												"id": 433,
												"nodeType": "Return",
												"src": "11701:12:0"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "11062:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "11549:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "11568:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "11587:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11587:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11539:80:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "11643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11642:9:0"
									},
									"scope": 509,
									"src": "11527:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "11795:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 444,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "11805:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 445,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "11809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 446,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "11813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 449,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "11821:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "11809:13:0",
														"trueExpression": {
															"argumentTypes": null,
															"id": 448,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "11817:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11805:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "11805:17:0"
											}
										]
									},
									"documentation": null,
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "11739:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "11750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11738:22:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "11784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11783:11:0"
									},
									"scope": 509,
									"src": "11726:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12003:242:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 461,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "12017:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12021:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "12017:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 497,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "12201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12206:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12201:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 505,
													"nodeType": "IfStatement",
													"src": "12197:42:0",
													"trueBody": {
														"id": 504,
														"nodeType": "Block",
														"src": "12209:30:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 500,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "12223:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12227:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 503,
																"nodeType": "ExpressionStatement",
																"src": "12223:5:0"
															}
														]
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "12013:226:0",
												"trueBody": {
													"id": 496,
													"nodeType": "Block",
													"src": "12024:167:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 464,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "12038:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 465,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "12042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12038:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "12038:5:0"
														},
														{
															"assignments": [
																469
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 469,
																	"mutability": "mutable",
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 496,
																	"src": "12057:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 475,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 470,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "12069:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12073:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12069:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12077:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12069:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12057:21:0"
														},
														{
															"body": {
																"id": 494,
																"nodeType": "Block",
																"src": "12106:75:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 479,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "12124:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 480,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 469,
																				"src": "12128:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12124:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 482,
																		"nodeType": "ExpressionStatement",
																		"src": "12124:5:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 483,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 469,
																				"src": "12147:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 486,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 484,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 456,
																									"src": "12152:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 485,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 469,
																									"src": "12156:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12152:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 487,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 469,
																								"src": "12160:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12152:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 489,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "12151:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 490,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12165:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "12151:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12147:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 493,
																		"nodeType": "ExpressionStatement",
																		"src": "12147:19:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 476,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "12099:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 477,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "12103:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12099:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 495,
															"nodeType": "WhileStatement",
															"src": "12092:89:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "11958:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11957:11:0"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "11992:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11991:11:0"
									},
									"scope": 509,
									"src": "11944:301:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1864,
							"src": "7054:5193:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 510,
								"nodeType": "StructuredDocumentation",
								"src": "12253:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "12979:564:0",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 535,
														"src": "13231:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 518,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "13231:16:0"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 535,
														"src": "13257:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 521,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13257:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13279:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13257:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13420:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13434:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "13458:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "13446:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13446:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "13434:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 513,
														"isOffset": false,
														"isSlot": false,
														"src": "13458:7:0",
														"valueSize": 1
													},
													{
														"declaration": 519,
														"isOffset": false,
														"isSlot": false,
														"src": "13434:8:0",
														"valueSize": 1
													}
												],
												"id": 525,
												"nodeType": "InlineAssembly",
												"src": "13411:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 526,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "13493:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 527,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "13505:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "13493:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 529,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "13520:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13532:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "13520:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13493:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 533,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13492:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 534,
												"nodeType": "Return",
												"src": "13485:51:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "12343:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "12933:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12932:17:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "12973:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12972:6:0"
									},
									"scope": 711,
									"src": "12913:630:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "14531:318:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 547,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "14557:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$711",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$711",
																				"typeString": "library Address"
																			}
																		],
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14549:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 545,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14549:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14549:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14549:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 550,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "14574:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14549:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14582:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14541:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "14541:73:0"
											},
											{
												"assignments": [
													556,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 569,
														"src": "14703:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 555,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14703:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 563,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14751:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 557,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "14721:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14721:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 559,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "14743:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14721:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14721:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14702:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 565,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "14772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14781:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14764:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "14764:78:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "13549:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "14479:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14479:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "14506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14478:43:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14531:0:0"
									},
									"scope": 711,
									"src": "14460:389:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "15679:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 581,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "15709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "15717:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15723:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 580,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															587,
															607
														],
														"referencedDeclaration": 607,
														"src": "15696:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15696:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "15689:67:0"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "14855:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15612:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15628:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15628:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15611:35:0"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "15665:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15664:14:0"
									},
									"scope": 711,
									"src": "15590:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "16132:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 600,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "16172:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "16180:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16186:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "16189:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 599,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "16149:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16149:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 598,
												"id": 605,
												"nodeType": "Return",
												"src": "16142:60:0"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "15769:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "16016:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "16040:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16040:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "16067:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16067:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16006:93:0"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "16118:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16118:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16117:14:0"
									},
									"scope": 711,
									"src": "15985:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "16714:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 620,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "16753:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 621,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "16761:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "16767:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16774:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 619,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															660
														],
														"referencedDeclaration": 660,
														"src": "16731:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16731:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 618,
												"id": 625,
												"nodeType": "Return",
												"src": "16724:94:0"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "16215:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "16611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "16635:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16635:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "16662:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16601:80:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "16700:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16700:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16699:14:0"
									},
									"scope": 711,
									"src": "16571:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "17252:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 644,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17278:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$711",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$711",
																				"typeString": "library Address"
																			}
																		],
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17270:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 642,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17270:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17270:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17270:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 647,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "17295:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17270:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17302:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17262:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "17262:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "17383:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 654,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "17391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 655,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 656,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "17404:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 652,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "17360:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17360:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 640,
												"id": 658,
												"nodeType": "Return",
												"src": "17353:64:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "16831:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "17113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "17137:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17137:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "17164:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "17187:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17103:116:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "17238:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17238:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17237:14:0"
									},
									"scope": 711,
									"src": "17073:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17612:812:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 675,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "17641:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 674,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "17630:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17630:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17650:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17622:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "17622:60:0"
											},
											{
												"assignments": [
													681,
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 709,
														"src": "17753:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 680,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17753:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 709,
														"src": "17767:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 682,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17767:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 688,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "17823:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 684,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "17794:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17794:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 686,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "17813:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17794:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17794:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17752:76:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 681,
													"src": "17842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "17899:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 695,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "17983:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17983:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18003:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17983:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 705,
																"nodeType": "Block",
																"src": "18355:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 702,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "18380:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 701,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "18373:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18373:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 704,
																		"nodeType": "ExpressionStatement",
																		"src": "18373:20:0"
																	}
																]
															},
															"id": 706,
															"nodeType": "IfStatement",
															"src": "17979:429:0",
															"trueBody": {
																"id": 700,
																"nodeType": "Block",
																"src": "18006:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "18190:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18212:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18241:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18235:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18235:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18216:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18284:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18288:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18280:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18280:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18301:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18273:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18273:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18273:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 683,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18241:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 683,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18288:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 699,
																		"nodeType": "InlineAssembly",
																		"src": "18181:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 708,
												"nodeType": "IfStatement",
												"src": "17838:580:0",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "17851:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "17872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 672,
															"id": 693,
															"nodeType": "Return",
															"src": "17865:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "17471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "17495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "17522:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "17548:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 667,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17548:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17461:119:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "17598:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17598:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17597:14:0"
									},
									"scope": 711,
									"src": "17430:994:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1864,
							"src": "12321:6105:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 713,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "19619:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$26",
											"typeString": "contract Context"
										}
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "19619:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 715,
										"name": "ICAKE20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 242,
										"src": "19628:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICAKE20_$242",
											"typeString": "contract ICAKE20"
										}
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "19628:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 717,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 143,
										"src": "19637:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$143",
											"typeString": "contract Ownable"
										}
									},
									"id": 718,
									"nodeType": "InheritanceSpecifier",
									"src": "19637:7:0"
								}
							],
							"contractDependencies": [
								26,
								143,
								242
							],
							"contractKind": "contract",
							"documentation": {
								"id": 712,
								"nodeType": "StructuredDocumentation",
								"src": "18432:1167:0",
								"text": " @dev Implementation of the {ICAKE20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {CAKE20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-CAKE20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of CAKE20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {ICAKE20-approve}."
							},
							"fullyImplemented": true,
							"id": 1231,
							"linearizedBaseContracts": [
								1231,
								143,
								242,
								26
							],
							"name": "CAKE20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 721,
									"libraryName": {
										"contractScope": null,
										"id": 719,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 509,
										"src": "19657:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$509",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19651:27:0",
									"typeName": {
										"id": 720,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19670:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 724,
									"libraryName": {
										"contractScope": null,
										"id": 722,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 711,
										"src": "19689:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$711",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19683:26:0",
									"typeName": {
										"id": 723,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19701:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 728,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1231,
									"src": "19715:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 727,
										"keyType": {
											"id": 725,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "19723:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "19715:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 726,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "19734:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 734,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1231,
									"src": "19767:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 733,
										"keyType": {
											"id": 729,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "19775:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "19767:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 732,
											"keyType": {
												"id": 730,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "19794:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "19786:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 731,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19805:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 736,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1231,
									"src": "19841:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19841:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 738,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1231,
									"src": "19876:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 737,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "19876:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 740,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1231,
									"src": "19902:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 739,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "19902:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 742,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1231,
									"src": "19930:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 741,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "19930:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "20337:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 750,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "20347:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 751,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "20355:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "20347:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "20347:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 754,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "20369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 755,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "20379:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "20369:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "20369:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 758,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "20395:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20407:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "20395:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "20395:14:0"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "19960:311:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 763,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 763,
												"src": "20288:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 744,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 763,
												"src": "20308:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20287:42:0"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20337:0:0"
									},
									"scope": 1231,
									"src": "20276:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "20541:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "20558:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20558:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 769,
												"id": 772,
												"nodeType": "Return",
												"src": "20551:14:0"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "20422:53:0",
										"text": " @dev Returns the CAKE token owner."
									},
									"functionSelector": "893d20e8",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 766,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20509:8:0"
									},
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20497:2:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 774,
												"src": "20532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20531:9:0"
									},
									"scope": 1231,
									"src": "20480:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										167
									],
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "20691:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 738,
													"src": "20708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "20701:12:0"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "20578:47:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 777,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20653:8:0"
									},
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20643:2:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 784,
												"src": "20676:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 778,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20676:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20675:15:0"
									},
									"scope": 1231,
									"src": "20630:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "20839:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 791,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "20856:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 790,
												"id": 792,
												"nodeType": "Return",
												"src": "20849:16:0"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "20726:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 787,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20809:8:0"
									},
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20799:2:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "20832:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 788,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20832:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20831:7:0"
									},
									"scope": 1231,
									"src": "20782:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "20995:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 801,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "21012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 800,
												"id": 802,
												"nodeType": "Return",
												"src": "21005:14:0"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "20878:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 797,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20957:8:0"
									},
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20947:2:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 804,
												"src": "20980:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20979:15:0"
									},
									"scope": 1231,
									"src": "20932:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										149
									],
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "21148:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 811,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 736,
													"src": "21165:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 810,
												"id": 812,
												"nodeType": "Return",
												"src": "21158:19:0"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "21032:49:0",
										"text": " @dev See {CAKE20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 807,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21116:8:0"
									},
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21106:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 814,
												"src": "21139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21138:9:0"
									},
									"scope": 1231,
									"src": "21086:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										181
									],
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "21317:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 823,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "21334:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 825,
													"indexExpression": {
														"argumentTypes": null,
														"id": 824,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "21344:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21334:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 826,
												"nodeType": "Return",
												"src": "21327:25:0"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "21190:47:0",
										"text": " @dev See {CAKE20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21285:8:0"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "21261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21260:17:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "21308:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21307:9:0"
									},
									"scope": 1231,
									"src": "21242:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "21646:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 840,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "21666:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21666:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 842,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "21680:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "21691:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "21656:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21656:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "21656:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21715:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 838,
												"id": 847,
												"nodeType": "Return",
												"src": "21708:11:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "21365:192:0",
										"text": " @dev See {CAKE20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 835,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21622:8:0"
									},
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "21580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "21599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21579:35:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "21640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21639:6:0"
									},
									"scope": 1231,
									"src": "21562:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										201
									],
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "21874:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 860,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "21891:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 862,
														"indexExpression": {
															"argumentTypes": null,
															"id": 861,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "21903:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 864,
													"indexExpression": {
														"argumentTypes": null,
														"id": 863,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "21910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21891:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 859,
												"id": 865,
												"nodeType": "Return",
												"src": "21884:34:0"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "21732:47:0",
										"text": " @dev See {CAKE20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 856,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21842:8:0"
									},
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 867,
												"src": "21803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 867,
												"src": "21818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21802:32:0"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 867,
												"src": "21865:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21864:9:0"
									},
									"scope": 1231,
									"src": "21784:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "22144:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 879,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "22163:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22163:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 881,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "22177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "22186:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "22154:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22154:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "22154:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22210:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 877,
												"id": 886,
												"nodeType": "Return",
												"src": "22203:11:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "21931:127:0",
										"text": " @dev See {CAKE20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 874,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22120:8:0"
									},
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "22080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "22097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22079:33:0"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "22138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22137:6:0"
									},
									"scope": 1231,
									"src": "22063:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										223
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "22814:252:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 902,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "22834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 903,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "22842:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 904,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "22853:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "22824:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22824:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "22824:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 908,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "22892:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 909,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "22912:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22912:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 918,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "22976:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "43414b4532303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22984:43:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_037a800c383c8b41b7f30fd6fdbe6b4a969472a92c909c5e3a50fbad30140e2f",
																		"typeString": "literal_string \"CAKE20: transfer amount exceeds allowance\""
																	},
																	"value": "CAKE20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_037a800c383c8b41b7f30fd6fdbe6b4a969472a92c909c5e3a50fbad30140e2f",
																		"typeString": "literal_string \"CAKE20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 911,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "22938:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 913,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 912,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 891,
																			"src": "22950:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22938:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 916,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 914,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "22958:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22958:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22938:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "22938:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22938:90:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "22870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22870:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "22870:168:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23055:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 900,
												"id": 924,
												"nodeType": "Return",
												"src": "23048:11:0"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "22227:448:0",
										"text": " @dev See {CAKE20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {CAKE20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22790:8:0"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "22711:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "22735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "22762:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22701:81:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "22808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22807:6:0"
									},
									"scope": 1231,
									"src": "22680:386:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "23547:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 937,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "23566:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23566:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 939,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "23580:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 947,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "23628:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 940,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "23589:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 943,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 941,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "23601:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23601:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23589:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 945,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 944,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "23615:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23589:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 269,
																"src": "23589:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23589:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "23557:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23557:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "23557:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23657:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 935,
												"id": 952,
												"nodeType": "Return",
												"src": "23650:11:0"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "23072:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {CAKE20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "23488:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "23505:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23487:37:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "23541:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23541:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23540:6:0"
									},
									"scope": 1231,
									"src": "23461:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "24246:214:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 965,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "24278:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24278:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 967,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "24304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 975,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "24364:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "43414b4532303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24381:40:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_7426a02a8645a4fc3fbe54503be0c6ef4e20d7e78f4110ed802fa144a020d321",
																		"typeString": "literal_string \"CAKE20: decreased allowance below zero\""
																	},
																	"value": "CAKE20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_7426a02a8645a4fc3fbe54503be0c6ef4e20d7e78f4110ed802fa144a020d321",
																		"typeString": "literal_string \"CAKE20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 968,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "24325:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 971,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 969,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "24337:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24337:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24325:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 973,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 972,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "24351:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24325:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "24325:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24325:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 964,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "24256:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24256:176:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "24256:176:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24449:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 963,
												"id": 981,
												"nodeType": "Return",
												"src": "24442:11:0"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "23674:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {CAKE20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "24182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "24199:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24181:42:0"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "24240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24239:6:0"
									},
									"scope": 1231,
									"src": "24155:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "24730:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 994,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "24746:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24746:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 996,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "24760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "24740:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24740:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "24740:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24784:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 992,
												"id": 1000,
												"nodeType": "Return",
												"src": "24777:11:0"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "24466:197:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 989,
											"modifierName": {
												"argumentTypes": null,
												"id": 988,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "24705:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "24705:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "24682:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24681:16:0"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "24724:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24723:6:0"
									},
									"scope": 1231,
									"src": "24668:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "25378:388:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1013,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "25396:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25414:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1014,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25406:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25396:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4532303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25418:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f602c3ca62830526fb39312611c26f66e9439b2bdd3e2c3a3e2a522717508c4",
																"typeString": "literal_string \"CAKE20: transfer from the zero address\""
															},
															"value": "CAKE20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f602c3ca62830526fb39312611c26f66e9439b2bdd3e2c3a3e2a522717508c4",
																"typeString": "literal_string \"CAKE20: transfer from the zero address\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "25388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25388:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "25388:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1023,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "25477:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25498:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25490:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1024,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25490:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25490:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25477:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4532303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25502:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac1d5373694637d2969063be6d0102dc19599842fefc49d9b9656600338f4bd7",
																"typeString": "literal_string \"CAKE20: transfer to the zero address\""
															},
															"value": "CAKE20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac1d5373694637d2969063be6d0102dc19599842fefc49d9b9656600338f4bd7",
																"typeString": "literal_string \"CAKE20: transfer to the zero address\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "25469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25469:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "25469:72:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1032,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "25552:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "25562:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25552:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1039,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "25594:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "43414b4532303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25602:41:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_6883c37a4c18e68948a3674af93a21b6c0026d301016300c1e6da51f1448eb28",
																	"typeString": "literal_string \"CAKE20: transfer amount exceeds balance\""
																},
																"value": "CAKE20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_6883c37a4c18e68948a3674af93a21b6c0026d301016300c1e6da51f1448eb28",
																	"typeString": "literal_string \"CAKE20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1035,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "25572:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1037,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1036,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "25582:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25572:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 314,
															"src": "25572:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25572:72:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25552:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "25552:92:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1044,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "25654:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1046,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1045,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "25664:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25654:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1051,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "25702:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1047,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "25677:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1049,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1048,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "25687:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25677:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "25677:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25677:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25654:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "25654:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1056,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "25733:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1057,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "25741:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1058,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "25752:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "25724:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25724:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "EmitStatement",
												"src": "25719:40:0"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "24801:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25297:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25321:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "25348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25287:81:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25378:0:0"
									},
									"scope": 1231,
									"src": "25269:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "26093:246:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1071,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "26111:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26130:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26122:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1072,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26122:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26122:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26111:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4532303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26134:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e77859f1f4770cd4620f2e0991f715318a410a62c1f9155b541081a8df49c6c",
																"typeString": "literal_string \"CAKE20: mint to the zero address\""
															},
															"value": "CAKE20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e77859f1f4770cd4620f2e0991f715318a410a62c1f9155b541081a8df49c6c",
																"typeString": "literal_string \"CAKE20: mint to the zero address\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26103:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "26103:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1080,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "26180:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1083,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "26212:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1081,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "26195:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "26195:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26195:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26180:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "26180:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1087,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "26229:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1089,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1088,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "26239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26229:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1094,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "26273:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1090,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "26250:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1092,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1091,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "26260:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26250:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "26250:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26250:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26229:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "26229:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26312:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26304:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1099,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26304:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26304:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1103,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "26316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "26325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "26295:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26295:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "EmitStatement",
												"src": "26290:42:0"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "25772:259:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1108,
												"src": "26051:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1108,
												"src": "26068:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26050:33:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26093:0:0"
									},
									"scope": 1231,
									"src": "26036:303:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "26715:287:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1117,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "26733:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26752:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26744:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26744:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26733:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4532303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26756:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_617814291e8602af51ad96ddc0cc6758194368d9c89c0fefa01cc8274ed76b40",
																"typeString": "literal_string \"CAKE20: burn from the zero address\""
															},
															"value": "CAKE20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_617814291e8602af51ad96ddc0cc6758194368d9c89c0fefa01cc8274ed76b40",
																"typeString": "literal_string \"CAKE20: burn from the zero address\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26725:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "26725:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1126,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "26804:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1128,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1127,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "26814:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26804:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1133,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "26848:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "43414b4532303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26856:37:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b0a15fe54f9304c2f32e4a01c86079ddcb8a2a9b6e29161078501c62ccecd659",
																	"typeString": "literal_string \"CAKE20: burn amount exceeds balance\""
																},
																"value": "CAKE20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_b0a15fe54f9304c2f32e4a01c86079ddcb8a2a9b6e29161078501c62ccecd659",
																	"typeString": "literal_string \"CAKE20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1129,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "26825:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1131,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1130,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "26835:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26825:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 314,
															"src": "26825:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26825:69:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26804:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "26804:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1138,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "26904:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1141,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "26936:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1139,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "26919:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 286,
															"src": "26919:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26919:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26904:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "26904:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1146,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "26967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26984:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26976:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26976:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26976:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "26988:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "26958:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26958:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "EmitStatement",
												"src": "26953:42:0"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "26345:308:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "26673:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "26690:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26672:33:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26715:0:0"
									},
									"scope": 1231,
									"src": "26658:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "27532:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "27550:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27567:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1167,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27559:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27559:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27550:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4532303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27571:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8a22d3b0f46cb8553e794906ffc1b6e8656f593e72d64cb7102cb1f934afaf6",
																"typeString": "literal_string \"CAKE20: approve from the zero address\""
															},
															"value": "CAKE20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8a22d3b0f46cb8553e794906ffc1b6e8656f593e72d64cb7102cb1f934afaf6",
																"typeString": "literal_string \"CAKE20: approve from the zero address\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27542:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "27542:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1176,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "27629:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27648:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27640:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1177,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27640:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27640:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27629:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4532303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27652:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_818980e094d98e32545e5a09b38cf4334a5aa9765c6adbd223fdb87d9a48dd60",
																"typeString": "literal_string \"CAKE20: approve to the zero address\""
															},
															"value": "CAKE20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_818980e094d98e32545e5a09b38cf4334a5aa9765c6adbd223fdb87d9a48dd60",
																"typeString": "literal_string \"CAKE20: approve to the zero address\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27621:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "27621:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1185,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "27701:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1188,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1186,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "27713:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27701:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1187,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "27720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27701:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1190,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "27731:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27701:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "27701:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1194,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "27761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1195,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "27768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1196,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "27777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "27752:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27752:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "EmitStatement",
												"src": "27747:37:0"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "27008:414:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "27454:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "27477:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "27502:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27444:78:0"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27532:0:0"
									},
									"scope": 1231,
									"src": "27427:364:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "28030:215:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "28046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "28055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "28040:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28040:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "28040:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1214,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "28094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1215,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "28115:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28115:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1224,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "28180:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "43414b4532303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28188:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bd4f720c889e8c3de7495ba2e69360105a5877a9aa7e6b28fb2ad5b46a36a3cf",
																		"typeString": "literal_string \"CAKE20: burn amount exceeds allowance\""
																	},
																	"value": "CAKE20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_bd4f720c889e8c3de7495ba2e69360105a5877a9aa7e6b28fb2ad5b46a36a3cf",
																		"typeString": "literal_string \"CAKE20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1217,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "28141:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1219,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1218,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "28153:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28141:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1222,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1220,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "28162:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28162:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28141:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "28141:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28141:87:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1213,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "28072:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28072:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "28072:166:0"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "27797:167:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1230,
												"src": "27988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1230,
												"src": "28005:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27987:33:0"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28030:0:0"
									},
									"scope": 1231,
									"src": "27969:276:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1864,
							"src": "19600:8647:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"hexValue": "50616e63616b655377617020546f6b656e",
											"id": 1233,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28308:19:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_6fb6e6a4563b9e0948ec9f838ca98284d7540cd6666d2757085837ec6a8df2b0",
												"typeString": "literal_string \"PancakeSwap Token\""
											},
											"value": "PancakeSwap Token"
										},
										{
											"argumentTypes": null,
											"hexValue": "43616b65",
											"id": 1234,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28329:6:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_fc4fd77a70242bcf8981e2c08ac51ecb96f509c45cc339670da92f4d28b73f72",
												"typeString": "literal_string \"Cake\""
											},
											"value": "Cake"
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 1232,
										"name": "CAKE20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1231,
										"src": "28301:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CAKE20_$1231",
											"typeString": "contract CAKE20"
										}
									},
									"id": 1235,
									"nodeType": "InheritanceSpecifier",
									"src": "28301:35:0"
								}
							],
							"contractDependencies": [
								26,
								143,
								242,
								1231
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1863,
							"linearizedBaseContracts": [
								1863,
								1231,
								143,
								242,
								26
							],
							"name": "CakeToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "28501:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1246,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "28517:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1247,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "28522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1245,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "28511:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28511:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "28511:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28563:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28555:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1251,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28555:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28555:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1255,
																"name": "_delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "28567:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1257,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1256,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "28578:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28567:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1258,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "28584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1250,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "28540:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28540:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "28540:52:0"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "28343:92:0",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1243,
											"modifierName": {
												"argumentTypes": null,
												"id": 1242,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "28491:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28491:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1262,
												"src": "28454:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1262,
												"src": "28467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28453:30:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28501:0:0"
									},
									"scope": 1863,
									"src": "28440:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1266,
									"mutability": "mutable",
									"name": "_delegates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1863,
									"src": "29007:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1265,
										"keyType": {
											"id": 1263,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29016:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29007:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29027:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "CakeToken.Checkpoint",
									"id": 1271,
									"members": [
										{
											"constant": false,
											"id": 1268,
											"mutability": "mutable",
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1271,
											"src": "29166:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1267,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "29166:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1270,
											"mutability": "mutable",
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1271,
											"src": "29192:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29192:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1863,
									"src": "29138:74:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "29218:68:0",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 1278,
									"mutability": "mutable",
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1863,
									"src": "29291:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint))"
									},
									"typeName": {
										"id": 1277,
										"keyType": {
											"id": 1273,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29300:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29291:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint))"
										},
										"valueType": {
											"id": 1276,
											"keyType": {
												"id": 1274,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "29320:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "29311:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
												"typeString": "mapping(uint32 => struct CakeToken.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1275,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1271,
												"src": "29330:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$1271_storage_ptr",
													"typeString": "struct CakeToken.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "29368:54:0",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 1283,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1863,
									"src": "29427:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 1282,
										"keyType": {
											"id": 1280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29436:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29427:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 1281,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "29447:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "29483:58:0",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 1289,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1863,
									"src": "29546:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1285,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "29546:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1287,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "29598:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1286,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "29588:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "29588:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "29675:79:0",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 1295,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1863,
									"src": "29759:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1291,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "29759:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 1293,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "29815:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 1292,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "29805:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1294,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "29805:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "29883:66:0",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 1300,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1863,
									"src": "29954:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1299,
										"keyType": {
											"id": 1297,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29963:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29954:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1298,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "29974:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "30002:71:0",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"id": 1309,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1309,
												"src": "30100:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1309,
												"src": "30127:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1309,
												"src": "30157:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30099:85:0"
									},
									"src": "30078:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "30191:81:0",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"id": 1318,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "30304:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "30330:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1318,
												"src": "30352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30303:65:0"
									},
									"src": "30277:92:0"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "30609:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1326,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "30626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1328,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1327,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "30637:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30626:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1329,
												"nodeType": "Return",
												"src": "30619:28:0"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "30375:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
									},
									"functionSelector": "587cde1e",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "30530:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30529:19:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "30596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30595:9:0"
									},
									"scope": 1863,
									"src": "30511:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "30838:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1338,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "30865:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "30865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1340,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "30877:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1337,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "30855:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30855:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1342,
												"nodeType": "Return",
												"src": "30848:39:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "30659:128:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1344,
												"src": "30810:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30809:19:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30838:0:0"
									},
									"scope": 1863,
									"src": "30792:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "31490:964:0",
										"statements": [
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1446,
														"src": "31500:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1360,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "31500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1365,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "31577:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1369,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 784,
																						"src": "31626:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 1370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31626:6:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "31620:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1367,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "31620:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31620:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1366,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "31610:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31610:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1373,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "31652:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31652:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1377,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "31690:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CakeToken_$1863",
																				"typeString": "contract CakeToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CakeToken_$1863",
																				"typeString": "contract CakeToken"
																			}
																		],
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31682:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1375,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "31682:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31682:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1363,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "31549:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31549:160:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1362,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "31526:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31526:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31500:219:0"
											},
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1446,
														"src": "31730:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1382,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "31730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1387,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "31802:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1388,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "31839:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1389,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "31866:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1390,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "31889:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1385,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "31774:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31774:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31774:135:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1384,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "31751:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31751:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31730:189:0"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1446,
														"src": "31930:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1394,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "31930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32004:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1400,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "32032:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1401,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "32065:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1397,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "31970:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31970:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31970:119:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1396,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "31947:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31947:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31930:169:0"
											},
											{
												"assignments": [
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1446,
														"src": "32110:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1405,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32110:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1408,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "32140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1409,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "32148:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "32151:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1411,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "32154:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1407,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "32130:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32130:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32110:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1415,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "32174:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32195:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32187:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32187:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32187:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "32174:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32199:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid signature\""
															},
															"value": "CAKE::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid signature\""
															}
														],
														"id": 1414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "32166:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32166:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "32166:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1425,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "32258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "32267:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1426,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "32267:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1428,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1427,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "32274:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32267:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32258:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32288:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid nonce\""
															},
															"value": "CAKE::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid nonce\""
															}
														],
														"id": 1424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "32250:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32250:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "32250:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1435,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "32343:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1436,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "32350:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32343:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32358:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb",
																"typeString": "literal_string \"CAKE::delegateBySig: signature expired\""
															},
															"value": "CAKE::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb",
																"typeString": "literal_string \"CAKE::delegateBySig: signature expired\""
															}
														],
														"id": 1434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "32335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32335:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "32335:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1442,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "32426:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1443,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "32437:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1441,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "32416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32416:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1445,
												"nodeType": "Return",
												"src": "32409:38:0"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "30900:412:0",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "31349:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "31376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "31376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "31396:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "31396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "31417:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1352,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "31434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "31453:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31339:129:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31490:0:0"
									},
									"scope": 1863,
									"src": "31317:1137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "32750:146:0",
										"statements": [
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1475,
														"src": "32760:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1455,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "32760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1457,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "32782:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1459,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1458,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "32797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32782:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32760:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "32822:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32837:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "32822:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32888:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "32822:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1464,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "32841:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																	}
																},
																"id": 1466,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1465,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "32853:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32841:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																	"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																}
															},
															"id": 1470,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1467,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "32862:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32877:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32862:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32841:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																"typeString": "struct CakeToken.Checkpoint storage ref"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1270,
														"src": "32841:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1474,
												"nodeType": "Return",
												"src": "32815:74:0"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "32460:183:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1476,
												"src": "32673:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32672:17:0"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1476,
												"src": "32737:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32736:9:0"
									},
									"scope": 1863,
									"src": "32648:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "33436:1099:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1487,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "33454:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1488,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "33468:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "33468:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33454:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33482:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474",
																"typeString": "literal_string \"CAKE::getPriorVotes: not yet determined\""
															},
															"value": "CAKE::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474",
																"typeString": "literal_string \"CAKE::getPriorVotes: not yet determined\""
															}
														],
														"id": 1486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "33446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33446:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "33446:78:0"
											},
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1607,
														"src": "33535:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1494,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "33535:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1496,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "33557:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1498,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1497,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "33572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33557:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33535:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1500,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "33594:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33610:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33594:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1506,
												"nodeType": "IfStatement",
												"src": "33590:56:0",
												"trueBody": {
													"id": 1505,
													"nodeType": "Block",
													"src": "33613:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33634:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1485,
															"id": 1504,
															"nodeType": "Return",
															"src": "33627:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1507,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "33703:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																	}
																},
																"id": 1509,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1508,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "33715:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33703:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																	"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																}
															},
															"id": 1513,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1510,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "33724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33739:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "33724:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33703:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																"typeString": "struct CakeToken.Checkpoint storage ref"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "33703:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1515,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "33755:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33703:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1527,
												"nodeType": "IfStatement",
												"src": "33699:145:0",
												"trueBody": {
													"id": 1526,
													"nodeType": "Block",
													"src": "33768:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1517,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "33789:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1519,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1518,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "33801:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "33789:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																			"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1523,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1520,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "33810:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33825:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "33810:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33789:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																		"typeString": "struct CakeToken.Checkpoint storage ref"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1270,
																"src": "33789:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1485,
															"id": 1525,
															"nodeType": "Return",
															"src": "33782:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1528,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "33902:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																	}
																},
																"id": 1530,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1529,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "33914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33902:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																	"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																}
															},
															"id": 1532,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33923:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33902:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																"typeString": "struct CakeToken.Checkpoint storage ref"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "33902:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1534,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "33938:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33902:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1539,
												"nodeType": "IfStatement",
												"src": "33898:86:0",
												"trueBody": {
													"id": 1538,
													"nodeType": "Block",
													"src": "33951:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33972:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1485,
															"id": 1537,
															"nodeType": "Return",
															"src": "33965:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1607,
														"src": "33994:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1540,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "33994:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34009:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33994:16:0"
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1607,
														"src": "34020:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1544,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "34020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1549,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1546,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "34035:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34050:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "34035:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34020:31:0"
											},
											{
												"body": {
													"id": 1598,
													"nodeType": "Block",
													"src": "34083:396:0",
													"statements": [
														{
															"assignments": [
																1554
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1554,
																	"mutability": "mutable",
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1598,
																	"src": "34097:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1553,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "34097:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1563,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1555,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "34113:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1556,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1545,
																					"src": "34122:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1557,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1541,
																					"src": "34130:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "34122:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1559,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "34121:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34139:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "34121:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "34113:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34097:43:0"
														},
														{
															"assignments": [
																1565
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1565,
																	"mutability": "mutable",
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1598,
																	"src": "34181:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1271_memory_ptr",
																		"typeString": "struct CakeToken.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1564,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1271,
																		"src": "34181:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1271_storage_ptr",
																			"typeString": "struct CakeToken.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1571,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1566,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "34204:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1568,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1567,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "34216:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34204:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																		"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																	}
																},
																"id": 1570,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1569,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "34225:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34204:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																	"typeString": "struct CakeToken.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34181:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1572,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "34250:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1271_memory_ptr",
																			"typeString": "struct CakeToken.Checkpoint memory"
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1268,
																	"src": "34250:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1574,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "34266:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34250:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1580,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "34337:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$1271_memory_ptr",
																				"typeString": "struct CakeToken.Checkpoint memory"
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1268,
																		"src": "34337:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1582,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "34352:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "34337:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1595,
																	"nodeType": "Block",
																	"src": "34418:51:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1589,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1545,
																					"src": "34436:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1590,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1554,
																						"src": "34444:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1591,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "34453:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "34444:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "34436:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1594,
																			"nodeType": "ExpressionStatement",
																			"src": "34436:18:0"
																		}
																	]
																},
																"id": 1596,
																"nodeType": "IfStatement",
																"src": "34333:136:0",
																"trueBody": {
																	"id": 1588,
																	"nodeType": "Block",
																	"src": "34365:47:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1584,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1541,
																					"src": "34383:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1585,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1554,
																					"src": "34391:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "34383:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1587,
																			"nodeType": "ExpressionStatement",
																			"src": "34383:14:0"
																		}
																	]
																}
															},
															"id": 1597,
															"nodeType": "IfStatement",
															"src": "34246:223:0",
															"trueBody": {
																"id": 1579,
																"nodeType": "Block",
																"src": "34279:48:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1576,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1565,
																				"src": "34304:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$1271_memory_ptr",
																					"typeString": "struct CakeToken.Checkpoint memory"
																				}
																			},
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1270,
																			"src": "34304:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1485,
																		"id": 1578,
																		"nodeType": "Return",
																		"src": "34297:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1550,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "34068:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1551,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "34076:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "34068:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1599,
												"nodeType": "WhileStatement",
												"src": "34061:418:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1600,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "34495:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																}
															},
															"id": 1602,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1601,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "34507:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34495:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
															}
														},
														"id": 1604,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1603,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "34516:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34495:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
															"typeString": "struct CakeToken.Checkpoint storage ref"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1270,
													"src": "34495:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1606,
												"nodeType": "Return",
												"src": "34488:40:0"
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "32902:411:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "33341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "33358:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "33358:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33340:35:0"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "33423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33422:9:0"
									},
									"scope": 1863,
									"src": "33318:1217:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "34619:350:0",
										"statements": [
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1645,
														"src": "34629:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34629:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1617,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "34655:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1619,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1618,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "34666:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34655:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34629:47:0"
											},
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1645,
														"src": "34686:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1626,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1624,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "34723:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1623,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "34713:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34713:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34686:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1627,
															"name": "_delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "34788:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1629,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1628,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "34799:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34788:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1630,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "34812:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34788:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "34788:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1634,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "34853:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "34864:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1636,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "34881:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1633,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "34837:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34837:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "EmitStatement",
												"src": "34832:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1640,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "34917:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1641,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "34934:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1642,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "34945:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1639,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "34902:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34902:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "34902:60:0"
											}
										]
									},
									"documentation": null,
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "34560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "34579:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34559:38:0"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34619:0:0"
									},
									"scope": 1863,
									"src": "34541:428:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "35056:848:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1655,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "35070:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1656,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "35080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "35070:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1658,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "35090:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35099:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "35090:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35070:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1751,
												"nodeType": "IfStatement",
												"src": "35066:832:0",
												"trueBody": {
													"id": 1750,
													"nodeType": "Block",
													"src": "35102:796:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1662,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "35120:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35138:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "35130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1663,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "35130:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35130:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "35120:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1705,
															"nodeType": "IfStatement",
															"src": "35116:379:0",
															"trueBody": {
																"id": 1704,
																"nodeType": "Block",
																"src": "35142:353:0",
																"statements": [
																	{
																		"assignments": [
																			1669
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1669,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1704,
																				"src": "35207:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1668,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "35207:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1673,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1670,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "35226:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1672,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1671,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1648,
																				"src": "35241:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35226:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "35207:41:0"
																	},
																	{
																		"assignments": [
																			1675
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1675,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1704,
																				"src": "35266:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1674,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "35266:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1689,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1676,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1669,
																					"src": "35286:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "35298:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "35286:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35345:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "35286:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1679,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1278,
																							"src": "35302:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1681,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1680,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1648,
																							"src": "35314:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "35302:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																							"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1685,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1684,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1682,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1669,
																							"src": "35322:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1683,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35334:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "35322:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "35302:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																						"typeString": "struct CakeToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1686,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1270,
																				"src": "35302:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "35266:80:0"
																	},
																	{
																		"assignments": [
																			1691
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1691,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1704,
																				"src": "35364:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1690,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "35364:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1696,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1694,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1652,
																					"src": "35398:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1692,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1675,
																					"src": "35384:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 286,
																				"src": "35384:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35384:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "35364:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1698,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1648,
																					"src": "35440:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1699,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1669,
																					"src": "35448:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1700,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1675,
																					"src": "35459:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1701,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "35470:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1697,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "35423:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35423:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1703,
																		"nodeType": "ExpressionStatement",
																		"src": "35423:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1706,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "35513:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35531:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "35523:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1707,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "35523:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35523:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "35513:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1749,
															"nodeType": "IfStatement",
															"src": "35509:379:0",
															"trueBody": {
																"id": 1748,
																"nodeType": "Block",
																"src": "35535:353:0",
																"statements": [
																	{
																		"assignments": [
																			1713
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1713,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1748,
																				"src": "35600:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1712,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "35600:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1717,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1714,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "35619:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1716,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1715,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1650,
																				"src": "35634:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35619:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "35600:41:0"
																	},
																	{
																		"assignments": [
																			1719
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1719,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1748,
																				"src": "35659:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1718,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "35659:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1733,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1720,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1713,
																					"src": "35679:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1721,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "35691:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "35679:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35738:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "35679:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1723,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1278,
																							"src": "35695:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1725,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1724,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1650,
																							"src": "35707:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "35695:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																							"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1729,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1726,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1713,
																							"src": "35715:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1727,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35727:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "35715:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "35695:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																						"typeString": "struct CakeToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1730,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1270,
																				"src": "35695:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "35659:80:0"
																	},
																	{
																		"assignments": [
																			1735
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1735,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1748,
																				"src": "35757:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1734,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "35757:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1740,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1738,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1652,
																					"src": "35791:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1736,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1719,
																					"src": "35777:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 269,
																				"src": "35777:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35777:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "35757:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1742,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1650,
																					"src": "35833:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1743,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1713,
																					"src": "35841:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1744,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1719,
																					"src": "35852:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1745,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "35863:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1741,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "35816:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35816:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1747,
																		"nodeType": "ExpressionStatement",
																		"src": "35816:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1753,
												"src": "34999:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1753,
												"src": "35015:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1753,
												"src": "35031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34998:48:0"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35056:0:0"
									},
									"scope": 1863,
									"src": "34975:929:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "36071:525:0",
										"statements": [
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1825,
														"src": "36081:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1764,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "36081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1767,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "36109:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "36109:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36123:54:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f",
																"typeString": "literal_string \"CAKE::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "CAKE::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f",
																"typeString": "literal_string \"CAKE::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1766,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "36102:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36102:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36081:97:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1772,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "36193:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36208:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "36193:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1775,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "36213:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1777,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1776,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "36225:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "36213:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																		"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																	}
																},
																"id": 1781,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1778,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "36236:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36251:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "36236:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36213:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																	"typeString": "struct CakeToken.Checkpoint storage ref"
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1268,
															"src": "36213:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1783,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "36267:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "36213:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36193:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1817,
													"nodeType": "Block",
													"src": "36368:155:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1798,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "36382:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1801,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1799,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1755,
																			"src": "36394:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "36382:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																			"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1802,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1800,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "36405:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "36382:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																		"typeString": "struct CakeToken.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1804,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1765,
																			"src": "36432:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1805,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1761,
																			"src": "36445:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1803,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "36421:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$1271_storage_ptr_$",
																			"typeString": "type(struct CakeToken.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36421:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1271_memory_ptr",
																		"typeString": "struct CakeToken.Checkpoint memory"
																	}
																},
																"src": "36382:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																	"typeString": "struct CakeToken.Checkpoint storage ref"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "36382:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1809,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "36468:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1811,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1810,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "36483:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "36468:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1812,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "36496:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36511:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "36496:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "36468:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1816,
															"nodeType": "ExpressionStatement",
															"src": "36468:44:0"
														}
													]
												},
												"id": 1818,
												"nodeType": "IfStatement",
												"src": "36189:334:0",
												"trueBody": {
													"id": 1797,
													"nodeType": "Block",
													"src": "36280:82:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1786,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "36294:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																				}
																			},
																			"id": 1791,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1787,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1755,
																				"src": "36306:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "36294:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1271_storage_$",
																				"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																			}
																		},
																		"id": 1792,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1788,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1757,
																				"src": "36317:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36332:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "36317:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "36294:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1271_storage",
																			"typeString": "struct CakeToken.Checkpoint storage ref"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1270,
																	"src": "36294:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1794,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "36343:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36294:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "36294:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1820,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "36559:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1821,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "36570:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1822,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "36580:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1819,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "36538:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36538:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "EmitStatement",
												"src": "36533:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1826,
												"src": "35945:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1826,
												"src": "35972:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1756,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "35972:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1826,
												"src": "36001:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1826,
												"src": "36027:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35935:114:0"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36071:0:0"
									},
									"scope": 1863,
									"src": "35910:686:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "36685:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1836,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "36703:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36707:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36710:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "36707:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "36703:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1841,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "36714:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36695:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "36695:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1846,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "36751:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "36744:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1844,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "36744:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36744:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1848,
												"nodeType": "Return",
												"src": "36737:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1850,
												"src": "36618:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "36618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1850,
												"src": "36626:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36626:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36617:36:0"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1850,
												"src": "36677:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1832,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "36677:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36676:8:0"
									},
									"scope": 1863,
									"src": "36602:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "36817:98:0",
										"statements": [
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1861,
														"src": "36827:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1857,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "36827:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36861:24:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36863:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "36874:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "36874:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "36863:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1856,
														"isOffset": false,
														"isSlot": false,
														"src": "36863:7:0",
														"valueSize": 1
													}
												],
												"id": 1858,
												"nodeType": "InlineAssembly",
												"src": "36852:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1859,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1856,
													"src": "36901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1860,
												"nodeType": "Return",
												"src": "36894:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36785:2:0"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1862,
												"src": "36811:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "36811:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36810:6:0"
									},
									"scope": 1863,
									"src": "36766:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1864,
							"src": "28279:8638:0"
						}
					],
					"src": "32:36885:0"
				},
				"id": 0
			}
		}
	}
}